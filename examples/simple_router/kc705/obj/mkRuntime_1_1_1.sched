=== Generated schedule for mkRuntime_1_1_1 ===

Method schedule
---------------
Method: rxchan_0_macRx_put
Ready signal: macToRing_0_gearbox_in_ff.i_notFull
Conflict-free: rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Conflicts: rxchan_0_macRx_put
 
Method: rxchan_0_writeClient_first
Ready signal: hostchan_0_writeDataFifo.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: rxchan_0_writeClient_deq
 
Method: rxchan_0_writeClient_deq
Ready signal: hostchan_0_writeDataFifo.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced after: rxchan_0_writeClient_first, rxchan_0_writeClient_notEmpty
Conflicts: rxchan_0_writeClient_deq
 
Method: rxchan_0_writeClient_notEmpty
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: rxchan_0_writeClient_deq
 
Method: rxchan_0_next_first
Ready signal: hostchan_0_outReqFifo.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: rxchan_0_next_deq
 
Method: rxchan_0_next_deq
Ready signal: hostchan_0_outReqFifo.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced after: rxchan_0_next_first, rxchan_0_next_notEmpty
Conflicts: rxchan_0_next_deq
 
Method: rxchan_0_next_notEmpty
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: rxchan_0_next_deq
 
Method: rxchan_0_verbose_enq
Ready signal: verbose_ff_0_1.i_notFull
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull
Sequenced after (restricted): rxchan_0_verbose_notFull
Conflicts: rxchan_0_verbose_enq, set_verbosity
 
Method: rxchan_0_verbose_notFull
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull
Sequenced before (restricted): rxchan_0_verbose_enq, set_verbosity
 
Method: hostchan_0_writeServer_enq
Ready signal: pktBuff_0.RDY_writeServer_enq
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced after: hostchan_0_writeServer_notFull
Conflicts: hostchan_0_writeServer_enq
 
Method: hostchan_0_writeServer_notFull
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: hostchan_0_writeServer_enq
 
Method: hostchan_0_writeClient_first
Ready signal: writeDataFifo_0.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: hostchan_0_writeClient_deq
 
Method: hostchan_0_writeClient_deq
Ready signal: writeDataFifo_0.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced after: hostchan_0_writeClient_first, hostchan_0_writeClient_notEmpty
Conflicts: hostchan_0_writeClient_deq
 
Method: hostchan_0_writeClient_notEmpty
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: hostchan_0_writeClient_deq
 
Method: hostchan_0_next_first
Ready signal: outReqFifo_0.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: hostchan_0_next_deq
 
Method: hostchan_0_next_deq
Ready signal: outReqFifo_0.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced after: hostchan_0_next_first, hostchan_0_next_notEmpty
Conflicts: hostchan_0_next_deq
 
Method: hostchan_0_next_notEmpty
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: hostchan_0_next_deq
 
Method: hostchan_0_verbose_enq
Ready signal: verbose_ff_0.i_notFull
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull
Sequenced after (restricted): hostchan_0_verbose_notFull
Conflicts: hostchan_0_verbose_enq, set_verbosity
 
Method: hostchan_0_verbose_notFull
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull
Sequenced before (restricted): hostchan_0_verbose_enq, set_verbosity
 
Method: txchan_0_writeServer_enq
Ready signal: pktBuff_0_fifoWriteData.i_notFull
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced after: txchan_0_writeServer_notFull
Conflicts: txchan_0_writeServer_enq
 
Method: txchan_0_writeServer_notFull
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: txchan_0_writeServer_enq
 
Method: txchan_0_macTx_get
Ready signal: ringToMac_0_writeMacFifo.i_notEmpty
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Conflicts: txchan_0_macTx_get
 
Method: txchan_0_verbose_enq
Ready signal: verbose_ff_0_3.i_notFull
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull
Sequenced after: txchan_0_verbose_notFull
Conflicts: txchan_0_verbose_enq, set_verbosity
 
Method: txchan_0_verbose_notFull
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull
Sequenced before: txchan_0_verbose_enq, set_verbosity
 
Method: prev_0_enq
Ready signal: meta_ff_0.i_notFull
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced after: prev_0_notFull
Conflicts: prev_0_enq
 
Method: prev_0_notFull
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: prev_0_enq
 
Method: prev_1_enq
Ready signal: meta_ff_1.i_notFull
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       set_verbosity
Sequenced after: prev_1_notFull
Conflicts: prev_1_enq
 
Method: prev_1_notFull
Ready signal: True
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       rxchan_0_verbose_enq,
	       rxchan_0_verbose_notFull,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       hostchan_0_verbose_enq,
	       hostchan_0_verbose_notFull,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       txchan_0_verbose_enq,
	       txchan_0_verbose_notFull,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_notFull,
	       set_verbosity
Sequenced before: prev_1_enq
 
Method: set_verbosity
Ready signal: verbose_ff_0_1.i_notFull &&
	      verbose_ff_0.i_notFull &&
	      verbose_ff_0_3.i_notFull &&
	      verbose_ff_0_2.i_notFull && verbose_ff_1.i_notFull
Conflict-free: rxchan_0_macRx_put,
	       rxchan_0_writeClient_first,
	       rxchan_0_writeClient_deq,
	       rxchan_0_writeClient_notEmpty,
	       rxchan_0_next_first,
	       rxchan_0_next_deq,
	       rxchan_0_next_notEmpty,
	       hostchan_0_writeServer_enq,
	       hostchan_0_writeServer_notFull,
	       hostchan_0_writeClient_first,
	       hostchan_0_writeClient_deq,
	       hostchan_0_writeClient_notEmpty,
	       hostchan_0_next_first,
	       hostchan_0_next_deq,
	       hostchan_0_next_notEmpty,
	       txchan_0_writeServer_enq,
	       txchan_0_writeServer_notFull,
	       txchan_0_macTx_get,
	       prev_0_enq,
	       prev_0_notFull,
	       prev_1_enq,
	       prev_1_notFull
Sequenced after: txchan_0_verbose_notFull
Sequenced after (restricted): rxchan_0_verbose_notFull,
			      hostchan_0_verbose_notFull
Conflicts: rxchan_0_verbose_enq,
	   hostchan_0_verbose_enq,
	   txchan_0_verbose_enq,
	   set_verbosity
 
Rule schedule
-------------
Rule: mkConnectionGetPut
Predicate: pktBuff_0.RDY_readServer_readReq_put && readReqFifo_0.i_notEmpty
Blocking rules: (none)
 
Rule: mkConnectionGetPut_1
Predicate: pktBuff_0.RDY_readServer_readData_get && readDataFifo_0.i_notFull
Blocking rules: (none)
 
Rule: mkConnectionGetPut_2
Predicate: pktBuff_0.RDY_readServer_readLen_get && readLenFifo_0.i_notFull
Blocking rules: (none)
 
Rule: packetReadStart
Predicate: readLenFifo_0.i_notEmpty &&
	   pktLenFifo_0.i_notFull && readReqFifo_0.i_notFull &&
	   (! readStarted_0)
Blocking rules: (none)
 
Rule: packetReadInProgress
Predicate: parser_0.RDY_frameIn_put &&
	   readDataFifo_0.i_notEmpty && writeDataFifo_0.i_notFull &&
	   readStarted_0
Blocking rules: (none)
 
Rule: dispatch_packet
Predicate: parser_0.RDY_meta_get &&
	   pktLenFifo_0.i_notEmpty && outReqFifo_0.i_notFull
Blocking rules: (none)
 
Rule: set_verbose
Predicate: verbose_ff_0.i_notEmpty && verbose_ff_0.notEmpty
Blocking rules: (none)
 
Rule: hostchan_0_mkConnectionGetPut
Predicate: hostchan_0_pktBuff.RDY_readServer_readReq_put &&
	   hostchan_0_readReqFifo.i_notEmpty
Blocking rules: (none)
 
Rule: hostchan_0_1_mkConnectionGetPut
Predicate: hostchan_0_pktBuff.RDY_readServer_readData_get &&
	   hostchan_0_readDataFifo.i_notFull
Blocking rules: (none)
 
Rule: hostchan_0_2_mkConnectionGetPut
Predicate: hostchan_0_pktBuff.RDY_readServer_readLen_get &&
	   hostchan_0_readLenFifo.i_notFull
Blocking rules: (none)
 
Rule: hostchan_0_packetReadStart
Predicate: hostchan_0_readLenFifo.i_notEmpty &&
	   hostchan_0_pktLenFifo.i_notFull &&
	   hostchan_0_readReqFifo.i_notFull &&
	   (! hostchan_0_readStarted)
Blocking rules: (none)
 
Rule: hostchan_0_packetReadInProgress
Predicate: hostchan_0_parser.RDY_frameIn_put &&
	   hostchan_0_readDataFifo.i_notEmpty &&
	   hostchan_0_writeDataFifo.i_notFull &&
	   hostchan_0_readStarted
Blocking rules: (none)
 
Rule: hostchan_0_dispatch_packet
Predicate: hostchan_0_parser.RDY_meta_get &&
	   hostchan_0_pktLenFifo.i_notEmpty && hostchan_0_outReqFifo.i_notFull
Blocking rules: (none)
 
Rule: hostchan_0_set_verbose
Predicate: hostchan_0_verbose_ff.i_notEmpty && hostchan_0_verbose_ff.notEmpty
Blocking rules: (none)
 
Rule: macToRing_0_total_cycle
Predicate: True
Blocking rules: (none)
 
Rule: macToRing_0_gearbox_startOfPacket
Predicate: macToRing_0_gearbox_in_ff.i_notEmpty &&
	   (! macToRing_0_gearbox_inProgress)
Blocking rules: (none)
 
Rule: macToRing_0_gearbox_readPacketOdd
Predicate: macToRing_0_gearbox_in_ff.i_notEmpty &&
	   ((! macToRing_0_gearbox_in_ff.first[0]) ||
	    macToRing_0_gearbox_out_ff.i_notFull) &&
	   macToRing_0_gearbox_inProgress && macToRing_0_gearbox_oddBeat
Blocking rules: (none)
 
Rule: macToRing_0_gearbox_readPacketEven
Predicate: macToRing_0_gearbox_in_ff.i_notEmpty &&
	   macToRing_0_gearbox_out_ff.i_notFull &&
	   macToRing_0_gearbox_inProgress && (! macToRing_0_gearbox_oddBeat)
Blocking rules: (none)
 
Rule: macToRing_0_gearbox_count_idle_cycles
Predicate: ! macToRing_0_gearbox_inProgress
Blocking rules: (none)
 
Rule: macToRing_0_writeData
Predicate: macToRing_0_writeDataFifo.RDY_enq &&
	   macToRing_0_gearbox_out_ff.i_notEmpty
Blocking rules: (none)
 
Rule: connect
Predicate: macToRing_0_writeDataFifo.RDY_deq &&
	   macToRing_0_writeDataFifo.RDY_first &&
	   hostchan_0_pktBuff.RDY_writeServer_enq
Blocking rules: (none)
 
Rule: set_verbose_1
Predicate: verbose_ff_0_1.i_notEmpty && verbose_ff_0_1.notEmpty
Blocking rules: (none)
 
Rule: pktBuff_0_mkConnectionGetPut
Predicate: pktBuff_0_pktBuff.RDY_readServer_readReq_put &&
	   pktBuff_0_readReqFifo.i_notEmpty
Blocking rules: (none)
 
Rule: pktBuff_0_1_mkConnectionGetPut
Predicate: pktBuff_0_pktBuff.RDY_readServer_readData_get &&
	   pktBuff_0_readDataFifo.i_notFull
Blocking rules: (none)
 
Rule: pktBuff_0_2_mkConnectionGetPut
Predicate: pktBuff_0_pktBuff.RDY_readServer_readLen_get &&
	   pktBuff_0_readLenFifo.i_notFull
Blocking rules: (none)
 
Rule: pktBuff_0_packetReadStart
Predicate: pktBuff_0_meta_ff.i_notEmpty &&
	   pktBuff_0_readLenFifo.i_notEmpty &&
	   pktBuff_0_readReqFifo.i_notFull &&
	   (! pktBuff_0_readStarted)
Blocking rules: (none)
 
Rule: pktBuff_0_packetReadInProgress
Predicate: pktBuff_0_readDataFifo.i_notEmpty &&
	   pktBuff_0_writeDataFifo.i_notFull &&
	   pktBuff_0_readStarted
Blocking rules: (none)
 
Rule: pkt_buff_to_modifier
Predicate: modifier_0.RDY_writeServer_enq &&
	   pktBuff_0_writeDataFifo.i_notEmpty
Blocking rules: (none)
 
Rule: rl_dispatch_metadata
Predicate: modifier_0.RDY_prev_enq &&
	   meta_ff_0_1.i_notEmpty && pktBuff_0_meta_ff.i_notFull
Blocking rules: (none)
 
Rule: set_verbose_2
Predicate: verbose_ff_0_2.i_notEmpty && verbose_ff_0_2.notEmpty
Blocking rules: (none)
 
Rule: pktBuff_1_mkConnectionGetPut
Predicate: pktBuff_1_pktBuff.RDY_readServer_readReq_put &&
	   pktBuff_1_readReqFifo.i_notEmpty
Blocking rules: (none)
 
Rule: pktBuff_1_1_mkConnectionGetPut
Predicate: pktBuff_1_pktBuff.RDY_readServer_readData_get &&
	   pktBuff_1_readDataFifo.i_notFull
Blocking rules: (none)
 
Rule: pktBuff_1_2_mkConnectionGetPut
Predicate: pktBuff_1_pktBuff.RDY_readServer_readLen_get &&
	   pktBuff_1_readLenFifo.i_notFull
Blocking rules: (none)
 
Rule: pktBuff_1_packetReadStart
Predicate: pktBuff_1_meta_ff.i_notEmpty &&
	   pktBuff_1_readLenFifo.i_notEmpty &&
	   pktBuff_1_readReqFifo.i_notFull &&
	   (! pktBuff_1_readStarted)
Blocking rules: (none)
 
Rule: pktBuff_1_packetReadInProgress
Predicate: pktBuff_1_readDataFifo.i_notEmpty &&
	   pktBuff_1_writeDataFifo.i_notFull &&
	   pktBuff_1_readStarted
Blocking rules: (none)
 
Rule: pkt_buff_to_modifier_1
Predicate: modifier_1.RDY_writeServer_enq &&
	   pktBuff_1_writeDataFifo.i_notEmpty
Blocking rules: (none)
 
Rule: rl_dispatch_metadata_1
Predicate: modifier_1.RDY_prev_enq &&
	   meta_ff_1_1.i_notEmpty && pktBuff_1_meta_ff.i_notFull
Blocking rules: (none)
 
Rule: set_verbose_3
Predicate: verbose_ff_1.i_notEmpty && verbose_ff_1.notEmpty
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_outData_setFirstCore
Predicate: pktBuff_0_memBuffer_serverAdapterA_outDataCore.i_notEmpty &&
	   pktBuff_0_memBuffer_serverAdapterA_outDataCore.notEmpty
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_outData_setFirstEnq
Predicate: (! pktBuff_0_memBuffer_serverAdapterA_outDataCore.notEmpty) &&
	   pktBuff_0_memBuffer_serverAdapterA_outData_enqData.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_outData_enqOnly
Predicate: pktBuff_0_memBuffer_serverAdapterA_outDataCore.i_notFull &&
	   (! pktBuff_0_memBuffer_serverAdapterA_outData_deqCalled.whas) &&
	   pktBuff_0_memBuffer_serverAdapterA_outData_enqData.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_outData_deqOnly
Predicate: pktBuff_0_memBuffer_serverAdapterA_outDataCore.i_notEmpty &&
	   pktBuff_0_memBuffer_serverAdapterA_outData_deqCalled.whas &&
	   (! pktBuff_0_memBuffer_serverAdapterA_outData_enqData.whas)
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_outData_enqAndDeq
Predicate: pktBuff_0_memBuffer_serverAdapterA_outDataCore.i_notEmpty &&
	   pktBuff_0_memBuffer_serverAdapterA_outDataCore.i_notFull &&
	   pktBuff_0_memBuffer_serverAdapterA_outData_deqCalled.whas &&
	   pktBuff_0_memBuffer_serverAdapterA_outData_enqData.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_cnt_finalAdd
Predicate: pktBuff_0_memBuffer_serverAdapterA_cnt_1.whas ||
	   pktBuff_0_memBuffer_serverAdapterA_cnt_2.whas ||
	   pktBuff_0_memBuffer_serverAdapterA_cnt_3.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_s1__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_passRequest
Predicate: pktBuff_0_memBuffer_serverAdapterA_s1[1] ||
	   pktBuff_0_memBuffer_serverAdapterA_s2[1]
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_stageReadResponseAlways
Predicate: pktBuff_0_memBuffer_serverAdapterA_writeWithResp.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_moveToOutFIFO
Predicate: ((! pktBuff_0_memBuffer_serverAdapterA_s2[0]) ||
	    pktBuff_0_memBuffer_serverAdapterA_outDataCore.notFull) &&
	   pktBuff_0_memBuffer_serverAdapterA_s2[1]
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterA_overRun
Predicate: pktBuff_0_memBuffer_serverAdapterA_s2[1] &&
	   (! pktBuff_0_memBuffer_serverAdapterA_outDataCore.notFull)
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_outData_setFirstCore
Predicate: pktBuff_0_memBuffer_serverAdapterB_outDataCore.i_notEmpty &&
	   pktBuff_0_memBuffer_serverAdapterB_outDataCore.notEmpty
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_outData_setFirstEnq
Predicate: (! pktBuff_0_memBuffer_serverAdapterB_outDataCore.notEmpty) &&
	   pktBuff_0_memBuffer_serverAdapterB_outData_enqData.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_outData_enqOnly
Predicate: pktBuff_0_memBuffer_serverAdapterB_outDataCore.i_notFull &&
	   (! pktBuff_0_memBuffer_serverAdapterB_outData_deqCalled.whas) &&
	   pktBuff_0_memBuffer_serverAdapterB_outData_enqData.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_outData_deqOnly
Predicate: pktBuff_0_memBuffer_serverAdapterB_outDataCore.i_notEmpty &&
	   pktBuff_0_memBuffer_serverAdapterB_outData_deqCalled.whas &&
	   (! pktBuff_0_memBuffer_serverAdapterB_outData_enqData.whas)
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_outData_enqAndDeq
Predicate: pktBuff_0_memBuffer_serverAdapterB_outDataCore.i_notEmpty &&
	   pktBuff_0_memBuffer_serverAdapterB_outDataCore.i_notFull &&
	   pktBuff_0_memBuffer_serverAdapterB_outData_deqCalled.whas &&
	   pktBuff_0_memBuffer_serverAdapterB_outData_enqData.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_cnt_finalAdd
Predicate: pktBuff_0_memBuffer_serverAdapterB_cnt_1.whas ||
	   pktBuff_0_memBuffer_serverAdapterB_cnt_2.whas ||
	   pktBuff_0_memBuffer_serverAdapterB_cnt_3.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_s1__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_passRequest
Predicate: pktBuff_0_memBuffer_serverAdapterB_s1[1] ||
	   pktBuff_0_memBuffer_serverAdapterB_s2[1]
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_stageReadResponseAlways
Predicate: pktBuff_0_memBuffer_serverAdapterB_writeWithResp.whas
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_moveToOutFIFO
Predicate: ((! pktBuff_0_memBuffer_serverAdapterB_s2[0]) ||
	    pktBuff_0_memBuffer_serverAdapterB_outDataCore.notFull) &&
	   pktBuff_0_memBuffer_serverAdapterB_s2[1]
Blocking rules: (none)
 
Rule: pktBuff_0_memBuffer_serverAdapterB_overRun
Predicate: pktBuff_0_memBuffer_serverAdapterB_s2[1] &&
	   (! pktBuff_0_memBuffer_serverAdapterB_outDataCore.notFull)
Blocking rules: (none)
 
Rule: pktBuff_0_enq_stage1
Predicate: pktBuff_0_fifoWriteData.i_notEmpty &&
	   pktBuff_0_incomingReqs.i_notFull &&
	   ((! pktBuff_0_fifoWriteData.first[0]) ||
	    pktBuff_0_fifoEop.i_notFull)
Blocking rules: (none)
 
Rule: pktBuff_0_enqueue_first_beat
Predicate: pktBuff_0_incomingReqs.i_notEmpty &&
	   (pktBuff_0_memBuffer_serverAdapterA_cnt .< 3'd3) &&
	   (! pktBuff_0_fifoEop.notEmpty) && (! pktBuff_0_inPacket)
Blocking rules: (none)
 
Rule: pktBuff_0_enqueue_next_beat
Predicate: pktBuff_0_incomingReqs.i_notEmpty &&
	   (pktBuff_0_memBuffer_serverAdapterA_cnt .< 3'd3) &&
	   (! pktBuff_0_fifoEop.notEmpty) && pktBuff_0_inPacket
Blocking rules: (none)
 
Rule: pktBuff_0_commit_packet
Predicate: pktBuff_0_incomingReqs.i_notEmpty &&
	   (pktBuff_0_memBuffer_serverAdapterA_cnt .< 3'd3) &&
	   pktBuff_0_fifoEop.i_notEmpty && pktBuff_0_fifoLen.i_notFull &&
	   pktBuff_0_fifoEop.notEmpty && pktBuff_0_inPacket
Blocking rules: (none)
 
Rule: pktBuff_0_dequeue_first_beat
Predicate: pktBuff_0_fifoReadReq.i_notEmpty &&
	   (pktBuff_0_memBuffer_serverAdapterB_cnt .< 3'd3) &&
	   (! pktBuff_0_outPacket)
Blocking rules: (none)
 
Rule: pktBuff_0_dequeue_next_beat
Predicate: (pktBuff_0_memBuffer_serverAdapterB_outDataCore.notEmpty ||
	    pktBuff_0_memBuffer_serverAdapterB_outData_enqData.whas) &&
	   pktBuff_0_memBuffer_serverAdapterB_outData_outData.whas &&
	   pktBuff_0_fifoReadData.i_notFull &&
	   (pktBuff_0_memBuffer_serverAdapterB_outData_outData.wget[0] ||
	    (pktBuff_0_memBuffer_serverAdapterB_cnt .< 3'd3)) &&
	   pktBuff_0_outPacket
Blocking rules: (none)
 
Rule: ringToMac_0_fifoTxData_sInReset_pre_isResetAssertedUpdate
Predicate: ringToMac_0_fifoTxData_sInReset_pre_isInReset
Blocking rules: (none)
 
Rule: ringToMac_0_fifoTxData_dInReset_pre_isResetAssertedUpdate
Predicate: ringToMac_0_fifoTxData_dInReset_pre_isInReset
Blocking rules: (none)
 
Rule: ringToMac_0_fifoTxData_launder_sInReset
Predicate: True
Blocking rules: (none)
 
Rule: ringToMac_0_fifoTxData_launder_dInReset
Predicate: True
Blocking rules: (none)
 
Rule: ringToMac_0_cycle
Predicate: True
Blocking rules: (none)
 
Rule: ringToMac_0_total_cycle
Predicate: True
Blocking rules: (none)
 
Rule: ringToMac_0_readDataStart
Predicate: ringToMac_0_readLenFifo.i_notEmpty &&
	   ringToMac_0_readReqFifo.i_notFull
Blocking rules: (none)
 
Rule: ringToMac_0_cross_clocking
Predicate: ringToMac_0_tx_fifo.RDY_enq && ringToMac_0_readDataFifo.i_notEmpty
Blocking rules: (none)
 
Rule: ringToMac_0_process_incoming_packet
Predicate: (((! ringToMac_0_fifoTxData_write_block) &&
	     ({ringToMac_0_fifoTxData_elem0_status_1.crossed ==
	       ringToMac_0_fifoTxData_block0_status._read, ringToMac_0_fifoTxData_elem0_status_0.crossed ==
							   ringToMac_0_fifoTxData_block0_status._read} ==
	      2'd3)) ||
	    (ringToMac_0_fifoTxData_write_block &&
	     ({ringToMac_0_fifoTxData_elem1_status_1.crossed ==
	       ringToMac_0_fifoTxData_block1_status._read, ringToMac_0_fifoTxData_elem1_status_0.crossed ==
							   ringToMac_0_fifoTxData_block1_status._read} ==
	      2'd3))) &&
	   (! ringToMac_0_fifoTxData_sInReset.wget) &&
	   ringToMac_0_tx_fifo.RDY_deq && ringToMac_0_tx_fifo.RDY_first
Blocking rules: (none)
 
Rule: ringToMac_0_process_outgoing_packet
Predicate: (((! ringToMac_0_fifoTxData_read_block) &&
	     (! ({ringToMac_0_fifoTxData_elem0_status_1._read ==
		  ringToMac_0_fifoTxData_block0_status.crossed, ringToMac_0_fifoTxData_elem0_status_0._read ==
								ringToMac_0_fifoTxData_block0_status.crossed} ==
		 2'd3))) ||
	    (ringToMac_0_fifoTxData_read_block &&
	     (! ({ringToMac_0_fifoTxData_elem1_status_1._read ==
		  ringToMac_0_fifoTxData_block1_status.crossed, ringToMac_0_fifoTxData_elem1_status_0._read ==
								ringToMac_0_fifoTxData_block1_status.crossed} ==
		 2'd3)))) &&
	   (! ringToMac_0_fifoTxData_dInReset.wget) &&
	   (((ringToMac_0_fifoTxData_read_block
	      ? ((! (ringToMac_0_fifoTxData_elem1_status_1._read ==
		     ringToMac_0_fifoTxData_block1_status.crossed)) &&
		 (ringToMac_0_fifoTxData_elem1_status_0._read ==
		  ringToMac_0_fifoTxData_block1_status.crossed))
		? ringToMac_0_fifoTxData_block1.crossed[115:108]
		: ((ringToMac_0_fifoTxData_elem1_status_0._read ==
		    ringToMac_0_fifoTxData_block1_status.crossed)
		   ? (_ :: Bit 8)
		   : ringToMac_0_fifoTxData_block1.crossed[9:2])
	      : (((! (ringToMac_0_fifoTxData_elem0_status_1._read ==
		      ringToMac_0_fifoTxData_block0_status.crossed)) &&
		  (ringToMac_0_fifoTxData_elem0_status_0._read ==
		   ringToMac_0_fifoTxData_block0_status.crossed))
		 ? ringToMac_0_fifoTxData_block0.crossed[115:108]
		 : ((ringToMac_0_fifoTxData_elem0_status_0._read ==
		     ringToMac_0_fifoTxData_block0_status.crossed)
		    ? (_ :: Bit 8)
		    : ringToMac_0_fifoTxData_block0.crossed[9:2]))) ==
	     8'd0) ||
	    ringToMac_0_writeMacFifo.i_notFull)
Blocking rules: (none)
 
Rule: ringToMac_0_count_idle_cycles
Predicate: (ringToMac_0_fifoTxData_read_block ||
	    ({ringToMac_0_fifoTxData_elem0_status_1._read ==
	      ringToMac_0_fifoTxData_block0_status.crossed, ringToMac_0_fifoTxData_elem0_status_0._read ==
							    ringToMac_0_fifoTxData_block0_status.crossed} ==
	     2'd3)) &&
	   ((! ringToMac_0_fifoTxData_read_block) ||
	    ({ringToMac_0_fifoTxData_elem1_status_1._read ==
	      ringToMac_0_fifoTxData_block1_status.crossed, ringToMac_0_fifoTxData_elem1_status_0._read ==
							    ringToMac_0_fifoTxData_block1_status.crossed} ==
	     2'd3))
Blocking rules: (none)
 
Rule: mkConnectionGetPut_3
Predicate: ringToMac_0_readReqFifo.i_notEmpty &&
	   pktBuff_0_fifoReadReq.i_notFull
Blocking rules: (none)
 
Rule: mkConnectionGetPut_4
Predicate: pktBuff_0_fifoReadData.notEmpty &&
	   pktBuff_0_fifoReadData.i_notEmpty &&
	   ringToMac_0_readDataFifo.i_notFull
Blocking rules: (none)
 
Rule: mkConnectionGetPut_5
Predicate: pktBuff_0_fifoLen.notEmpty &&
	   pktBuff_0_fifoLen.i_notEmpty && ringToMac_0_readLenFifo.i_notFull
Blocking rules: (none)
 
Rule: connect_1
Predicate: meta_ff_0.i_notEmpty && meta_ff_0_1.i_notFull
Blocking rules: (none)
 
Rule: connect_2
Predicate: meta_ff_1.i_notEmpty && meta_ff_1_1.i_notFull
Blocking rules: (none)
 
Rule: mkConnectionGetPut_6
Predicate: pktBuff_0_pktBuff.RDY_writeServer_enq && writeDataFifo_0.i_notEmpty
Blocking rules: hostchan_0_writeClient_deq
 
Rule: mkConnectionGetPut_7
Predicate: pktBuff_1_pktBuff.RDY_writeServer_enq &&
	   hostchan_0_writeDataFifo.i_notEmpty
Blocking rules: rxchan_0_writeClient_deq
 
Rule: mkConnectionGetPut_8
Predicate: gearbox_up_16_0.RDY_datain_put &&
	   modifier_0.RDY_writeClient_first && modifier_0.RDY_writeClient_deq
Blocking rules: (none)
 
Rule: mkConnectionGetPut_9
Predicate: gearbox_up_16_1.RDY_datain_put &&
	   modifier_1.RDY_writeClient_first && modifier_1.RDY_writeClient_deq
Blocking rules: (none)
 
Rule: mkConnectionGetPut_10
Predicate: gearbox_up_32_0.RDY_datain_put && gearbox_up_16_0.RDY_dataout_get
Blocking rules: (none)
 
Rule: mkConnectionGetPut_11
Predicate: gearbox_up_32_1.RDY_datain_put && gearbox_up_16_1.RDY_dataout_get
Blocking rules: (none)
 
Rule: mkConnectionGetPut_12
Predicate: input_queues_0.RDY_writeServer_enq &&
	   gearbox_up_32_0.RDY_dataout_get
Blocking rules: (none)
 
Rule: mkConnectionGetPut_13
Predicate: input_queues_1.RDY_writeServer_enq &&
	   gearbox_up_32_1.RDY_dataout_get
Blocking rules: (none)
 
Rule: mkConnectionGetPut_14
Predicate: input_queues_0.RDY_readServer_readLen_get &&
	   input_queues_0.RDY_readServer_readReq_put
Blocking rules: (none)
 
Rule: mkConnectionGetPut_15
Predicate: input_queues_1.RDY_readServer_readLen_get &&
	   input_queues_1.RDY_readServer_readReq_put
Blocking rules: (none)
 
Rule: xbar_merges_fi0_is_empty
Predicate: xbar_merges_fi1.i_notEmpty && xbar_merges_fo.i_notFull &&
	   (! xbar_merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: xbar_merges_fi1_is_empty
Predicate: xbar_merges_fo.i_notFull && xbar_merges_fi0.i_notEmpty &&
	   (! xbar_merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: xbar_merges_both_have_data
Predicate: (xbar_merges_routeFrom[1]
	    ? xbar_merges_fo.i_notFull &&
	      (xbar_merges_routeFrom[0]
	       ? xbar_merges_fi1.i_notEmpty
	       : xbar_merges_fi0.i_notEmpty)
	    : ((xbar_merges_fi0HasPrio
		? xbar_merges_fi0.i_notEmpty
		: xbar_merges_fi1.i_notEmpty) &&
	       ((xbar_merges_fi0HasPrio
		 ? ! xbar_merges_fi0.first[1]
		 : (! xbar_merges_fi1.first[1])) ||
		xbar_merges_fo.i_notFull))) &&
	   xbar_merges_fi0.notEmpty && xbar_merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: xbar_merges_1_fi0_is_empty
Predicate: xbar_merges_1_fi1.i_notEmpty && xbar_merges_1_fo.i_notFull &&
	   (! xbar_merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: xbar_merges_1_fi1_is_empty
Predicate: xbar_merges_1_fo.i_notFull && xbar_merges_1_fi0.i_notEmpty &&
	   (! xbar_merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: xbar_merges_1_both_have_data
Predicate: (xbar_merges_1_routeFrom[1]
	    ? xbar_merges_1_fo.i_notFull &&
	      (xbar_merges_1_routeFrom[0]
	       ? xbar_merges_1_fi1.i_notEmpty
	       : xbar_merges_1_fi0.i_notEmpty)
	    : ((xbar_merges_1_fi0HasPrio
		? xbar_merges_1_fi0.i_notEmpty
		: xbar_merges_1_fi1.i_notEmpty) &&
	       ((xbar_merges_1_fi0HasPrio
		 ? ! xbar_merges_1_fi0.first[1]
		 : (! xbar_merges_1_fi1.first[1])) ||
		xbar_merges_1_fo.i_notFull))) &&
	   xbar_merges_1_fi0.notEmpty && xbar_merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: xbar_route
Predicate: xbar_upper_f.i_notEmpty &&
	   (xbar_upper_f.first[578]
	    ? xbar_merges_1_fi1.i_notFull
	    : xbar_merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: xbar_route_1
Predicate: xbar_lower_f.i_notEmpty &&
	   (xbar_lower_f.first[578]
	    ? xbar_merges_1_fi0.i_notFull
	    : xbar_merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: mkConnectionGetPut_16
Predicate: input_queues_0.RDY_readServer_readData_get &&
	   xbar_upper_f.i_notFull
Blocking rules: (none)
 
Rule: mkConnectionGetPut_17
Predicate: input_queues_1.RDY_readServer_readData_get &&
	   xbar_lower_f.i_notFull
Blocking rules: (none)
 
Rule: mkConnectionGetPut_18
Predicate: output_queues_0.RDY_readServer_readLen_get &&
	   output_queues_0.RDY_readServer_readReq_put
Blocking rules: (none)
 
Rule: mkConnectionGetPut_19
Predicate: output_queues_1.RDY_readServer_readLen_get &&
	   output_queues_1.RDY_readServer_readReq_put
Blocking rules: (none)
 
Rule: mkConnectionGetPut_20
Predicate: output_queues_0.RDY_writeServer_enq && xbar_merges_fo.i_notEmpty
Blocking rules: (none)
 
Rule: mkConnectionGetPut_21
Predicate: output_queues_1.RDY_writeServer_enq && xbar_merges_1_fo.i_notEmpty
Blocking rules: (none)
 
Rule: mkConnectionGetPut_22
Predicate: output_queues_1.RDY_readServer_readData_get &&
	   gearbox_dn_32_0.RDY_datain_put
Blocking rules: (none)
 
Rule: mkConnectionGetPut_23
Predicate: gearbox_dn_16_0.RDY_datain_put && gearbox_dn_32_0.RDY_dataout_get
Blocking rules: (none)
 
Rule: mkConnectionGetPut_24
Predicate: gearbox_dn_16_0.RDY_dataout_get &&
	   pktBuff_0_fifoWriteData.i_notFull
Blocking rules: txchan_0_writeServer_enq
 
Rule: tieoff
Predicate: output_queues_0.RDY_readServer_readData_get
Blocking rules: (none)
 
Logical execution order: rxchan_0_macRx_put,
			 rxchan_0_writeClient_first,
			 rxchan_0_writeClient_notEmpty,
			 rxchan_0_writeClient_deq,
			 rxchan_0_next_first,
			 rxchan_0_next_notEmpty,
			 rxchan_0_next_deq,
			 rxchan_0_verbose_notFull,
			 hostchan_0_writeServer_notFull,
			 hostchan_0_writeServer_enq,
			 hostchan_0_writeClient_first,
			 hostchan_0_writeClient_notEmpty,
			 hostchan_0_writeClient_deq,
			 hostchan_0_next_first,
			 hostchan_0_next_notEmpty,
			 hostchan_0_next_deq,
			 hostchan_0_verbose_notFull,
			 txchan_0_writeServer_notFull,
			 txchan_0_writeServer_enq,
			 txchan_0_macTx_get,
			 txchan_0_verbose_notFull,
			 txchan_0_verbose_enq,
			 prev_0_notFull,
			 prev_0_enq,
			 prev_1_notFull,
			 prev_1_enq,
			 mkConnectionGetPut,
			 mkConnectionGetPut_1,
			 mkConnectionGetPut_2,
			 packetReadStart,
			 packetReadInProgress,
			 dispatch_packet,
			 set_verbose,
			 hostchan_0_verbose_enq,
			 connect,
			 set_verbose_1,
			 rxchan_0_verbose_enq,
			 pkt_buff_to_modifier,
			 rl_dispatch_metadata,
			 set_verbose_2,
			 pkt_buff_to_modifier_1,
			 rl_dispatch_metadata_1,
			 set_verbose_3,
			 set_verbosity,
			 mkConnectionGetPut_3,
			 mkConnectionGetPut_4,
			 mkConnectionGetPut_5,
			 connect_1,
			 connect_2,
			 mkConnectionGetPut_6,
			 mkConnectionGetPut_7,
			 mkConnectionGetPut_8,
			 mkConnectionGetPut_9,
			 mkConnectionGetPut_10,
			 mkConnectionGetPut_11,
			 mkConnectionGetPut_12,
			 mkConnectionGetPut_13,
			 mkConnectionGetPut_14,
			 mkConnectionGetPut_15,
			 mkConnectionGetPut_16,
			 mkConnectionGetPut_17,
			 mkConnectionGetPut_18,
			 mkConnectionGetPut_19,
			 mkConnectionGetPut_20,
			 mkConnectionGetPut_21,
			 mkConnectionGetPut_22,
			 mkConnectionGetPut_23,
			 mkConnectionGetPut_24,
			 tieoff,
			 hostchan_0_mkConnectionGetPut,
			 hostchan_0_packetReadStart,
			 hostchan_0_packetReadInProgress,
			 hostchan_0_dispatch_packet,
			 hostchan_0_set_verbose,
			 hostchan_0_1_mkConnectionGetPut,
			 hostchan_0_2_mkConnectionGetPut,
			 macToRing_0_total_cycle,
			 macToRing_0_writeData,
			 macToRing_0_gearbox_readPacketOdd,
			 macToRing_0_gearbox_readPacketEven,
			 macToRing_0_gearbox_count_idle_cycles,
			 macToRing_0_gearbox_startOfPacket,
			 pktBuff_0_mkConnectionGetPut,
			 pktBuff_0_packetReadStart,
			 pktBuff_0_packetReadInProgress,
			 pktBuff_0_enqueue_first_beat,
			 pktBuff_0_enqueue_next_beat,
			 pktBuff_0_commit_packet,
			 pktBuff_0_enq_stage1,
			 pktBuff_0_dequeue_first_beat,
			 pktBuff_0_1_mkConnectionGetPut,
			 pktBuff_0_2_mkConnectionGetPut,
			 pktBuff_1_mkConnectionGetPut,
			 pktBuff_1_packetReadStart,
			 pktBuff_1_packetReadInProgress,
			 pktBuff_1_1_mkConnectionGetPut,
			 pktBuff_1_2_mkConnectionGetPut,
			 pktBuff_0_memBuffer_serverAdapterA_stageReadResponseAlways,
			 pktBuff_0_memBuffer_serverAdapterA_moveToOutFIFO,
			 pktBuff_0_memBuffer_serverAdapterA_overRun,
			 pktBuff_0_memBuffer_serverAdapterA_passRequest,
			 pktBuff_0_memBuffer_serverAdapterA_outData_setFirstCore,
			 pktBuff_0_memBuffer_serverAdapterA_outData_setFirstEnq,
			 pktBuff_0_memBuffer_serverAdapterA_outData_enqOnly,
			 pktBuff_0_memBuffer_serverAdapterA_outData_deqOnly,
			 pktBuff_0_memBuffer_serverAdapterA_outData_enqAndDeq,
			 pktBuff_0_memBuffer_serverAdapterA_cnt_finalAdd,
			 pktBuff_0_memBuffer_serverAdapterA_s1__dreg_update,
			 pktBuff_0_memBuffer_serverAdapterB_moveToOutFIFO,
			 pktBuff_0_memBuffer_serverAdapterB_overRun,
			 pktBuff_0_memBuffer_serverAdapterB_passRequest,
			 pktBuff_0_memBuffer_serverAdapterB_outData_setFirstCore,
			 pktBuff_0_memBuffer_serverAdapterB_outData_setFirstEnq,
			 pktBuff_0_dequeue_next_beat,
			 pktBuff_0_memBuffer_serverAdapterB_stageReadResponseAlways,
			 pktBuff_0_memBuffer_serverAdapterB_outData_enqOnly,
			 pktBuff_0_memBuffer_serverAdapterB_outData_deqOnly,
			 pktBuff_0_memBuffer_serverAdapterB_outData_enqAndDeq,
			 pktBuff_0_memBuffer_serverAdapterB_cnt_finalAdd,
			 pktBuff_0_memBuffer_serverAdapterB_s1__dreg_update,
			 ringToMac_0_total_cycle,
			 ringToMac_0_readDataStart,
			 ringToMac_0_cross_clocking,
			 ringToMac_0_cycle,
			 ringToMac_0_count_idle_cycles,
			 ringToMac_0_fifoTxData_launder_sInReset,
			 ringToMac_0_process_incoming_packet,
			 ringToMac_0_fifoTxData_launder_dInReset,
			 ringToMac_0_process_outgoing_packet,
			 ringToMac_0_fifoTxData_sInReset_pre_isResetAssertedUpdate,
			 ringToMac_0_fifoTxData_dInReset_pre_isResetAssertedUpdate,
			 xbar_merges_fi0_is_empty,
			 xbar_merges_fi1_is_empty,
			 xbar_merges_both_have_data,
			 xbar_merges_1_fi0_is_empty,
			 xbar_merges_1_fi1_is_empty,
			 xbar_merges_1_both_have_data,
			 xbar_route,
			 xbar_route_1

===============================================
