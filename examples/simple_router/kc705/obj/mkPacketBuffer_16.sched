=== Generated schedule for mkPacketBuffer_16 ===

Method schedule
---------------
Method: writeServer_enq
Ready signal: fifoWriteData.i_notFull
Conflict-free: readServer_readData_get,
	       readServer_readLen_get,
	       readServer_readReq_put,
	       dbg,
	       set_verbosity
Sequenced after: writeServer_notFull
Conflicts: writeServer_enq
 
Method: writeServer_notFull
Ready signal: True
Conflict-free: writeServer_notFull,
	       readServer_readData_get,
	       readServer_readLen_get,
	       readServer_readReq_put,
	       dbg,
	       set_verbosity
Sequenced before: writeServer_enq
 
Method: readServer_readData_get
Ready signal: fifoReadData.notEmpty && fifoReadData.i_notEmpty
Conflict-free: writeServer_enq,
	       writeServer_notFull,
	       readServer_readLen_get,
	       readServer_readReq_put,
	       dbg,
	       set_verbosity
Conflicts: readServer_readData_get
 
Method: readServer_readLen_get
Ready signal: fifoLen.notEmpty && fifoLen.i_notEmpty
Conflict-free: writeServer_enq,
	       writeServer_notFull,
	       readServer_readData_get,
	       readServer_readReq_put,
	       dbg,
	       set_verbosity
Conflicts: readServer_readLen_get
 
Method: readServer_readReq_put
Ready signal: fifoReadReq.i_notFull
Conflict-free: writeServer_enq,
	       writeServer_notFull,
	       readServer_readData_get,
	       readServer_readLen_get,
	       dbg,
	       set_verbosity
Conflicts: readServer_readReq_put
 
Method: dbg
Ready signal: True
Conflict-free: writeServer_enq,
	       writeServer_notFull,
	       readServer_readData_get,
	       readServer_readLen_get,
	       readServer_readReq_put,
	       dbg,
	       set_verbosity
 
Method: set_verbosity
Ready signal: True
Conflict-free: writeServer_enq,
	       writeServer_notFull,
	       readServer_readData_get,
	       readServer_readLen_get,
	       readServer_readReq_put,
	       dbg
Sequenced before (restricted): set_verbosity
 
Rule schedule
-------------
Rule: memBuffer_serverAdapterA_outData_setFirstCore
Predicate: memBuffer_serverAdapterA_outDataCore.i_notEmpty &&
	   memBuffer_serverAdapterA_outDataCore.notEmpty
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_outData_setFirstEnq
Predicate: (! memBuffer_serverAdapterA_outDataCore.notEmpty) &&
	   memBuffer_serverAdapterA_outData_enqData.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_outData_enqOnly
Predicate: memBuffer_serverAdapterA_outDataCore.i_notFull &&
	   (! memBuffer_serverAdapterA_outData_deqCalled.whas) &&
	   memBuffer_serverAdapterA_outData_enqData.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_outData_deqOnly
Predicate: memBuffer_serverAdapterA_outDataCore.i_notEmpty &&
	   memBuffer_serverAdapterA_outData_deqCalled.whas &&
	   (! memBuffer_serverAdapterA_outData_enqData.whas)
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_outData_enqAndDeq
Predicate: memBuffer_serverAdapterA_outDataCore.i_notEmpty &&
	   memBuffer_serverAdapterA_outDataCore.i_notFull &&
	   memBuffer_serverAdapterA_outData_deqCalled.whas &&
	   memBuffer_serverAdapterA_outData_enqData.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_cnt_finalAdd
Predicate: memBuffer_serverAdapterA_cnt_1.whas ||
	   memBuffer_serverAdapterA_cnt_2.whas ||
	   memBuffer_serverAdapterA_cnt_3.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_s1__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_passRequest
Predicate: memBuffer_serverAdapterA_s1[1] || memBuffer_serverAdapterA_s2[1]
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_stageReadResponseAlways
Predicate: memBuffer_serverAdapterA_writeWithResp.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_moveToOutFIFO
Predicate: ((! memBuffer_serverAdapterA_s2[0]) ||
	    memBuffer_serverAdapterA_outDataCore.notFull) &&
	   memBuffer_serverAdapterA_s2[1]
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterA_overRun
Predicate: memBuffer_serverAdapterA_s2[1] &&
	   (! memBuffer_serverAdapterA_outDataCore.notFull)
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_outData_setFirstCore
Predicate: memBuffer_serverAdapterB_outDataCore.i_notEmpty &&
	   memBuffer_serverAdapterB_outDataCore.notEmpty
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_outData_setFirstEnq
Predicate: (! memBuffer_serverAdapterB_outDataCore.notEmpty) &&
	   memBuffer_serverAdapterB_outData_enqData.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_outData_enqOnly
Predicate: memBuffer_serverAdapterB_outDataCore.i_notFull &&
	   (! memBuffer_serverAdapterB_outData_deqCalled.whas) &&
	   memBuffer_serverAdapterB_outData_enqData.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_outData_deqOnly
Predicate: memBuffer_serverAdapterB_outDataCore.i_notEmpty &&
	   memBuffer_serverAdapterB_outData_deqCalled.whas &&
	   (! memBuffer_serverAdapterB_outData_enqData.whas)
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_outData_enqAndDeq
Predicate: memBuffer_serverAdapterB_outDataCore.i_notEmpty &&
	   memBuffer_serverAdapterB_outDataCore.i_notFull &&
	   memBuffer_serverAdapterB_outData_deqCalled.whas &&
	   memBuffer_serverAdapterB_outData_enqData.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_cnt_finalAdd
Predicate: memBuffer_serverAdapterB_cnt_1.whas ||
	   memBuffer_serverAdapterB_cnt_2.whas ||
	   memBuffer_serverAdapterB_cnt_3.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_s1__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_passRequest
Predicate: memBuffer_serverAdapterB_s1[1] || memBuffer_serverAdapterB_s2[1]
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_stageReadResponseAlways
Predicate: memBuffer_serverAdapterB_writeWithResp.whas
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_moveToOutFIFO
Predicate: ((! memBuffer_serverAdapterB_s2[0]) ||
	    memBuffer_serverAdapterB_outDataCore.notFull) &&
	   memBuffer_serverAdapterB_s2[1]
Blocking rules: (none)
 
Rule: memBuffer_serverAdapterB_overRun
Predicate: memBuffer_serverAdapterB_s2[1] &&
	   (! memBuffer_serverAdapterB_outDataCore.notFull)
Blocking rules: (none)
 
Rule: enq_stage1
Predicate: fifoWriteData.i_notEmpty &&
	   incomingReqs.i_notFull &&
	   ((! fifoWriteData.first[0]) || fifoEop.i_notFull)
Blocking rules: (none)
 
Rule: enqueue_first_beat
Predicate: incomingReqs.i_notEmpty &&
	   (memBuffer_serverAdapterA_cnt .< 3'd3) &&
	   (! fifoEop.notEmpty) && (! inPacket)
Blocking rules: (none)
 
Rule: enqueue_next_beat
Predicate: incomingReqs.i_notEmpty &&
	   (memBuffer_serverAdapterA_cnt .< 3'd3) &&
	   (! fifoEop.notEmpty) && inPacket
Blocking rules: (none)
 
Rule: commit_packet
Predicate: incomingReqs.i_notEmpty &&
	   (memBuffer_serverAdapterA_cnt .< 3'd3) &&
	   fifoEop.i_notEmpty && fifoLen.i_notFull &&
	   fifoEop.notEmpty && inPacket
Blocking rules: (none)
 
Rule: dequeue_first_beat
Predicate: fifoReadReq.i_notEmpty && (memBuffer_serverAdapterB_cnt .< 3'd3) &&
	   (! outPacket)
Blocking rules: (none)
 
Rule: dequeue_next_beat
Predicate: (memBuffer_serverAdapterB_outDataCore.notEmpty ||
	    memBuffer_serverAdapterB_outData_enqData.whas) &&
	   memBuffer_serverAdapterB_outData_outData.whas &&
	   fifoReadData.i_notFull &&
	   (memBuffer_serverAdapterB_outData_outData.wget[0] ||
	    (memBuffer_serverAdapterB_cnt .< 3'd3)) &&
	   outPacket
Blocking rules: (none)
 
Logical execution order: writeServer_notFull,
			 writeServer_enq,
			 readServer_readData_get,
			 readServer_readLen_get,
			 readServer_readReq_put,
			 dbg,
			 set_verbosity,
			 enqueue_first_beat,
			 enqueue_next_beat,
			 commit_packet,
			 enq_stage1,
			 dequeue_first_beat,
			 memBuffer_serverAdapterA_stageReadResponseAlways,
			 memBuffer_serverAdapterA_moveToOutFIFO,
			 memBuffer_serverAdapterA_overRun,
			 memBuffer_serverAdapterA_passRequest,
			 memBuffer_serverAdapterA_outData_setFirstCore,
			 memBuffer_serverAdapterA_outData_setFirstEnq,
			 memBuffer_serverAdapterA_outData_enqOnly,
			 memBuffer_serverAdapterA_outData_deqOnly,
			 memBuffer_serverAdapterA_outData_enqAndDeq,
			 memBuffer_serverAdapterA_cnt_finalAdd,
			 memBuffer_serverAdapterA_s1__dreg_update,
			 memBuffer_serverAdapterB_moveToOutFIFO,
			 memBuffer_serverAdapterB_overRun,
			 memBuffer_serverAdapterB_passRequest,
			 memBuffer_serverAdapterB_outData_setFirstCore,
			 memBuffer_serverAdapterB_outData_setFirstEnq,
			 dequeue_next_beat,
			 memBuffer_serverAdapterB_stageReadResponseAlways,
			 memBuffer_serverAdapterB_outData_enqOnly,
			 memBuffer_serverAdapterB_outData_deqOnly,
			 memBuffer_serverAdapterB_outData_enqAndDeq,
			 memBuffer_serverAdapterB_cnt_finalAdd,
			 memBuffer_serverAdapterB_s1__dreg_update

=================================================
