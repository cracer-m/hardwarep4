=== Generated schedule for mkXBar_synth_64 ===

Method schedule
---------------
Method: input_ports_0_put
Ready signal: upper_upper_upper_f.i_notFull
Conflict-free: input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_0_put
 
Method: input_ports_1_put
Ready signal: upper_upper_lower_f.i_notFull
Conflict-free: input_ports_0_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_1_put
 
Method: input_ports_2_put
Ready signal: upper_lower_upper_f.i_notFull
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_2_put
 
Method: input_ports_3_put
Ready signal: upper_lower_lower_f.i_notFull
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_3_put
 
Method: input_ports_4_put
Ready signal: lower_upper_upper_f.i_notFull
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_4_put
 
Method: input_ports_5_put
Ready signal: lower_upper_lower_f.i_notFull
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_5_put
 
Method: input_ports_6_put
Ready signal: lower_lower_upper_f.i_notFull
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_6_put
 
Method: input_ports_7_put
Ready signal: lower_lower_lower_f.i_notFull
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: input_ports_7_put
 
Method: output_ports_0_get
Ready signal: merges_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: output_ports_0_get
 
Method: output_ports_1_get
Ready signal: merges_1_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: output_ports_1_get
 
Method: output_ports_2_get
Ready signal: merges_2_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: output_ports_2_get
 
Method: output_ports_3_get
Ready signal: merges_3_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: output_ports_3_get
 
Method: output_ports_4_get
Ready signal: merges_4_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_5_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: output_ports_4_get
 
Method: output_ports_5_get
Ready signal: merges_5_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_6_get,
	       output_ports_7_get
Conflicts: output_ports_5_get
 
Method: output_ports_6_get
Ready signal: merges_6_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_7_get
Conflicts: output_ports_6_get
 
Method: output_ports_7_get
Ready signal: merges_7_fo.i_notEmpty
Conflict-free: input_ports_0_put,
	       input_ports_1_put,
	       input_ports_2_put,
	       input_ports_3_put,
	       input_ports_4_put,
	       input_ports_5_put,
	       input_ports_6_put,
	       input_ports_7_put,
	       output_ports_0_get,
	       output_ports_1_get,
	       output_ports_2_get,
	       output_ports_3_get,
	       output_ports_4_get,
	       output_ports_5_get,
	       output_ports_6_get
Conflicts: output_ports_7_get
 
Rule schedule
-------------
Rule: upper_upper_merges_fi0_is_empty
Predicate: upper_upper_merges_fi1.i_notEmpty &&
	   upper_upper_merges_fo.i_notFull &&
	   (! upper_upper_merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_upper_merges_fi1_is_empty
Predicate: upper_upper_merges_fo.i_notFull &&
	   upper_upper_merges_fi0.i_notEmpty &&
	   (! upper_upper_merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_upper_merges_both_have_data
Predicate: (upper_upper_merges_routeFrom[1]
	    ? upper_upper_merges_fo.i_notFull &&
	      (upper_upper_merges_routeFrom[0]
	       ? upper_upper_merges_fi1.i_notEmpty
	       : upper_upper_merges_fi0.i_notEmpty)
	    : ((upper_upper_merges_fi0HasPrio
		? upper_upper_merges_fi0.i_notEmpty
		: upper_upper_merges_fi1.i_notEmpty) &&
	       ((upper_upper_merges_fi0HasPrio
		 ? ! upper_upper_merges_fi0.first[1]
		 : (! upper_upper_merges_fi1.first[1])) ||
		upper_upper_merges_fo.i_notFull))) &&
	   upper_upper_merges_fi0.notEmpty && upper_upper_merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_upper_merges_1_fi0_is_empty
Predicate: upper_upper_merges_1_fi1.i_notEmpty &&
	   upper_upper_merges_1_fo.i_notFull &&
	   (! upper_upper_merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_upper_merges_1_fi1_is_empty
Predicate: upper_upper_merges_1_fo.i_notFull &&
	   upper_upper_merges_1_fi0.i_notEmpty &&
	   (! upper_upper_merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_upper_merges_1_both_have_data
Predicate: (upper_upper_merges_1_routeFrom[1]
	    ? upper_upper_merges_1_fo.i_notFull &&
	      (upper_upper_merges_1_routeFrom[0]
	       ? upper_upper_merges_1_fi1.i_notEmpty
	       : upper_upper_merges_1_fi0.i_notEmpty)
	    : ((upper_upper_merges_1_fi0HasPrio
		? upper_upper_merges_1_fi0.i_notEmpty
		: upper_upper_merges_1_fi1.i_notEmpty) &&
	       ((upper_upper_merges_1_fi0HasPrio
		 ? ! upper_upper_merges_1_fi0.first[1]
		 : (! upper_upper_merges_1_fi1.first[1])) ||
		upper_upper_merges_1_fo.i_notFull))) &&
	   upper_upper_merges_1_fi0.notEmpty &&
	   upper_upper_merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_upper_route
Predicate: upper_upper_upper_f.i_notEmpty &&
	   (upper_upper_upper_f.first[578]
	    ? upper_upper_merges_1_fi1.i_notFull
	    : upper_upper_merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: upper_upper_route_1
Predicate: upper_upper_lower_f.i_notEmpty &&
	   (upper_upper_lower_f.first[578]
	    ? upper_upper_merges_1_fi0.i_notFull
	    : upper_upper_merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: upper_lower_merges_fi0_is_empty
Predicate: upper_lower_merges_fi1.i_notEmpty &&
	   upper_lower_merges_fo.i_notFull &&
	   (! upper_lower_merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_lower_merges_fi1_is_empty
Predicate: upper_lower_merges_fo.i_notFull &&
	   upper_lower_merges_fi0.i_notEmpty &&
	   (! upper_lower_merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_lower_merges_both_have_data
Predicate: (upper_lower_merges_routeFrom[1]
	    ? upper_lower_merges_fo.i_notFull &&
	      (upper_lower_merges_routeFrom[0]
	       ? upper_lower_merges_fi1.i_notEmpty
	       : upper_lower_merges_fi0.i_notEmpty)
	    : ((upper_lower_merges_fi0HasPrio
		? upper_lower_merges_fi0.i_notEmpty
		: upper_lower_merges_fi1.i_notEmpty) &&
	       ((upper_lower_merges_fi0HasPrio
		 ? ! upper_lower_merges_fi0.first[1]
		 : (! upper_lower_merges_fi1.first[1])) ||
		upper_lower_merges_fo.i_notFull))) &&
	   upper_lower_merges_fi0.notEmpty && upper_lower_merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_lower_merges_1_fi0_is_empty
Predicate: upper_lower_merges_1_fi1.i_notEmpty &&
	   upper_lower_merges_1_fo.i_notFull &&
	   (! upper_lower_merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_lower_merges_1_fi1_is_empty
Predicate: upper_lower_merges_1_fo.i_notFull &&
	   upper_lower_merges_1_fi0.i_notEmpty &&
	   (! upper_lower_merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_lower_merges_1_both_have_data
Predicate: (upper_lower_merges_1_routeFrom[1]
	    ? upper_lower_merges_1_fo.i_notFull &&
	      (upper_lower_merges_1_routeFrom[0]
	       ? upper_lower_merges_1_fi1.i_notEmpty
	       : upper_lower_merges_1_fi0.i_notEmpty)
	    : ((upper_lower_merges_1_fi0HasPrio
		? upper_lower_merges_1_fi0.i_notEmpty
		: upper_lower_merges_1_fi1.i_notEmpty) &&
	       ((upper_lower_merges_1_fi0HasPrio
		 ? ! upper_lower_merges_1_fi0.first[1]
		 : (! upper_lower_merges_1_fi1.first[1])) ||
		upper_lower_merges_1_fo.i_notFull))) &&
	   upper_lower_merges_1_fi0.notEmpty &&
	   upper_lower_merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_lower_route
Predicate: upper_lower_upper_f.i_notEmpty &&
	   (upper_lower_upper_f.first[578]
	    ? upper_lower_merges_1_fi1.i_notFull
	    : upper_lower_merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: upper_lower_route_1
Predicate: upper_lower_lower_f.i_notEmpty &&
	   (upper_lower_lower_f.first[578]
	    ? upper_lower_merges_1_fi0.i_notFull
	    : upper_lower_merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: upper_merges_fi0_is_empty
Predicate: upper_merges_fi1.i_notEmpty && upper_merges_fo.i_notFull &&
	   (! upper_merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_fi1_is_empty
Predicate: upper_merges_fo.i_notFull && upper_merges_fi0.i_notEmpty &&
	   (! upper_merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_both_have_data
Predicate: (upper_merges_routeFrom[1]
	    ? upper_merges_fo.i_notFull &&
	      (upper_merges_routeFrom[0]
	       ? upper_merges_fi1.i_notEmpty
	       : upper_merges_fi0.i_notEmpty)
	    : ((upper_merges_fi0HasPrio
		? upper_merges_fi0.i_notEmpty
		: upper_merges_fi1.i_notEmpty) &&
	       ((upper_merges_fi0HasPrio
		 ? ! upper_merges_fi0.first[1]
		 : (! upper_merges_fi1.first[1])) ||
		upper_merges_fo.i_notFull))) &&
	   upper_merges_fi0.notEmpty && upper_merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_merges_1_fi0_is_empty
Predicate: upper_merges_1_fi1.i_notEmpty && upper_merges_1_fo.i_notFull &&
	   (! upper_merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_1_fi1_is_empty
Predicate: upper_merges_1_fo.i_notFull && upper_merges_1_fi0.i_notEmpty &&
	   (! upper_merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_1_both_have_data
Predicate: (upper_merges_1_routeFrom[1]
	    ? upper_merges_1_fo.i_notFull &&
	      (upper_merges_1_routeFrom[0]
	       ? upper_merges_1_fi1.i_notEmpty
	       : upper_merges_1_fi0.i_notEmpty)
	    : ((upper_merges_1_fi0HasPrio
		? upper_merges_1_fi0.i_notEmpty
		: upper_merges_1_fi1.i_notEmpty) &&
	       ((upper_merges_1_fi0HasPrio
		 ? ! upper_merges_1_fi0.first[1]
		 : (! upper_merges_1_fi1.first[1])) ||
		upper_merges_1_fo.i_notFull))) &&
	   upper_merges_1_fi0.notEmpty && upper_merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_merges_2_fi0_is_empty
Predicate: upper_merges_2_fi1.i_notEmpty && upper_merges_2_fo.i_notFull &&
	   (! upper_merges_2_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_2_fi1_is_empty
Predicate: upper_merges_2_fo.i_notFull && upper_merges_2_fi0.i_notEmpty &&
	   (! upper_merges_2_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_2_both_have_data
Predicate: (upper_merges_2_routeFrom[1]
	    ? upper_merges_2_fo.i_notFull &&
	      (upper_merges_2_routeFrom[0]
	       ? upper_merges_2_fi1.i_notEmpty
	       : upper_merges_2_fi0.i_notEmpty)
	    : ((upper_merges_2_fi0HasPrio
		? upper_merges_2_fi0.i_notEmpty
		: upper_merges_2_fi1.i_notEmpty) &&
	       ((upper_merges_2_fi0HasPrio
		 ? ! upper_merges_2_fi0.first[1]
		 : (! upper_merges_2_fi1.first[1])) ||
		upper_merges_2_fo.i_notFull))) &&
	   upper_merges_2_fi0.notEmpty && upper_merges_2_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_merges_3_fi0_is_empty
Predicate: upper_merges_3_fi1.i_notEmpty && upper_merges_3_fo.i_notFull &&
	   (! upper_merges_3_fi0.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_3_fi1_is_empty
Predicate: upper_merges_3_fo.i_notFull && upper_merges_3_fi0.i_notEmpty &&
	   (! upper_merges_3_fi1.notEmpty)
Blocking rules: (none)
 
Rule: upper_merges_3_both_have_data
Predicate: (upper_merges_3_routeFrom[1]
	    ? upper_merges_3_fo.i_notFull &&
	      (upper_merges_3_routeFrom[0]
	       ? upper_merges_3_fi1.i_notEmpty
	       : upper_merges_3_fi0.i_notEmpty)
	    : ((upper_merges_3_fi0HasPrio
		? upper_merges_3_fi0.i_notEmpty
		: upper_merges_3_fi1.i_notEmpty) &&
	       ((upper_merges_3_fi0HasPrio
		 ? ! upper_merges_3_fi0.first[1]
		 : (! upper_merges_3_fi1.first[1])) ||
		upper_merges_3_fo.i_notFull))) &&
	   upper_merges_3_fi0.notEmpty && upper_merges_3_fi1.notEmpty
Blocking rules: (none)
 
Rule: upper_route
Predicate: upper_upper_merges_fo.i_notEmpty &&
	   (upper_upper_merges_fo.first[579]
	    ? upper_merges_2_fi1.i_notFull
	    : upper_merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: upper_route_1
Predicate: upper_upper_merges_1_fo.i_notEmpty &&
	   (upper_upper_merges_1_fo.first[579]
	    ? upper_merges_3_fi1.i_notFull
	    : upper_merges_1_fi0.i_notFull)
Blocking rules: (none)
 
Rule: upper_route_2
Predicate: upper_lower_merges_fo.i_notEmpty &&
	   (upper_lower_merges_fo.first[579]
	    ? upper_merges_2_fi0.i_notFull
	    : upper_merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: upper_route_3
Predicate: upper_lower_merges_1_fo.i_notEmpty &&
	   (upper_lower_merges_1_fo.first[579]
	    ? upper_merges_3_fi0.i_notFull
	    : upper_merges_1_fi1.i_notFull)
Blocking rules: (none)
 
Rule: lower_upper_merges_fi0_is_empty
Predicate: lower_upper_merges_fi1.i_notEmpty &&
	   lower_upper_merges_fo.i_notFull &&
	   (! lower_upper_merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_upper_merges_fi1_is_empty
Predicate: lower_upper_merges_fo.i_notFull &&
	   lower_upper_merges_fi0.i_notEmpty &&
	   (! lower_upper_merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_upper_merges_both_have_data
Predicate: (lower_upper_merges_routeFrom[1]
	    ? lower_upper_merges_fo.i_notFull &&
	      (lower_upper_merges_routeFrom[0]
	       ? lower_upper_merges_fi1.i_notEmpty
	       : lower_upper_merges_fi0.i_notEmpty)
	    : ((lower_upper_merges_fi0HasPrio
		? lower_upper_merges_fi0.i_notEmpty
		: lower_upper_merges_fi1.i_notEmpty) &&
	       ((lower_upper_merges_fi0HasPrio
		 ? ! lower_upper_merges_fi0.first[1]
		 : (! lower_upper_merges_fi1.first[1])) ||
		lower_upper_merges_fo.i_notFull))) &&
	   lower_upper_merges_fi0.notEmpty && lower_upper_merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_upper_merges_1_fi0_is_empty
Predicate: lower_upper_merges_1_fi1.i_notEmpty &&
	   lower_upper_merges_1_fo.i_notFull &&
	   (! lower_upper_merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_upper_merges_1_fi1_is_empty
Predicate: lower_upper_merges_1_fo.i_notFull &&
	   lower_upper_merges_1_fi0.i_notEmpty &&
	   (! lower_upper_merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_upper_merges_1_both_have_data
Predicate: (lower_upper_merges_1_routeFrom[1]
	    ? lower_upper_merges_1_fo.i_notFull &&
	      (lower_upper_merges_1_routeFrom[0]
	       ? lower_upper_merges_1_fi1.i_notEmpty
	       : lower_upper_merges_1_fi0.i_notEmpty)
	    : ((lower_upper_merges_1_fi0HasPrio
		? lower_upper_merges_1_fi0.i_notEmpty
		: lower_upper_merges_1_fi1.i_notEmpty) &&
	       ((lower_upper_merges_1_fi0HasPrio
		 ? ! lower_upper_merges_1_fi0.first[1]
		 : (! lower_upper_merges_1_fi1.first[1])) ||
		lower_upper_merges_1_fo.i_notFull))) &&
	   lower_upper_merges_1_fi0.notEmpty &&
	   lower_upper_merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_upper_route
Predicate: lower_upper_upper_f.i_notEmpty &&
	   (lower_upper_upper_f.first[578]
	    ? lower_upper_merges_1_fi1.i_notFull
	    : lower_upper_merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: lower_upper_route_1
Predicate: lower_upper_lower_f.i_notEmpty &&
	   (lower_upper_lower_f.first[578]
	    ? lower_upper_merges_1_fi0.i_notFull
	    : lower_upper_merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: lower_lower_merges_fi0_is_empty
Predicate: lower_lower_merges_fi1.i_notEmpty &&
	   lower_lower_merges_fo.i_notFull &&
	   (! lower_lower_merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_lower_merges_fi1_is_empty
Predicate: lower_lower_merges_fo.i_notFull &&
	   lower_lower_merges_fi0.i_notEmpty &&
	   (! lower_lower_merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_lower_merges_both_have_data
Predicate: (lower_lower_merges_routeFrom[1]
	    ? lower_lower_merges_fo.i_notFull &&
	      (lower_lower_merges_routeFrom[0]
	       ? lower_lower_merges_fi1.i_notEmpty
	       : lower_lower_merges_fi0.i_notEmpty)
	    : ((lower_lower_merges_fi0HasPrio
		? lower_lower_merges_fi0.i_notEmpty
		: lower_lower_merges_fi1.i_notEmpty) &&
	       ((lower_lower_merges_fi0HasPrio
		 ? ! lower_lower_merges_fi0.first[1]
		 : (! lower_lower_merges_fi1.first[1])) ||
		lower_lower_merges_fo.i_notFull))) &&
	   lower_lower_merges_fi0.notEmpty && lower_lower_merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_lower_merges_1_fi0_is_empty
Predicate: lower_lower_merges_1_fi1.i_notEmpty &&
	   lower_lower_merges_1_fo.i_notFull &&
	   (! lower_lower_merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_lower_merges_1_fi1_is_empty
Predicate: lower_lower_merges_1_fo.i_notFull &&
	   lower_lower_merges_1_fi0.i_notEmpty &&
	   (! lower_lower_merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_lower_merges_1_both_have_data
Predicate: (lower_lower_merges_1_routeFrom[1]
	    ? lower_lower_merges_1_fo.i_notFull &&
	      (lower_lower_merges_1_routeFrom[0]
	       ? lower_lower_merges_1_fi1.i_notEmpty
	       : lower_lower_merges_1_fi0.i_notEmpty)
	    : ((lower_lower_merges_1_fi0HasPrio
		? lower_lower_merges_1_fi0.i_notEmpty
		: lower_lower_merges_1_fi1.i_notEmpty) &&
	       ((lower_lower_merges_1_fi0HasPrio
		 ? ! lower_lower_merges_1_fi0.first[1]
		 : (! lower_lower_merges_1_fi1.first[1])) ||
		lower_lower_merges_1_fo.i_notFull))) &&
	   lower_lower_merges_1_fi0.notEmpty &&
	   lower_lower_merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_lower_route
Predicate: lower_lower_upper_f.i_notEmpty &&
	   (lower_lower_upper_f.first[578]
	    ? lower_lower_merges_1_fi1.i_notFull
	    : lower_lower_merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: lower_lower_route_1
Predicate: lower_lower_lower_f.i_notEmpty &&
	   (lower_lower_lower_f.first[578]
	    ? lower_lower_merges_1_fi0.i_notFull
	    : lower_lower_merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: lower_merges_fi0_is_empty
Predicate: lower_merges_fi1.i_notEmpty && lower_merges_fo.i_notFull &&
	   (! lower_merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_fi1_is_empty
Predicate: lower_merges_fo.i_notFull && lower_merges_fi0.i_notEmpty &&
	   (! lower_merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_both_have_data
Predicate: (lower_merges_routeFrom[1]
	    ? lower_merges_fo.i_notFull &&
	      (lower_merges_routeFrom[0]
	       ? lower_merges_fi1.i_notEmpty
	       : lower_merges_fi0.i_notEmpty)
	    : ((lower_merges_fi0HasPrio
		? lower_merges_fi0.i_notEmpty
		: lower_merges_fi1.i_notEmpty) &&
	       ((lower_merges_fi0HasPrio
		 ? ! lower_merges_fi0.first[1]
		 : (! lower_merges_fi1.first[1])) ||
		lower_merges_fo.i_notFull))) &&
	   lower_merges_fi0.notEmpty && lower_merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_merges_1_fi0_is_empty
Predicate: lower_merges_1_fi1.i_notEmpty && lower_merges_1_fo.i_notFull &&
	   (! lower_merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_1_fi1_is_empty
Predicate: lower_merges_1_fo.i_notFull && lower_merges_1_fi0.i_notEmpty &&
	   (! lower_merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_1_both_have_data
Predicate: (lower_merges_1_routeFrom[1]
	    ? lower_merges_1_fo.i_notFull &&
	      (lower_merges_1_routeFrom[0]
	       ? lower_merges_1_fi1.i_notEmpty
	       : lower_merges_1_fi0.i_notEmpty)
	    : ((lower_merges_1_fi0HasPrio
		? lower_merges_1_fi0.i_notEmpty
		: lower_merges_1_fi1.i_notEmpty) &&
	       ((lower_merges_1_fi0HasPrio
		 ? ! lower_merges_1_fi0.first[1]
		 : (! lower_merges_1_fi1.first[1])) ||
		lower_merges_1_fo.i_notFull))) &&
	   lower_merges_1_fi0.notEmpty && lower_merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_merges_2_fi0_is_empty
Predicate: lower_merges_2_fi1.i_notEmpty && lower_merges_2_fo.i_notFull &&
	   (! lower_merges_2_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_2_fi1_is_empty
Predicate: lower_merges_2_fo.i_notFull && lower_merges_2_fi0.i_notEmpty &&
	   (! lower_merges_2_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_2_both_have_data
Predicate: (lower_merges_2_routeFrom[1]
	    ? lower_merges_2_fo.i_notFull &&
	      (lower_merges_2_routeFrom[0]
	       ? lower_merges_2_fi1.i_notEmpty
	       : lower_merges_2_fi0.i_notEmpty)
	    : ((lower_merges_2_fi0HasPrio
		? lower_merges_2_fi0.i_notEmpty
		: lower_merges_2_fi1.i_notEmpty) &&
	       ((lower_merges_2_fi0HasPrio
		 ? ! lower_merges_2_fi0.first[1]
		 : (! lower_merges_2_fi1.first[1])) ||
		lower_merges_2_fo.i_notFull))) &&
	   lower_merges_2_fi0.notEmpty && lower_merges_2_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_merges_3_fi0_is_empty
Predicate: lower_merges_3_fi1.i_notEmpty && lower_merges_3_fo.i_notFull &&
	   (! lower_merges_3_fi0.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_3_fi1_is_empty
Predicate: lower_merges_3_fo.i_notFull && lower_merges_3_fi0.i_notEmpty &&
	   (! lower_merges_3_fi1.notEmpty)
Blocking rules: (none)
 
Rule: lower_merges_3_both_have_data
Predicate: (lower_merges_3_routeFrom[1]
	    ? lower_merges_3_fo.i_notFull &&
	      (lower_merges_3_routeFrom[0]
	       ? lower_merges_3_fi1.i_notEmpty
	       : lower_merges_3_fi0.i_notEmpty)
	    : ((lower_merges_3_fi0HasPrio
		? lower_merges_3_fi0.i_notEmpty
		: lower_merges_3_fi1.i_notEmpty) &&
	       ((lower_merges_3_fi0HasPrio
		 ? ! lower_merges_3_fi0.first[1]
		 : (! lower_merges_3_fi1.first[1])) ||
		lower_merges_3_fo.i_notFull))) &&
	   lower_merges_3_fi0.notEmpty && lower_merges_3_fi1.notEmpty
Blocking rules: (none)
 
Rule: lower_route
Predicate: lower_upper_merges_fo.i_notEmpty &&
	   (lower_upper_merges_fo.first[579]
	    ? lower_merges_2_fi1.i_notFull
	    : lower_merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: lower_route_1
Predicate: lower_upper_merges_1_fo.i_notEmpty &&
	   (lower_upper_merges_1_fo.first[579]
	    ? lower_merges_3_fi1.i_notFull
	    : lower_merges_1_fi0.i_notFull)
Blocking rules: (none)
 
Rule: lower_route_2
Predicate: lower_lower_merges_fo.i_notEmpty &&
	   (lower_lower_merges_fo.first[579]
	    ? lower_merges_2_fi0.i_notFull
	    : lower_merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: lower_route_3
Predicate: lower_lower_merges_1_fo.i_notEmpty &&
	   (lower_lower_merges_1_fo.first[579]
	    ? lower_merges_3_fi0.i_notFull
	    : lower_merges_1_fi1.i_notFull)
Blocking rules: (none)
 
Rule: merges_fi0_is_empty
Predicate: merges_fi1.i_notEmpty && merges_fo.i_notFull &&
	   (! merges_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_fi1_is_empty
Predicate: merges_fo.i_notFull && merges_fi0.i_notEmpty &&
	   (! merges_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_both_have_data
Predicate: (merges_routeFrom[1]
	    ? merges_fo.i_notFull &&
	      (merges_routeFrom[0]
	       ? merges_fi1.i_notEmpty
	       : merges_fi0.i_notEmpty)
	    : ((merges_fi0HasPrio
		? merges_fi0.i_notEmpty
		: merges_fi1.i_notEmpty) &&
	       ((merges_fi0HasPrio
		 ? ! merges_fi0.first[1]
		 : (! merges_fi1.first[1])) ||
		merges_fo.i_notFull))) &&
	   merges_fi0.notEmpty && merges_fi1.notEmpty
Blocking rules: (none)
 
Rule: merges_1_fi0_is_empty
Predicate: merges_1_fi1.i_notEmpty && merges_1_fo.i_notFull &&
	   (! merges_1_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_1_fi1_is_empty
Predicate: merges_1_fo.i_notFull && merges_1_fi0.i_notEmpty &&
	   (! merges_1_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_1_both_have_data
Predicate: (merges_1_routeFrom[1]
	    ? merges_1_fo.i_notFull &&
	      (merges_1_routeFrom[0]
	       ? merges_1_fi1.i_notEmpty
	       : merges_1_fi0.i_notEmpty)
	    : ((merges_1_fi0HasPrio
		? merges_1_fi0.i_notEmpty
		: merges_1_fi1.i_notEmpty) &&
	       ((merges_1_fi0HasPrio
		 ? ! merges_1_fi0.first[1]
		 : (! merges_1_fi1.first[1])) ||
		merges_1_fo.i_notFull))) &&
	   merges_1_fi0.notEmpty && merges_1_fi1.notEmpty
Blocking rules: (none)
 
Rule: merges_2_fi0_is_empty
Predicate: merges_2_fi1.i_notEmpty && merges_2_fo.i_notFull &&
	   (! merges_2_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_2_fi1_is_empty
Predicate: merges_2_fo.i_notFull && merges_2_fi0.i_notEmpty &&
	   (! merges_2_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_2_both_have_data
Predicate: (merges_2_routeFrom[1]
	    ? merges_2_fo.i_notFull &&
	      (merges_2_routeFrom[0]
	       ? merges_2_fi1.i_notEmpty
	       : merges_2_fi0.i_notEmpty)
	    : ((merges_2_fi0HasPrio
		? merges_2_fi0.i_notEmpty
		: merges_2_fi1.i_notEmpty) &&
	       ((merges_2_fi0HasPrio
		 ? ! merges_2_fi0.first[1]
		 : (! merges_2_fi1.first[1])) ||
		merges_2_fo.i_notFull))) &&
	   merges_2_fi0.notEmpty && merges_2_fi1.notEmpty
Blocking rules: (none)
 
Rule: merges_3_fi0_is_empty
Predicate: merges_3_fi1.i_notEmpty && merges_3_fo.i_notFull &&
	   (! merges_3_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_3_fi1_is_empty
Predicate: merges_3_fo.i_notFull && merges_3_fi0.i_notEmpty &&
	   (! merges_3_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_3_both_have_data
Predicate: (merges_3_routeFrom[1]
	    ? merges_3_fo.i_notFull &&
	      (merges_3_routeFrom[0]
	       ? merges_3_fi1.i_notEmpty
	       : merges_3_fi0.i_notEmpty)
	    : ((merges_3_fi0HasPrio
		? merges_3_fi0.i_notEmpty
		: merges_3_fi1.i_notEmpty) &&
	       ((merges_3_fi0HasPrio
		 ? ! merges_3_fi0.first[1]
		 : (! merges_3_fi1.first[1])) ||
		merges_3_fo.i_notFull))) &&
	   merges_3_fi0.notEmpty && merges_3_fi1.notEmpty
Blocking rules: (none)
 
Rule: merges_4_fi0_is_empty
Predicate: merges_4_fi1.i_notEmpty && merges_4_fo.i_notFull &&
	   (! merges_4_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_4_fi1_is_empty
Predicate: merges_4_fo.i_notFull && merges_4_fi0.i_notEmpty &&
	   (! merges_4_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_4_both_have_data
Predicate: (merges_4_routeFrom[1]
	    ? merges_4_fo.i_notFull &&
	      (merges_4_routeFrom[0]
	       ? merges_4_fi1.i_notEmpty
	       : merges_4_fi0.i_notEmpty)
	    : ((merges_4_fi0HasPrio
		? merges_4_fi0.i_notEmpty
		: merges_4_fi1.i_notEmpty) &&
	       ((merges_4_fi0HasPrio
		 ? ! merges_4_fi0.first[1]
		 : (! merges_4_fi1.first[1])) ||
		merges_4_fo.i_notFull))) &&
	   merges_4_fi0.notEmpty && merges_4_fi1.notEmpty
Blocking rules: (none)
 
Rule: merges_5_fi0_is_empty
Predicate: merges_5_fi1.i_notEmpty && merges_5_fo.i_notFull &&
	   (! merges_5_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_5_fi1_is_empty
Predicate: merges_5_fo.i_notFull && merges_5_fi0.i_notEmpty &&
	   (! merges_5_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_5_both_have_data
Predicate: (merges_5_routeFrom[1]
	    ? merges_5_fo.i_notFull &&
	      (merges_5_routeFrom[0]
	       ? merges_5_fi1.i_notEmpty
	       : merges_5_fi0.i_notEmpty)
	    : ((merges_5_fi0HasPrio
		? merges_5_fi0.i_notEmpty
		: merges_5_fi1.i_notEmpty) &&
	       ((merges_5_fi0HasPrio
		 ? ! merges_5_fi0.first[1]
		 : (! merges_5_fi1.first[1])) ||
		merges_5_fo.i_notFull))) &&
	   merges_5_fi0.notEmpty && merges_5_fi1.notEmpty
Blocking rules: (none)
 
Rule: merges_6_fi0_is_empty
Predicate: merges_6_fi1.i_notEmpty && merges_6_fo.i_notFull &&
	   (! merges_6_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_6_fi1_is_empty
Predicate: merges_6_fo.i_notFull && merges_6_fi0.i_notEmpty &&
	   (! merges_6_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_6_both_have_data
Predicate: (merges_6_routeFrom[1]
	    ? merges_6_fo.i_notFull &&
	      (merges_6_routeFrom[0]
	       ? merges_6_fi1.i_notEmpty
	       : merges_6_fi0.i_notEmpty)
	    : ((merges_6_fi0HasPrio
		? merges_6_fi0.i_notEmpty
		: merges_6_fi1.i_notEmpty) &&
	       ((merges_6_fi0HasPrio
		 ? ! merges_6_fi0.first[1]
		 : (! merges_6_fi1.first[1])) ||
		merges_6_fo.i_notFull))) &&
	   merges_6_fi0.notEmpty && merges_6_fi1.notEmpty
Blocking rules: (none)
 
Rule: merges_7_fi0_is_empty
Predicate: merges_7_fi1.i_notEmpty && merges_7_fo.i_notFull &&
	   (! merges_7_fi0.notEmpty)
Blocking rules: (none)
 
Rule: merges_7_fi1_is_empty
Predicate: merges_7_fo.i_notFull && merges_7_fi0.i_notEmpty &&
	   (! merges_7_fi1.notEmpty)
Blocking rules: (none)
 
Rule: merges_7_both_have_data
Predicate: (merges_7_routeFrom[1]
	    ? merges_7_fo.i_notFull &&
	      (merges_7_routeFrom[0]
	       ? merges_7_fi1.i_notEmpty
	       : merges_7_fi0.i_notEmpty)
	    : ((merges_7_fi0HasPrio
		? merges_7_fi0.i_notEmpty
		: merges_7_fi1.i_notEmpty) &&
	       ((merges_7_fi0HasPrio
		 ? ! merges_7_fi0.first[1]
		 : (! merges_7_fi1.first[1])) ||
		merges_7_fo.i_notFull))) &&
	   merges_7_fi0.notEmpty && merges_7_fi1.notEmpty
Blocking rules: (none)
 
Rule: route
Predicate: upper_merges_fo.i_notEmpty &&
	   (upper_merges_fo.first[580]
	    ? merges_4_fi1.i_notFull
	    : merges_fi0.i_notFull)
Blocking rules: (none)
 
Rule: route_1
Predicate: upper_merges_1_fo.i_notEmpty &&
	   (upper_merges_1_fo.first[580]
	    ? merges_5_fi1.i_notFull
	    : merges_1_fi0.i_notFull)
Blocking rules: (none)
 
Rule: route_2
Predicate: upper_merges_2_fo.i_notEmpty &&
	   (upper_merges_2_fo.first[580]
	    ? merges_6_fi1.i_notFull
	    : merges_2_fi0.i_notFull)
Blocking rules: (none)
 
Rule: route_3
Predicate: upper_merges_3_fo.i_notEmpty &&
	   (upper_merges_3_fo.first[580]
	    ? merges_7_fi1.i_notFull
	    : merges_3_fi0.i_notFull)
Blocking rules: (none)
 
Rule: route_4
Predicate: lower_merges_fo.i_notEmpty &&
	   (lower_merges_fo.first[580]
	    ? merges_4_fi0.i_notFull
	    : merges_fi1.i_notFull)
Blocking rules: (none)
 
Rule: route_5
Predicate: lower_merges_1_fo.i_notEmpty &&
	   (lower_merges_1_fo.first[580]
	    ? merges_5_fi0.i_notFull
	    : merges_1_fi1.i_notFull)
Blocking rules: (none)
 
Rule: route_6
Predicate: lower_merges_2_fo.i_notEmpty &&
	   (lower_merges_2_fo.first[580]
	    ? merges_6_fi0.i_notFull
	    : merges_2_fi1.i_notFull)
Blocking rules: (none)
 
Rule: route_7
Predicate: lower_merges_3_fo.i_notEmpty &&
	   (lower_merges_3_fo.first[580]
	    ? merges_7_fi0.i_notFull
	    : merges_3_fi1.i_notFull)
Blocking rules: (none)
 
Logical execution order: input_ports_0_put,
			 input_ports_1_put,
			 input_ports_2_put,
			 input_ports_3_put,
			 input_ports_4_put,
			 input_ports_5_put,
			 input_ports_6_put,
			 input_ports_7_put,
			 output_ports_0_get,
			 output_ports_1_get,
			 output_ports_2_get,
			 output_ports_3_get,
			 output_ports_4_get,
			 output_ports_5_get,
			 output_ports_6_get,
			 output_ports_7_get,
			 upper_upper_merges_fi0_is_empty,
			 upper_upper_merges_fi1_is_empty,
			 upper_upper_merges_both_have_data,
			 upper_upper_merges_1_fi0_is_empty,
			 upper_upper_merges_1_fi1_is_empty,
			 upper_upper_merges_1_both_have_data,
			 upper_upper_route,
			 upper_upper_route_1,
			 upper_lower_merges_fi0_is_empty,
			 upper_lower_merges_fi1_is_empty,
			 upper_lower_merges_both_have_data,
			 upper_lower_merges_1_fi0_is_empty,
			 upper_lower_merges_1_fi1_is_empty,
			 upper_lower_merges_1_both_have_data,
			 upper_lower_route,
			 upper_lower_route_1,
			 upper_merges_fi0_is_empty,
			 upper_merges_fi1_is_empty,
			 upper_merges_both_have_data,
			 upper_merges_1_fi0_is_empty,
			 upper_merges_1_fi1_is_empty,
			 upper_merges_1_both_have_data,
			 upper_merges_2_fi0_is_empty,
			 upper_merges_2_fi1_is_empty,
			 upper_merges_2_both_have_data,
			 upper_route,
			 upper_route_2,
			 upper_merges_3_fi0_is_empty,
			 upper_merges_3_fi1_is_empty,
			 upper_merges_3_both_have_data,
			 upper_route_1,
			 upper_route_3,
			 lower_upper_merges_fi0_is_empty,
			 lower_upper_merges_fi1_is_empty,
			 lower_upper_merges_both_have_data,
			 lower_upper_merges_1_fi0_is_empty,
			 lower_upper_merges_1_fi1_is_empty,
			 lower_upper_merges_1_both_have_data,
			 lower_upper_route,
			 lower_upper_route_1,
			 lower_lower_merges_fi0_is_empty,
			 lower_lower_merges_fi1_is_empty,
			 lower_lower_merges_both_have_data,
			 lower_lower_merges_1_fi0_is_empty,
			 lower_lower_merges_1_fi1_is_empty,
			 lower_lower_merges_1_both_have_data,
			 lower_lower_route,
			 lower_lower_route_1,
			 lower_merges_fi0_is_empty,
			 lower_merges_fi1_is_empty,
			 lower_merges_both_have_data,
			 lower_merges_1_fi0_is_empty,
			 lower_merges_1_fi1_is_empty,
			 lower_merges_1_both_have_data,
			 lower_merges_2_fi0_is_empty,
			 lower_merges_2_fi1_is_empty,
			 lower_merges_2_both_have_data,
			 lower_route,
			 lower_route_2,
			 lower_merges_3_fi0_is_empty,
			 lower_merges_3_fi1_is_empty,
			 lower_merges_3_both_have_data,
			 lower_route_1,
			 lower_route_3,
			 merges_fi0_is_empty,
			 merges_fi1_is_empty,
			 merges_both_have_data,
			 merges_1_fi0_is_empty,
			 merges_1_fi1_is_empty,
			 merges_1_both_have_data,
			 merges_2_fi0_is_empty,
			 merges_2_fi1_is_empty,
			 merges_2_both_have_data,
			 merges_3_fi0_is_empty,
			 merges_3_fi1_is_empty,
			 merges_3_both_have_data,
			 merges_4_fi0_is_empty,
			 merges_4_fi1_is_empty,
			 merges_4_both_have_data,
			 route,
			 route_4,
			 merges_5_fi0_is_empty,
			 merges_5_fi1_is_empty,
			 merges_5_both_have_data,
			 route_1,
			 route_5,
			 merges_6_fi0_is_empty,
			 merges_6_fi1_is_empty,
			 merges_6_both_have_data,
			 route_2,
			 route_6,
			 merges_7_fi0_is_empty,
			 merges_7_fi1_is_empty,
			 merges_7_both_have_data,
			 route_3,
			 route_7

===============================================
