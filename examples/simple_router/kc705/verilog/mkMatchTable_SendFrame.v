//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Wed May 31 22:57:41 CST 2017
//
// BVI format method schedule info:
// schedule lookupPort_request_put  CF ( lookupPort_response_get,
// 				      add_entry_put,
// 				      delete_entry_put,
// 				      modify_entry_put );
// schedule lookupPort_request_put  C ( lookupPort_request_put );
//
// schedule lookupPort_response_get  CF ( lookupPort_request_put,
// 				       add_entry_put,
// 				       delete_entry_put,
// 				       modify_entry_put );
// schedule lookupPort_response_get  C ( lookupPort_response_get );
//
// schedule add_entry_put  CF ( lookupPort_request_put,
// 			     lookupPort_response_get,
// 			     delete_entry_put,
// 			     modify_entry_put );
// schedule add_entry_put  C ( add_entry_put );
//
// schedule delete_entry_put  CF ( lookupPort_request_put,
// 				lookupPort_response_get,
// 				add_entry_put,
// 				delete_entry_put,
// 				modify_entry_put );
//
// schedule modify_entry_put  CF ( lookupPort_request_put,
// 				lookupPort_response_get,
// 				add_entry_put,
// 				delete_entry_put,
// 				modify_entry_put );
//
//
// Ports:
// Name                         I/O  size props
// RDY_lookupPort_request_put     O     1 reg
// lookupPort_response_get        O    51 reg
// RDY_lookupPort_response_get    O     1 reg
// RDY_add_entry_put              O     1
// RDY_delete_entry_put           O     1 const
// RDY_modify_entry_put           O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// lookupPort_request_put         I     9 reg
// add_entry_put                  I    59 reg
// delete_entry_put               I     8 unused
// modify_entry_put               I    58 unused
// EN_lookupPort_request_put      I     1
// EN_add_entry_put               I     1
// EN_delete_entry_put            I     1 unused
// EN_modify_entry_put            I     1 unused
// EN_lookupPort_response_get     I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMatchTable_SendFrame(CLK,
			      RST_N,

			      lookupPort_request_put,
			      EN_lookupPort_request_put,
			      RDY_lookupPort_request_put,

			      EN_lookupPort_response_get,
			      lookupPort_response_get,
			      RDY_lookupPort_response_get,

			      add_entry_put,
			      EN_add_entry_put,
			      RDY_add_entry_put,

			      delete_entry_put,
			      EN_delete_entry_put,
			      RDY_delete_entry_put,

			      modify_entry_put,
			      EN_modify_entry_put,
			      RDY_modify_entry_put);
  parameter param1 = "";
  input  CLK;
  input  RST_N;

  // action method lookupPort_request_put
  input  [8 : 0] lookupPort_request_put;
  input  EN_lookupPort_request_put;
  output RDY_lookupPort_request_put;

  // actionvalue method lookupPort_response_get
  input  EN_lookupPort_response_get;
  output [50 : 0] lookupPort_response_get;
  output RDY_lookupPort_response_get;

  // action method add_entry_put
  input  [58 : 0] add_entry_put;
  input  EN_add_entry_put;
  output RDY_add_entry_put;

  // action method delete_entry_put
  input  [7 : 0] delete_entry_put;
  input  EN_delete_entry_put;
  output RDY_delete_entry_put;

  // action method modify_entry_put
  input  [57 : 0] modify_entry_put;
  input  EN_modify_entry_put;
  output RDY_modify_entry_put;

  // signals for module outputs
  wire [50 : 0] lookupPort_response_get;
  wire RDY_add_entry_put,
       RDY_delete_entry_put,
       RDY_lookupPort_request_put,
       RDY_lookupPort_response_get,
       RDY_modify_entry_put;

  // inlined wires
  wire ret_ifc_dmhc_is_hit_wire_wget,
       ret_ifc_dmhc_ldvn_start_wire_whas,
       ret_ifc_dmhc_ldvn_state_set_pw_whas,
       ret_ifc_dmhc_mslot_replacement_start_wire_whas,
       ret_ifc_dmhc_mslot_replacement_state_set_pw_whas,
       ret_ifc_dmhc_rec_value_whas;

  // register ret_ifc_dmhc_evictee_gslots_0
  reg [67 : 0] ret_ifc_dmhc_evictee_gslots_0;
  wire [67 : 0] ret_ifc_dmhc_evictee_gslots_0_D_IN;
  wire ret_ifc_dmhc_evictee_gslots_0_EN;

  // register ret_ifc_dmhc_evictee_gslots_1
  reg [67 : 0] ret_ifc_dmhc_evictee_gslots_1;
  wire [67 : 0] ret_ifc_dmhc_evictee_gslots_1_D_IN;
  wire ret_ifc_dmhc_evictee_gslots_1_EN;

  // register ret_ifc_dmhc_evictee_gslots_2
  reg [67 : 0] ret_ifc_dmhc_evictee_gslots_2;
  wire [67 : 0] ret_ifc_dmhc_evictee_gslots_2_D_IN;
  wire ret_ifc_dmhc_evictee_gslots_2_EN;

  // register ret_ifc_dmhc_evictee_gslots_3
  reg [67 : 0] ret_ifc_dmhc_evictee_gslots_3;
  wire [67 : 0] ret_ifc_dmhc_evictee_gslots_3_D_IN;
  wire ret_ifc_dmhc_evictee_gslots_3_EN;

  // register ret_ifc_dmhc_evictee_hvals_0
  reg [8 : 0] ret_ifc_dmhc_evictee_hvals_0;
  wire [8 : 0] ret_ifc_dmhc_evictee_hvals_0_D_IN;
  wire ret_ifc_dmhc_evictee_hvals_0_EN;

  // register ret_ifc_dmhc_evictee_hvals_1
  reg [8 : 0] ret_ifc_dmhc_evictee_hvals_1;
  wire [8 : 0] ret_ifc_dmhc_evictee_hvals_1_D_IN;
  wire ret_ifc_dmhc_evictee_hvals_1_EN;

  // register ret_ifc_dmhc_evictee_hvals_2
  reg [8 : 0] ret_ifc_dmhc_evictee_hvals_2;
  wire [8 : 0] ret_ifc_dmhc_evictee_hvals_2_D_IN;
  wire ret_ifc_dmhc_evictee_hvals_2_EN;

  // register ret_ifc_dmhc_evictee_hvals_3
  reg [8 : 0] ret_ifc_dmhc_evictee_hvals_3;
  wire [8 : 0] ret_ifc_dmhc_evictee_hvals_3_D_IN;
  wire ret_ifc_dmhc_evictee_hvals_3_EN;

  // register ret_ifc_dmhc_evictee_mslot
  reg [59 : 0] ret_ifc_dmhc_evictee_mslot;
  wire [59 : 0] ret_ifc_dmhc_evictee_mslot_D_IN;
  wire ret_ifc_dmhc_evictee_mslot_EN;

  // register ret_ifc_dmhc_hash_units_0_gslot_counter
  reg [8 : 0] ret_ifc_dmhc_hash_units_0_gslot_counter;
  wire [8 : 0] ret_ifc_dmhc_hash_units_0_gslot_counter_D_IN;
  wire ret_ifc_dmhc_hash_units_0_gslot_counter_EN;

  // register ret_ifc_dmhc_hash_units_0_init
  reg ret_ifc_dmhc_hash_units_0_init;
  wire ret_ifc_dmhc_hash_units_0_init_D_IN, ret_ifc_dmhc_hash_units_0_init_EN;

  // register ret_ifc_dmhc_hash_units_0_is_miss
  reg ret_ifc_dmhc_hash_units_0_is_miss;
  wire ret_ifc_dmhc_hash_units_0_is_miss_D_IN,
       ret_ifc_dmhc_hash_units_0_is_miss_EN;

  // register ret_ifc_dmhc_hash_units_1_gslot_counter
  reg [8 : 0] ret_ifc_dmhc_hash_units_1_gslot_counter;
  wire [8 : 0] ret_ifc_dmhc_hash_units_1_gslot_counter_D_IN;
  wire ret_ifc_dmhc_hash_units_1_gslot_counter_EN;

  // register ret_ifc_dmhc_hash_units_1_init
  reg ret_ifc_dmhc_hash_units_1_init;
  wire ret_ifc_dmhc_hash_units_1_init_D_IN, ret_ifc_dmhc_hash_units_1_init_EN;

  // register ret_ifc_dmhc_hash_units_1_is_miss
  reg ret_ifc_dmhc_hash_units_1_is_miss;
  wire ret_ifc_dmhc_hash_units_1_is_miss_D_IN,
       ret_ifc_dmhc_hash_units_1_is_miss_EN;

  // register ret_ifc_dmhc_hash_units_2_gslot_counter
  reg [8 : 0] ret_ifc_dmhc_hash_units_2_gslot_counter;
  wire [8 : 0] ret_ifc_dmhc_hash_units_2_gslot_counter_D_IN;
  wire ret_ifc_dmhc_hash_units_2_gslot_counter_EN;

  // register ret_ifc_dmhc_hash_units_2_init
  reg ret_ifc_dmhc_hash_units_2_init;
  wire ret_ifc_dmhc_hash_units_2_init_D_IN, ret_ifc_dmhc_hash_units_2_init_EN;

  // register ret_ifc_dmhc_hash_units_2_is_miss
  reg ret_ifc_dmhc_hash_units_2_is_miss;
  wire ret_ifc_dmhc_hash_units_2_is_miss_D_IN,
       ret_ifc_dmhc_hash_units_2_is_miss_EN;

  // register ret_ifc_dmhc_hash_units_3_gslot_counter
  reg [8 : 0] ret_ifc_dmhc_hash_units_3_gslot_counter;
  wire [8 : 0] ret_ifc_dmhc_hash_units_3_gslot_counter_D_IN;
  wire ret_ifc_dmhc_hash_units_3_gslot_counter_EN;

  // register ret_ifc_dmhc_hash_units_3_init
  reg ret_ifc_dmhc_hash_units_3_init;
  wire ret_ifc_dmhc_hash_units_3_init_D_IN, ret_ifc_dmhc_hash_units_3_init_EN;

  // register ret_ifc_dmhc_hash_units_3_is_miss
  reg ret_ifc_dmhc_hash_units_3_is_miss;
  wire ret_ifc_dmhc_hash_units_3_is_miss_D_IN,
       ret_ifc_dmhc_hash_units_3_is_miss_EN;

  // register ret_ifc_dmhc_inited
  reg ret_ifc_dmhc_inited;
  wire ret_ifc_dmhc_inited_D_IN, ret_ifc_dmhc_inited_EN;

  // register ret_ifc_dmhc_ldvn_start_reg
  reg ret_ifc_dmhc_ldvn_start_reg;
  wire ret_ifc_dmhc_ldvn_start_reg_D_IN, ret_ifc_dmhc_ldvn_start_reg_EN;

  // register ret_ifc_dmhc_ldvn_start_reg_1
  reg ret_ifc_dmhc_ldvn_start_reg_1;
  wire ret_ifc_dmhc_ldvn_start_reg_1_D_IN, ret_ifc_dmhc_ldvn_start_reg_1_EN;

  // register ret_ifc_dmhc_ldvn_state_can_overlap
  reg ret_ifc_dmhc_ldvn_state_can_overlap;
  wire ret_ifc_dmhc_ldvn_state_can_overlap_D_IN,
       ret_ifc_dmhc_ldvn_state_can_overlap_EN;

  // register ret_ifc_dmhc_ldvn_state_fired
  reg ret_ifc_dmhc_ldvn_state_fired;
  wire ret_ifc_dmhc_ldvn_state_fired_D_IN, ret_ifc_dmhc_ldvn_state_fired_EN;

  // register ret_ifc_dmhc_ldvn_state_mkFSMstate
  reg [3 : 0] ret_ifc_dmhc_ldvn_state_mkFSMstate;
  reg [3 : 0] ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN;
  wire ret_ifc_dmhc_ldvn_state_mkFSMstate_EN;

  // register ret_ifc_dmhc_miss_service
  reg ret_ifc_dmhc_miss_service;
  wire ret_ifc_dmhc_miss_service_D_IN, ret_ifc_dmhc_miss_service_EN;

  // register ret_ifc_dmhc_mslot_counter
  reg [7 : 0] ret_ifc_dmhc_mslot_counter;
  wire [7 : 0] ret_ifc_dmhc_mslot_counter_D_IN;
  wire ret_ifc_dmhc_mslot_counter_EN;

  // register ret_ifc_dmhc_mslot_replacement_start_reg
  reg ret_ifc_dmhc_mslot_replacement_start_reg;
  wire ret_ifc_dmhc_mslot_replacement_start_reg_D_IN,
       ret_ifc_dmhc_mslot_replacement_start_reg_EN;

  // register ret_ifc_dmhc_mslot_replacement_start_reg_1
  reg ret_ifc_dmhc_mslot_replacement_start_reg_1;
  wire ret_ifc_dmhc_mslot_replacement_start_reg_1_D_IN,
       ret_ifc_dmhc_mslot_replacement_start_reg_1_EN;

  // register ret_ifc_dmhc_mslot_replacement_state_can_overlap
  reg ret_ifc_dmhc_mslot_replacement_state_can_overlap;
  wire ret_ifc_dmhc_mslot_replacement_state_can_overlap_D_IN,
       ret_ifc_dmhc_mslot_replacement_state_can_overlap_EN;

  // register ret_ifc_dmhc_mslot_replacement_state_fired
  reg ret_ifc_dmhc_mslot_replacement_state_fired;
  wire ret_ifc_dmhc_mslot_replacement_state_fired_D_IN,
       ret_ifc_dmhc_mslot_replacement_state_fired_EN;

  // register ret_ifc_dmhc_mslot_replacement_state_mkFSMstate
  reg [3 : 0] ret_ifc_dmhc_mslot_replacement_state_mkFSMstate;
  reg [3 : 0] ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN;
  wire ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_EN;

  // register ret_ifc_dmhc_mslot_to_repair
  reg [59 : 0] ret_ifc_dmhc_mslot_to_repair;
  wire [59 : 0] ret_ifc_dmhc_mslot_to_repair_D_IN;
  wire ret_ifc_dmhc_mslot_to_repair_EN;

  // register ret_ifc_dmhc_new_gslots_0
  reg [67 : 0] ret_ifc_dmhc_new_gslots_0;
  wire [67 : 0] ret_ifc_dmhc_new_gslots_0_D_IN;
  wire ret_ifc_dmhc_new_gslots_0_EN;

  // register ret_ifc_dmhc_new_gslots_1
  reg [67 : 0] ret_ifc_dmhc_new_gslots_1;
  wire [67 : 0] ret_ifc_dmhc_new_gslots_1_D_IN;
  wire ret_ifc_dmhc_new_gslots_1_EN;

  // register ret_ifc_dmhc_new_gslots_2
  reg [67 : 0] ret_ifc_dmhc_new_gslots_2;
  wire [67 : 0] ret_ifc_dmhc_new_gslots_2_D_IN;
  wire ret_ifc_dmhc_new_gslots_2_EN;

  // register ret_ifc_dmhc_new_gslots_3
  reg [67 : 0] ret_ifc_dmhc_new_gslots_3;
  wire [67 : 0] ret_ifc_dmhc_new_gslots_3_D_IN;
  wire ret_ifc_dmhc_new_gslots_3_EN;

  // register ret_ifc_dmhc_new_hvals_0
  reg [8 : 0] ret_ifc_dmhc_new_hvals_0;
  wire [8 : 0] ret_ifc_dmhc_new_hvals_0_D_IN;
  wire ret_ifc_dmhc_new_hvals_0_EN;

  // register ret_ifc_dmhc_new_hvals_1
  reg [8 : 0] ret_ifc_dmhc_new_hvals_1;
  wire [8 : 0] ret_ifc_dmhc_new_hvals_1_D_IN;
  wire ret_ifc_dmhc_new_hvals_1_EN;

  // register ret_ifc_dmhc_new_hvals_2
  reg [8 : 0] ret_ifc_dmhc_new_hvals_2;
  wire [8 : 0] ret_ifc_dmhc_new_hvals_2_D_IN;
  wire ret_ifc_dmhc_new_hvals_2_EN;

  // register ret_ifc_dmhc_new_hvals_3
  reg [8 : 0] ret_ifc_dmhc_new_hvals_3;
  wire [8 : 0] ret_ifc_dmhc_new_hvals_3_D_IN;
  wire ret_ifc_dmhc_new_hvals_3_EN;

  // register ret_ifc_dmhc_new_mslot
  reg [59 : 0] ret_ifc_dmhc_new_mslot;
  wire [59 : 0] ret_ifc_dmhc_new_mslot_D_IN;
  wire ret_ifc_dmhc_new_mslot_EN;

  // register ret_ifc_dmhc_repair_g_index
  reg [1 : 0] ret_ifc_dmhc_repair_g_index;
  wire [1 : 0] ret_ifc_dmhc_repair_g_index_D_IN;
  wire ret_ifc_dmhc_repair_g_index_EN;

  // register ret_ifc_dmhc_repair_gslot
  reg [67 : 0] ret_ifc_dmhc_repair_gslot;
  wire [67 : 0] ret_ifc_dmhc_repair_gslot_D_IN;
  wire ret_ifc_dmhc_repair_gslot_EN;

  // register ret_ifc_dmhc_repair_gslots_0
  reg [67 : 0] ret_ifc_dmhc_repair_gslots_0;
  wire [67 : 0] ret_ifc_dmhc_repair_gslots_0_D_IN;
  wire ret_ifc_dmhc_repair_gslots_0_EN;

  // register ret_ifc_dmhc_repair_gslots_1
  reg [67 : 0] ret_ifc_dmhc_repair_gslots_1;
  wire [67 : 0] ret_ifc_dmhc_repair_gslots_1_D_IN;
  wire ret_ifc_dmhc_repair_gslots_1_EN;

  // register ret_ifc_dmhc_repair_gslots_2
  reg [67 : 0] ret_ifc_dmhc_repair_gslots_2;
  wire [67 : 0] ret_ifc_dmhc_repair_gslots_2_D_IN;
  wire ret_ifc_dmhc_repair_gslots_2_EN;

  // register ret_ifc_dmhc_repair_gslots_3
  reg [67 : 0] ret_ifc_dmhc_repair_gslots_3;
  wire [67 : 0] ret_ifc_dmhc_repair_gslots_3_D_IN;
  wire ret_ifc_dmhc_repair_gslots_3_EN;

  // register ret_ifc_dmhc_repair_hvals_0
  reg [8 : 0] ret_ifc_dmhc_repair_hvals_0;
  wire [8 : 0] ret_ifc_dmhc_repair_hvals_0_D_IN;
  wire ret_ifc_dmhc_repair_hvals_0_EN;

  // register ret_ifc_dmhc_repair_hvals_1
  reg [8 : 0] ret_ifc_dmhc_repair_hvals_1;
  wire [8 : 0] ret_ifc_dmhc_repair_hvals_1_D_IN;
  wire ret_ifc_dmhc_repair_hvals_1_EN;

  // register ret_ifc_dmhc_repair_hvals_2
  reg [8 : 0] ret_ifc_dmhc_repair_hvals_2;
  wire [8 : 0] ret_ifc_dmhc_repair_hvals_2_D_IN;
  wire ret_ifc_dmhc_repair_hvals_2_EN;

  // register ret_ifc_dmhc_repair_hvals_3
  reg [8 : 0] ret_ifc_dmhc_repair_hvals_3;
  wire [8 : 0] ret_ifc_dmhc_repair_hvals_3_D_IN;
  wire ret_ifc_dmhc_repair_hvals_3_EN;

  // register ret_ifc_dmhc_repair_mslot
  reg [59 : 0] ret_ifc_dmhc_repair_mslot;
  wire [59 : 0] ret_ifc_dmhc_repair_mslot_D_IN;
  wire ret_ifc_dmhc_repair_mslot_EN;

  // register ret_ifc_dmhc_stage
  reg [1 : 0] ret_ifc_dmhc_stage;
  wire [1 : 0] ret_ifc_dmhc_stage_D_IN;
  wire ret_ifc_dmhc_stage_EN;

  // register ret_ifc_dmhc_victim_g_index
  reg [1 : 0] ret_ifc_dmhc_victim_g_index;
  wire [1 : 0] ret_ifc_dmhc_victim_g_index_D_IN;
  wire ret_ifc_dmhc_victim_g_index_EN;

  // register ret_ifc_dmhc_victim_gslot
  reg [67 : 0] ret_ifc_dmhc_victim_gslot;
  wire [67 : 0] ret_ifc_dmhc_victim_gslot_D_IN;
  wire ret_ifc_dmhc_victim_gslot_EN;

  // register ret_ifc_dmhc_victim_mslot
  reg [59 : 0] ret_ifc_dmhc_victim_mslot;
  wire [59 : 0] ret_ifc_dmhc_victim_mslot_D_IN;
  wire ret_ifc_dmhc_victim_mslot_EN;

  // register ret_ifc_dmhc_victim_mslot_addr
  reg [7 : 0] ret_ifc_dmhc_victim_mslot_addr;
  wire [7 : 0] ret_ifc_dmhc_victim_mslot_addr_D_IN;
  wire ret_ifc_dmhc_victim_mslot_addr_EN;

  // ports of submodule ret_ifc_delay2_ff
  wire [8 : 0] ret_ifc_delay2_ff_D_IN, ret_ifc_delay2_ff_D_OUT;
  wire ret_ifc_delay2_ff_CLR,
       ret_ifc_delay2_ff_DEQ,
       ret_ifc_delay2_ff_EMPTY_N,
       ret_ifc_delay2_ff_ENQ,
       ret_ifc_delay2_ff_FULL_N;

  // ports of submodule ret_ifc_delay_ff
  wire [8 : 0] ret_ifc_delay_ff_D_IN, ret_ifc_delay_ff_D_OUT;
  wire ret_ifc_delay_ff_CLR,
       ret_ifc_delay_ff_DEQ,
       ret_ifc_delay_ff_EMPTY_N,
       ret_ifc_delay_ff_ENQ,
       ret_ifc_delay_ff_FULL_N;

  // ports of submodule ret_ifc_dmhc_hash_units_0_g_table
  reg [67 : 0] ret_ifc_dmhc_hash_units_0_g_table_DIA,
	       ret_ifc_dmhc_hash_units_0_g_table_DIB;
  reg [8 : 0] ret_ifc_dmhc_hash_units_0_g_table_ADDRA,
	      ret_ifc_dmhc_hash_units_0_g_table_ADDRB;
  wire [67 : 0] ret_ifc_dmhc_hash_units_0_g_table_DOA;
  wire ret_ifc_dmhc_hash_units_0_g_table_ENA,
       ret_ifc_dmhc_hash_units_0_g_table_ENB,
       ret_ifc_dmhc_hash_units_0_g_table_WEA,
       ret_ifc_dmhc_hash_units_0_g_table_WEB;

  // ports of submodule ret_ifc_dmhc_hash_units_1_g_table
  reg [67 : 0] ret_ifc_dmhc_hash_units_1_g_table_DIA,
	       ret_ifc_dmhc_hash_units_1_g_table_DIB;
  reg [8 : 0] ret_ifc_dmhc_hash_units_1_g_table_ADDRA,
	      ret_ifc_dmhc_hash_units_1_g_table_ADDRB;
  wire [67 : 0] ret_ifc_dmhc_hash_units_1_g_table_DOA;
  wire ret_ifc_dmhc_hash_units_1_g_table_ENA,
       ret_ifc_dmhc_hash_units_1_g_table_ENB,
       ret_ifc_dmhc_hash_units_1_g_table_WEA,
       ret_ifc_dmhc_hash_units_1_g_table_WEB;

  // ports of submodule ret_ifc_dmhc_hash_units_2_g_table
  reg [67 : 0] ret_ifc_dmhc_hash_units_2_g_table_DIA,
	       ret_ifc_dmhc_hash_units_2_g_table_DIB;
  reg [8 : 0] ret_ifc_dmhc_hash_units_2_g_table_ADDRA,
	      ret_ifc_dmhc_hash_units_2_g_table_ADDRB;
  wire [67 : 0] ret_ifc_dmhc_hash_units_2_g_table_DOA;
  wire ret_ifc_dmhc_hash_units_2_g_table_ENA,
       ret_ifc_dmhc_hash_units_2_g_table_ENB,
       ret_ifc_dmhc_hash_units_2_g_table_WEA,
       ret_ifc_dmhc_hash_units_2_g_table_WEB;

  // ports of submodule ret_ifc_dmhc_hash_units_3_g_table
  reg [67 : 0] ret_ifc_dmhc_hash_units_3_g_table_DIA,
	       ret_ifc_dmhc_hash_units_3_g_table_DIB;
  reg [8 : 0] ret_ifc_dmhc_hash_units_3_g_table_ADDRA,
	      ret_ifc_dmhc_hash_units_3_g_table_ADDRB;
  wire [67 : 0] ret_ifc_dmhc_hash_units_3_g_table_DOA;
  wire ret_ifc_dmhc_hash_units_3_g_table_ENA,
       ret_ifc_dmhc_hash_units_3_g_table_ENB,
       ret_ifc_dmhc_hash_units_3_g_table_WEA,
       ret_ifc_dmhc_hash_units_3_g_table_WEB;

  // ports of submodule ret_ifc_dmhc_m_table
  reg [59 : 0] ret_ifc_dmhc_m_table_DIB;
  wire [59 : 0] ret_ifc_dmhc_m_table_DIA, ret_ifc_dmhc_m_table_DOA;
  wire [7 : 0] ret_ifc_dmhc_m_table_ADDRA, ret_ifc_dmhc_m_table_ADDRB;
  wire ret_ifc_dmhc_m_table_ENA,
       ret_ifc_dmhc_m_table_ENB,
       ret_ifc_dmhc_m_table_WEA,
       ret_ifc_dmhc_m_table_WEB;

  // ports of submodule ret_ifc_dmhc_stage1_ff
  wire [8 : 0] ret_ifc_dmhc_stage1_ff_D_IN, ret_ifc_dmhc_stage1_ff_D_OUT;
  wire ret_ifc_dmhc_stage1_ff_CLR,
       ret_ifc_dmhc_stage1_ff_DEQ,
       ret_ifc_dmhc_stage1_ff_EMPTY_N,
       ret_ifc_dmhc_stage1_ff_ENQ,
       ret_ifc_dmhc_stage1_ff_FULL_N;

  // ports of submodule ret_ifc_dmhc_stage2_ff
  wire [8 : 0] ret_ifc_dmhc_stage2_ff_D_IN, ret_ifc_dmhc_stage2_ff_D_OUT;
  wire ret_ifc_dmhc_stage2_ff_CLR,
       ret_ifc_dmhc_stage2_ff_DEQ,
       ret_ifc_dmhc_stage2_ff_EMPTY_N,
       ret_ifc_dmhc_stage2_ff_ENQ,
       ret_ifc_dmhc_stage2_ff_FULL_N;

  // ports of submodule ret_ifc_readDataFifo
  wire [50 : 0] ret_ifc_readDataFifo_D_IN, ret_ifc_readDataFifo_D_OUT;
  wire ret_ifc_readDataFifo_CLR,
       ret_ifc_readDataFifo_DEQ,
       ret_ifc_readDataFifo_EMPTY_N,
       ret_ifc_readDataFifo_ENQ,
       ret_ifc_readDataFifo_FULL_N;

  // ports of submodule ret_ifc_readReqFifo
  wire [8 : 0] ret_ifc_readReqFifo_D_IN, ret_ifc_readReqFifo_D_OUT;
  wire ret_ifc_readReqFifo_CLR,
       ret_ifc_readReqFifo_DEQ,
       ret_ifc_readReqFifo_EMPTY_N,
       ret_ifc_readReqFifo_ENQ,
       ret_ifc_readReqFifo_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9,
       WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9,
       WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9,
       WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9,
       WILL_FIRE_RL_ret_ifc_dmhc_ldvn_fsm_start,
       WILL_FIRE_RL_ret_ifc_dmhc_ldvn_idle_l20c1,
       WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables,
       WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_fsm_start,
       WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1,
       WILL_FIRE_RL_ret_ifc_do_delay,
       WILL_FIRE_RL_ret_ifc_do_read,
       WILL_FIRE_RL_ret_ifc_do_resp;

  // inputs to muxes for submodule ports
  reg [67 : 0] MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__VAL_1,
	       MUX_ret_ifc_dmhc_evictee_gslots_1_write_1__VAL_1,
	       MUX_ret_ifc_dmhc_evictee_gslots_2_write_1__VAL_1,
	       MUX_ret_ifc_dmhc_evictee_gslots_3_write_1__VAL_1;
  wire [67 : 0] MUX_ret_ifc_dmhc_new_gslots_0_write_1__VAL_2,
		MUX_ret_ifc_dmhc_new_gslots_1_write_1__VAL_2,
		MUX_ret_ifc_dmhc_new_gslots_2_write_1__VAL_2,
		MUX_ret_ifc_dmhc_new_gslots_3_write_1__VAL_2,
		MUX_ret_ifc_dmhc_repair_gslots_0_write_1__VAL_2,
		MUX_ret_ifc_dmhc_repair_gslots_1_write_1__VAL_2,
		MUX_ret_ifc_dmhc_repair_gslots_2_write_1__VAL_2,
		MUX_ret_ifc_dmhc_repair_gslots_3_write_1__VAL_2;
  wire [49 : 0] MUX_ret_ifc_dmhc_rec_value_wset_1__VAL_2;
  wire [8 : 0] MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_1,
	       MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_2,
	       MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_3,
	       MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_4,
	       MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_1,
	       MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_2,
	       MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_3,
	       MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_4,
	       MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_1,
	       MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_2,
	       MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_3,
	       MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_4,
	       MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_1,
	       MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_2,
	       MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_3,
	       MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_4;
  wire [7 : 0] MUX_ret_ifc_dmhc_m_table_a_put_2__VAL_2,
	       MUX_ret_ifc_dmhc_mslot_counter_write_1__VAL_1,
	       MUX_ret_ifc_dmhc_mslot_counter_write_1__VAL_2;
  wire MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__SEL_1,
       MUX_ret_ifc_dmhc_inited_write_1__SEL_1,
       MUX_ret_ifc_dmhc_ldvn_start_reg_write_1__SEL_1,
       MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_1,
       MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_2;

  // remaining internal signals
  reg [63 : 0] v___1__h62928,
	       v___1__h66250,
	       v___1__h67019,
	       v__h60873,
	       v__h61537,
	       v__h62100,
	       v__h62279,
	       v__h66160,
	       v__h66419,
	       v__h66549,
	       v__h66821;
  wire [67 : 0] IF_ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_ETC___d366,
		IF_ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_ETC___d118;
  wire [49 : 0] IF_ret_ifc_dmhc_rec_value_whas__45_THEN_ret_if_ETC___d547,
		_theResult_____2_fst_value__h24217,
		_theResult_____2_fst_value__h24221,
		_theResult_____2_fst_value__h24225,
		_theResult_____2_fst_value__h24241,
		_theResult_____2_fst_value__h24245,
		_theResult_____2_fst_value__h24249,
		_theResult_____2_fst_value__h24253,
		_theResult_____2_fst_value__h58870,
		_theResult_____2_fst_value__h58874,
		_theResult_____2_fst_value__h58878,
		_theResult_____2_fst_value__h58894,
		_theResult_____2_fst_value__h58898,
		_theResult_____2_fst_value__h58902,
		_theResult_____2_fst_value__h58906,
		n_value__h24180,
		n_value__h58829,
		re_value__h61812,
		x_wget__h2155;
  wire [8 : 0] IF_ret_ifc_dmhc_evictee_mslot_34_BIT_51_36_THE_ETC___d248,
	       IF_ret_ifc_dmhc_evictee_mslot_34_BIT_58_45_THE_ETC___d259,
	       IF_ret_ifc_dmhc_evictee_mslot_BIT_54_THEN_1_EL_ETC__q2,
	       IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_51_6_THE_ETC___d78,
	       IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_58_5_THE_ETC___d89,
	       IF_ret_ifc_dmhc_mslot_to_repair_BIT_54_THEN_1__ETC__q1,
	       IF_ret_ifc_dmhc_new_mslot_16_BIT_51_18_THEN_1__ETC___d330,
	       IF_ret_ifc_dmhc_new_mslot_16_BIT_58_27_THEN_1__ETC___d341,
	       IF_ret_ifc_dmhc_new_mslot_BIT_54_THEN_1_ELSE_0__q3,
	       IF_ret_ifc_readReqFifoD_OUT_BIT_4_THEN_1_ELSE_0__q4,
	       IF_ret_ifc_readReqFifo_first__00_BIT_1_02_THEN_ETC___d514,
	       IF_ret_ifc_readReqFifo_first__00_BIT_8_11_THEN_ETC___d525;
  wire [7 : 0] _theResult_____2_fst_maddr__h24218,
	       _theResult_____2_fst_maddr__h24222,
	       _theResult_____2_fst_maddr__h24226,
	       _theResult_____2_fst_maddr__h24242,
	       _theResult_____2_fst_maddr__h24246,
	       _theResult_____2_fst_maddr__h24250,
	       _theResult_____2_fst_maddr__h58871,
	       _theResult_____2_fst_maddr__h58875,
	       _theResult_____2_fst_maddr__h58879,
	       _theResult_____2_fst_maddr__h58895,
	       _theResult_____2_fst_maddr__h58899,
	       _theResult_____2_fst_maddr__h58903,
	       _theResult_____3_fst_mslot__h57985,
	       _theResult_____3_fst_mslot__h58006,
	       mslot__h24202,
	       mslot__h24474,
	       mslot__h24599,
	       mslot__h24724,
	       n_maddr__h24181,
	       n_maddr__h58830,
	       re_maddr__h61811,
	       tmp_gslot_maddr__h24214,
	       tmp_gslot_maddr__h58867,
	       x__h60465;
  wire [1 : 0] _theResult_____3_fst_degree__h23454,
	       _theResult_____3_fst_degree__h23475,
	       _theResult_____3_fst_degree__h57986,
	       _theResult_____3_fst_degree__h58007,
	       n_degree__h58839,
	       n_degree__h59136,
	       n_degree__h59284,
	       n_degree__h59432,
	       x_degree__h51319,
	       x_degree__h51618,
	       x_degree__h51917,
	       x_degree__h52216;
  wire ret_ifc_dmhc_hash_units_0_init_AND_ret_ifc_dmh_ETC___d179,
       ret_ifc_dmhc_ldvn_abort_whas__8_AND_ret_ifc_dm_ETC___d193,
       ret_ifc_dmhc_mslot_replacement_abort_whas__99__ETC___d455,
       ret_ifc_dmhc_new_gslots_1_56_BITS_1_TO_0_57_UL_ETC___d360,
       ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_UL_ETC___d362,
       ret_ifc_dmhc_new_gslots_3_52_BITS_1_TO_0_53_UL_ETC___d364,
       ret_ifc_dmhc_repair_gslots_1_08_BITS_1_TO_0_09_ETC___d112,
       ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_07_ETC___d114,
       ret_ifc_dmhc_repair_gslots_3_04_BITS_1_TO_0_05_ETC___d116;

  // action method lookupPort_request_put
  assign RDY_lookupPort_request_put = ret_ifc_readReqFifo_FULL_N ;

  // actionvalue method lookupPort_response_get
  assign lookupPort_response_get = ret_ifc_readDataFifo_D_OUT ;
  assign RDY_lookupPort_response_get = ret_ifc_readDataFifo_EMPTY_N ;

  // action method add_entry_put
  assign RDY_add_entry_put =
	     ret_ifc_dmhc_inited &&
	     (ret_ifc_dmhc_miss_service ||
	      ret_ifc_dmhc_mslot_replacement_abort_whas__99__ETC___d455 &&
	      !ret_ifc_dmhc_mslot_replacement_start_reg) ;

  // action method delete_entry_put
  assign RDY_delete_entry_put = 1'd1 ;

  // action method modify_entry_put
  assign RDY_modify_entry_put = 1'd1 ;

  // submodule ret_ifc_delay2_ff
  FIFO2 #(.width(32'd9), .guarded(32'd1)) ret_ifc_delay2_ff(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(ret_ifc_delay2_ff_D_IN),
							    .ENQ(ret_ifc_delay2_ff_ENQ),
							    .DEQ(ret_ifc_delay2_ff_DEQ),
							    .CLR(ret_ifc_delay2_ff_CLR),
							    .D_OUT(ret_ifc_delay2_ff_D_OUT),
							    .FULL_N(ret_ifc_delay2_ff_FULL_N),
							    .EMPTY_N(ret_ifc_delay2_ff_EMPTY_N));

  // submodule ret_ifc_delay_ff
  FIFO2 #(.width(32'd9), .guarded(32'd1)) ret_ifc_delay_ff(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(ret_ifc_delay_ff_D_IN),
							   .ENQ(ret_ifc_delay_ff_ENQ),
							   .DEQ(ret_ifc_delay_ff_DEQ),
							   .CLR(ret_ifc_delay_ff_CLR),
							   .D_OUT(ret_ifc_delay_ff_D_OUT),
							   .FULL_N(ret_ifc_delay_ff_FULL_N),
							   .EMPTY_N(ret_ifc_delay_ff_EMPTY_N));

  // submodule ret_ifc_dmhc_hash_units_0_g_table
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd9),
	  .DATA_WIDTH(32'd68),
	  .MEMSIZE(10'd512)) ret_ifc_dmhc_hash_units_0_g_table(.CLKA(CLK),
							       .CLKB(CLK),
							       .ADDRA(ret_ifc_dmhc_hash_units_0_g_table_ADDRA),
							       .ADDRB(ret_ifc_dmhc_hash_units_0_g_table_ADDRB),
							       .DIA(ret_ifc_dmhc_hash_units_0_g_table_DIA),
							       .DIB(ret_ifc_dmhc_hash_units_0_g_table_DIB),
							       .WEA(ret_ifc_dmhc_hash_units_0_g_table_WEA),
							       .WEB(ret_ifc_dmhc_hash_units_0_g_table_WEB),
							       .ENA(ret_ifc_dmhc_hash_units_0_g_table_ENA),
							       .ENB(ret_ifc_dmhc_hash_units_0_g_table_ENB),
							       .DOA(ret_ifc_dmhc_hash_units_0_g_table_DOA),
							       .DOB());

  // submodule ret_ifc_dmhc_hash_units_1_g_table
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd9),
	  .DATA_WIDTH(32'd68),
	  .MEMSIZE(10'd512)) ret_ifc_dmhc_hash_units_1_g_table(.CLKA(CLK),
							       .CLKB(CLK),
							       .ADDRA(ret_ifc_dmhc_hash_units_1_g_table_ADDRA),
							       .ADDRB(ret_ifc_dmhc_hash_units_1_g_table_ADDRB),
							       .DIA(ret_ifc_dmhc_hash_units_1_g_table_DIA),
							       .DIB(ret_ifc_dmhc_hash_units_1_g_table_DIB),
							       .WEA(ret_ifc_dmhc_hash_units_1_g_table_WEA),
							       .WEB(ret_ifc_dmhc_hash_units_1_g_table_WEB),
							       .ENA(ret_ifc_dmhc_hash_units_1_g_table_ENA),
							       .ENB(ret_ifc_dmhc_hash_units_1_g_table_ENB),
							       .DOA(ret_ifc_dmhc_hash_units_1_g_table_DOA),
							       .DOB());

  // submodule ret_ifc_dmhc_hash_units_2_g_table
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd9),
	  .DATA_WIDTH(32'd68),
	  .MEMSIZE(10'd512)) ret_ifc_dmhc_hash_units_2_g_table(.CLKA(CLK),
							       .CLKB(CLK),
							       .ADDRA(ret_ifc_dmhc_hash_units_2_g_table_ADDRA),
							       .ADDRB(ret_ifc_dmhc_hash_units_2_g_table_ADDRB),
							       .DIA(ret_ifc_dmhc_hash_units_2_g_table_DIA),
							       .DIB(ret_ifc_dmhc_hash_units_2_g_table_DIB),
							       .WEA(ret_ifc_dmhc_hash_units_2_g_table_WEA),
							       .WEB(ret_ifc_dmhc_hash_units_2_g_table_WEB),
							       .ENA(ret_ifc_dmhc_hash_units_2_g_table_ENA),
							       .ENB(ret_ifc_dmhc_hash_units_2_g_table_ENB),
							       .DOA(ret_ifc_dmhc_hash_units_2_g_table_DOA),
							       .DOB());

  // submodule ret_ifc_dmhc_hash_units_3_g_table
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd9),
	  .DATA_WIDTH(32'd68),
	  .MEMSIZE(10'd512)) ret_ifc_dmhc_hash_units_3_g_table(.CLKA(CLK),
							       .CLKB(CLK),
							       .ADDRA(ret_ifc_dmhc_hash_units_3_g_table_ADDRA),
							       .ADDRB(ret_ifc_dmhc_hash_units_3_g_table_ADDRB),
							       .DIA(ret_ifc_dmhc_hash_units_3_g_table_DIA),
							       .DIB(ret_ifc_dmhc_hash_units_3_g_table_DIB),
							       .WEA(ret_ifc_dmhc_hash_units_3_g_table_WEA),
							       .WEB(ret_ifc_dmhc_hash_units_3_g_table_WEB),
							       .ENA(ret_ifc_dmhc_hash_units_3_g_table_ENA),
							       .ENB(ret_ifc_dmhc_hash_units_3_g_table_ENB),
							       .DOA(ret_ifc_dmhc_hash_units_3_g_table_DOA),
							       .DOB());

  // submodule ret_ifc_dmhc_m_table
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd60),
	  .MEMSIZE(9'd256)) ret_ifc_dmhc_m_table(.CLKA(CLK),
						 .CLKB(CLK),
						 .ADDRA(ret_ifc_dmhc_m_table_ADDRA),
						 .ADDRB(ret_ifc_dmhc_m_table_ADDRB),
						 .DIA(ret_ifc_dmhc_m_table_DIA),
						 .DIB(ret_ifc_dmhc_m_table_DIB),
						 .WEA(ret_ifc_dmhc_m_table_WEA),
						 .WEB(ret_ifc_dmhc_m_table_WEB),
						 .ENA(ret_ifc_dmhc_m_table_ENA),
						 .ENB(ret_ifc_dmhc_m_table_ENB),
						 .DOA(ret_ifc_dmhc_m_table_DOA),
						 .DOB());

  // submodule ret_ifc_dmhc_stage1_ff
  FIFO2 #(.width(32'd9), .guarded(32'd1)) ret_ifc_dmhc_stage1_ff(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(ret_ifc_dmhc_stage1_ff_D_IN),
								 .ENQ(ret_ifc_dmhc_stage1_ff_ENQ),
								 .DEQ(ret_ifc_dmhc_stage1_ff_DEQ),
								 .CLR(ret_ifc_dmhc_stage1_ff_CLR),
								 .D_OUT(ret_ifc_dmhc_stage1_ff_D_OUT),
								 .FULL_N(ret_ifc_dmhc_stage1_ff_FULL_N),
								 .EMPTY_N(ret_ifc_dmhc_stage1_ff_EMPTY_N));

  // submodule ret_ifc_dmhc_stage2_ff
  FIFO2 #(.width(32'd9), .guarded(32'd1)) ret_ifc_dmhc_stage2_ff(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(ret_ifc_dmhc_stage2_ff_D_IN),
								 .ENQ(ret_ifc_dmhc_stage2_ff_ENQ),
								 .DEQ(ret_ifc_dmhc_stage2_ff_DEQ),
								 .CLR(ret_ifc_dmhc_stage2_ff_CLR),
								 .D_OUT(ret_ifc_dmhc_stage2_ff_D_OUT),
								 .FULL_N(ret_ifc_dmhc_stage2_ff_FULL_N),
								 .EMPTY_N(ret_ifc_dmhc_stage2_ff_EMPTY_N));

  // submodule ret_ifc_readDataFifo
  FIFO2 #(.width(32'd51), .guarded(32'd1)) ret_ifc_readDataFifo(.RST(RST_N),
								.CLK(CLK),
								.D_IN(ret_ifc_readDataFifo_D_IN),
								.ENQ(ret_ifc_readDataFifo_ENQ),
								.DEQ(ret_ifc_readDataFifo_DEQ),
								.CLR(ret_ifc_readDataFifo_CLR),
								.D_OUT(ret_ifc_readDataFifo_D_OUT),
								.FULL_N(ret_ifc_readDataFifo_FULL_N),
								.EMPTY_N(ret_ifc_readDataFifo_EMPTY_N));

  // submodule ret_ifc_readReqFifo
  FIFO2 #(.width(32'd9), .guarded(32'd1)) ret_ifc_readReqFifo(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(ret_ifc_readReqFifo_D_IN),
							      .ENQ(ret_ifc_readReqFifo_ENQ),
							      .DEQ(ret_ifc_readReqFifo_DEQ),
							      .CLR(ret_ifc_readReqFifo_CLR),
							      .D_OUT(ret_ifc_readReqFifo_D_OUT),
							      .FULL_N(ret_ifc_readReqFifo_FULL_N),
							      .EMPTY_N(ret_ifc_readReqFifo_EMPTY_N));

  // rule RL_ret_ifc_do_read
  assign WILL_FIRE_RL_ret_ifc_do_read =
	     ret_ifc_readReqFifo_EMPTY_N && ret_ifc_dmhc_stage1_ff_FULL_N &&
	     ret_ifc_delay_ff_FULL_N &&
	     ret_ifc_dmhc_inited ;

  // rule RL_ret_ifc_dmhc_lookup_gtables
  assign WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables =
	     ret_ifc_dmhc_stage1_ff_EMPTY_N &&
	     ret_ifc_dmhc_stage2_ff_FULL_N &&
	     ret_ifc_dmhc_inited ;

  // rule RL_ret_ifc_dmhc_lookup_mtable
  assign WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable =
	     ret_ifc_dmhc_stage2_ff_EMPTY_N && ret_ifc_dmhc_inited &&
	     !WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables ;

  // rule RL_ret_ifc_do_delay
  assign WILL_FIRE_RL_ret_ifc_do_delay =
	     ret_ifc_delay_ff_EMPTY_N && ret_ifc_delay2_ff_FULL_N ;

  // rule RL_ret_ifc_do_resp
  assign WILL_FIRE_RL_ret_ifc_do_resp =
	     ret_ifc_delay2_ff_EMPTY_N && ret_ifc_readDataFifo_FULL_N ;

  // rule RL_ret_ifc_dmhc_ldvn_action_l30c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 =
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd1 &&
	     !WILL_FIRE_RL_ret_ifc_do_read ;

  // rule RL_ret_ifc_dmhc_ldvn_action_l99c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 =
	     ret_ifc_dmhc_hash_units_0_init_AND_ret_ifc_dmh_ETC___d179 &&
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd5 ;

  // rule RL_ret_ifc_dmhc_ldvn_fsm_start
  assign WILL_FIRE_RL_ret_ifc_dmhc_ldvn_fsm_start =
	     ret_ifc_dmhc_ldvn_abort_whas__8_AND_ret_ifc_dm_ETC___d193 &&
	     ret_ifc_dmhc_ldvn_start_reg ;

  // rule RL_ret_ifc_dmhc_ldvn_action_l22c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9 =
	     ret_ifc_dmhc_ldvn_start_wire_whas &&
	     (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd0 ||
	      ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd7) ;

  // rule RL_ret_ifc_dmhc_ldvn_idle_l20c1
  assign WILL_FIRE_RL_ret_ifc_dmhc_ldvn_idle_l20c1 =
	     !ret_ifc_dmhc_ldvn_start_wire_whas &&
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd7 ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_action_l128c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd1 &&
	     !WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 &&
	     !WILL_FIRE_RL_ret_ifc_do_read ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_action_l164c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 =
	     ret_ifc_dmhc_hash_units_0_init_AND_ret_ifc_dmh_ETC___d179 &&
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd4 &&
	     !WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_action_l172c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd5 &&
	     !WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 &&
	     !WILL_FIRE_RL_ret_ifc_do_read ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_action_l243c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 =
	     ret_ifc_dmhc_hash_units_0_init_AND_ret_ifc_dmh_ETC___d179 &&
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd9 &&
	     !WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_action_l251c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd10 &&
	     !(!ret_ifc_dmhc_inited) &&
	     !EN_add_entry_put ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_action_l258c9
  assign CAN_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 =
	     (ret_ifc_dmhc_victim_gslot[1:0] == 2'd0 ||
	      ret_ifc_dmhc_ldvn_abort_whas__8_AND_ret_ifc_dm_ETC___d193 &&
	      !ret_ifc_dmhc_ldvn_start_reg) &&
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd11 ;
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 =
	     CAN_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     !WILL_FIRE_RL_ret_ifc_dmhc_ldvn_fsm_start &&
	     !WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables &&
	     !(!ret_ifc_dmhc_inited) ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_fsm_start
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_fsm_start =
	     ret_ifc_dmhc_mslot_replacement_abort_whas__99__ETC___d455 &&
	     ret_ifc_dmhc_mslot_replacement_start_reg &&
	     !EN_add_entry_put ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_action_l121c9
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9 =
	     ret_ifc_dmhc_mslot_replacement_start_wire_whas &&
	     (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd0 ||
	      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd12) ;

  // rule RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1
  assign WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1 =
	     !ret_ifc_dmhc_mslot_replacement_start_wire_whas &&
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd12 ;

  // inputs to muxes for submodule ports
  assign MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__SEL_1 =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 &&
	     ret_ifc_dmhc_evictee_mslot[59] ;
  assign MUX_ret_ifc_dmhc_inited_write_1__SEL_1 =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     ret_ifc_dmhc_victim_gslot[1:0] == 2'd0 ;
  assign MUX_ret_ifc_dmhc_ldvn_start_reg_write_1__SEL_1 =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     ret_ifc_dmhc_victim_gslot[1:0] != 2'd0 ;
  assign MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_1 =
	     !ret_ifc_dmhc_inited &&
	     (ret_ifc_dmhc_hash_units_0_init ||
	      ret_ifc_dmhc_mslot_counter != 8'd255) ;
  assign MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_2 =
	     EN_add_entry_put && !ret_ifc_dmhc_miss_service ;
  always@(ret_ifc_dmhc_evictee_gslots_0 or x_degree__h51319)
  begin
    case (ret_ifc_dmhc_evictee_gslots_0[1:0])
      2'd0, 2'd1: MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__VAL_1 = 68'd0;
      default: MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__VAL_1 =
		   { ret_ifc_dmhc_evictee_gslots_0[67:2], x_degree__h51319 };
    endcase
  end
  always@(ret_ifc_dmhc_evictee_gslots_1 or x_degree__h51618)
  begin
    case (ret_ifc_dmhc_evictee_gslots_1[1:0])
      2'd0, 2'd1: MUX_ret_ifc_dmhc_evictee_gslots_1_write_1__VAL_1 = 68'd0;
      default: MUX_ret_ifc_dmhc_evictee_gslots_1_write_1__VAL_1 =
		   { ret_ifc_dmhc_evictee_gslots_1[67:2], x_degree__h51618 };
    endcase
  end
  always@(ret_ifc_dmhc_evictee_gslots_2 or x_degree__h51917)
  begin
    case (ret_ifc_dmhc_evictee_gslots_2[1:0])
      2'd0, 2'd1: MUX_ret_ifc_dmhc_evictee_gslots_2_write_1__VAL_1 = 68'd0;
      default: MUX_ret_ifc_dmhc_evictee_gslots_2_write_1__VAL_1 =
		   { ret_ifc_dmhc_evictee_gslots_2[67:2], x_degree__h51917 };
    endcase
  end
  always@(ret_ifc_dmhc_evictee_gslots_3 or x_degree__h52216)
  begin
    case (ret_ifc_dmhc_evictee_gslots_3[1:0])
      2'd0, 2'd1: MUX_ret_ifc_dmhc_evictee_gslots_3_write_1__VAL_1 = 68'd0;
      default: MUX_ret_ifc_dmhc_evictee_gslots_3_write_1__VAL_1 =
		   { ret_ifc_dmhc_evictee_gslots_3[67:2], x_degree__h52216 };
    endcase
  end
  assign MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_1 =
	     { ret_ifc_dmhc_mslot_to_repair[50],
	       ret_ifc_dmhc_mslot_to_repair[51],
	       ret_ifc_dmhc_mslot_to_repair[52],
	       ret_ifc_dmhc_mslot_to_repair[53],
	       ret_ifc_dmhc_mslot_to_repair[54],
	       ret_ifc_dmhc_mslot_to_repair[55],
	       ret_ifc_dmhc_mslot_to_repair[56],
	       ret_ifc_dmhc_mslot_to_repair[57],
	       ret_ifc_dmhc_mslot_to_repair[58] } ;
  assign MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_2 =
	     { ret_ifc_dmhc_evictee_mslot[50],
	       ret_ifc_dmhc_evictee_mslot[51],
	       ret_ifc_dmhc_evictee_mslot[52],
	       ret_ifc_dmhc_evictee_mslot[53],
	       ret_ifc_dmhc_evictee_mslot[54],
	       ret_ifc_dmhc_evictee_mslot[55],
	       ret_ifc_dmhc_evictee_mslot[56],
	       ret_ifc_dmhc_evictee_mslot[57],
	       ret_ifc_dmhc_evictee_mslot[58] } ;
  assign MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_3 =
	     { ret_ifc_dmhc_new_mslot[50],
	       ret_ifc_dmhc_new_mslot[51],
	       ret_ifc_dmhc_new_mslot[52],
	       ret_ifc_dmhc_new_mslot[53],
	       ret_ifc_dmhc_new_mslot[54],
	       ret_ifc_dmhc_new_mslot[55],
	       ret_ifc_dmhc_new_mslot[56],
	       ret_ifc_dmhc_new_mslot[57],
	       ret_ifc_dmhc_new_mslot[58] } ;
  assign MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_4 =
	     { ret_ifc_readReqFifo_D_OUT[0],
	       ret_ifc_readReqFifo_D_OUT[1],
	       ret_ifc_readReqFifo_D_OUT[2],
	       ret_ifc_readReqFifo_D_OUT[3],
	       ret_ifc_readReqFifo_D_OUT[4],
	       ret_ifc_readReqFifo_D_OUT[5],
	       ret_ifc_readReqFifo_D_OUT[6],
	       ret_ifc_readReqFifo_D_OUT[7],
	       ret_ifc_readReqFifo_D_OUT[8] } ;
  assign MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_1 =
	     { IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_51_6_THE_ETC___d78[8],
	       ret_ifc_dmhc_mslot_to_repair[56],
	       ret_ifc_dmhc_mslot_to_repair[57],
	       ret_ifc_dmhc_mslot_to_repair[54],
	       ret_ifc_dmhc_mslot_to_repair[55],
	       ret_ifc_dmhc_mslot_to_repair[52],
	       ret_ifc_dmhc_mslot_to_repair[53],
	       ret_ifc_dmhc_mslot_to_repair[50],
	       IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_51_6_THE_ETC___d78[0] } ;
  assign MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_2 =
	     { IF_ret_ifc_dmhc_evictee_mslot_34_BIT_51_36_THE_ETC___d248[8],
	       ret_ifc_dmhc_evictee_mslot[56],
	       ret_ifc_dmhc_evictee_mslot[57],
	       ret_ifc_dmhc_evictee_mslot[54],
	       ret_ifc_dmhc_evictee_mslot[55],
	       ret_ifc_dmhc_evictee_mslot[52],
	       ret_ifc_dmhc_evictee_mslot[53],
	       ret_ifc_dmhc_evictee_mslot[50],
	       IF_ret_ifc_dmhc_evictee_mslot_34_BIT_51_36_THE_ETC___d248[0] } ;
  assign MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_3 =
	     { IF_ret_ifc_dmhc_new_mslot_16_BIT_51_18_THEN_1__ETC___d330[8],
	       ret_ifc_dmhc_new_mslot[56],
	       ret_ifc_dmhc_new_mslot[57],
	       ret_ifc_dmhc_new_mslot[54],
	       ret_ifc_dmhc_new_mslot[55],
	       ret_ifc_dmhc_new_mslot[52],
	       ret_ifc_dmhc_new_mslot[53],
	       ret_ifc_dmhc_new_mslot[50],
	       IF_ret_ifc_dmhc_new_mslot_16_BIT_51_18_THEN_1__ETC___d330[0] } ;
  assign MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_4 =
	     { IF_ret_ifc_readReqFifo_first__00_BIT_1_02_THEN_ETC___d514[8],
	       ret_ifc_readReqFifo_D_OUT[6],
	       ret_ifc_readReqFifo_D_OUT[7],
	       ret_ifc_readReqFifo_D_OUT[4],
	       ret_ifc_readReqFifo_D_OUT[5],
	       ret_ifc_readReqFifo_D_OUT[2],
	       ret_ifc_readReqFifo_D_OUT[3],
	       ret_ifc_readReqFifo_D_OUT[0],
	       IF_ret_ifc_readReqFifo_first__00_BIT_1_02_THEN_ETC___d514[0] } ;
  assign MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_1 =
	     { IF_ret_ifc_dmhc_mslot_to_repair_BIT_54_THEN_1__ETC__q1[8:5],
	       ret_ifc_dmhc_mslot_to_repair[58],
	       ret_ifc_dmhc_mslot_to_repair[56:53] } ;
  assign MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_2 =
	     { IF_ret_ifc_dmhc_evictee_mslot_BIT_54_THEN_1_EL_ETC__q2[8:5],
	       ret_ifc_dmhc_evictee_mslot[58],
	       ret_ifc_dmhc_evictee_mslot[56:53] } ;
  assign MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_3 =
	     { IF_ret_ifc_dmhc_new_mslot_BIT_54_THEN_1_ELSE_0__q3[8:5],
	       ret_ifc_dmhc_new_mslot[58],
	       ret_ifc_dmhc_new_mslot[56:53] } ;
  assign MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_4 =
	     { IF_ret_ifc_readReqFifoD_OUT_BIT_4_THEN_1_ELSE_0__q4[8:5],
	       ret_ifc_readReqFifo_D_OUT[8],
	       ret_ifc_readReqFifo_D_OUT[6:3] } ;
  assign MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_1 =
	     { IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_58_5_THE_ETC___d89[8],
	       ret_ifc_dmhc_mslot_to_repair[56],
	       ret_ifc_dmhc_mslot_to_repair[52],
	       ret_ifc_dmhc_mslot_to_repair[54],
	       ret_ifc_dmhc_mslot_to_repair[54],
	       ret_ifc_dmhc_mslot_to_repair[52],
	       ret_ifc_dmhc_mslot_to_repair[56],
	       ret_ifc_dmhc_mslot_to_repair[50],
	       IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_58_5_THE_ETC___d89[0] } ;
  assign MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_2 =
	     { IF_ret_ifc_dmhc_evictee_mslot_34_BIT_58_45_THE_ETC___d259[8],
	       ret_ifc_dmhc_evictee_mslot[56],
	       ret_ifc_dmhc_evictee_mslot[52],
	       ret_ifc_dmhc_evictee_mslot[54],
	       ret_ifc_dmhc_evictee_mslot[54],
	       ret_ifc_dmhc_evictee_mslot[52],
	       ret_ifc_dmhc_evictee_mslot[56],
	       ret_ifc_dmhc_evictee_mslot[50],
	       IF_ret_ifc_dmhc_evictee_mslot_34_BIT_58_45_THE_ETC___d259[0] } ;
  assign MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_3 =
	     { IF_ret_ifc_dmhc_new_mslot_16_BIT_58_27_THEN_1__ETC___d341[8],
	       ret_ifc_dmhc_new_mslot[56],
	       ret_ifc_dmhc_new_mslot[52],
	       ret_ifc_dmhc_new_mslot[54],
	       ret_ifc_dmhc_new_mslot[54],
	       ret_ifc_dmhc_new_mslot[52],
	       ret_ifc_dmhc_new_mslot[56],
	       ret_ifc_dmhc_new_mslot[50],
	       IF_ret_ifc_dmhc_new_mslot_16_BIT_58_27_THEN_1__ETC___d341[0] } ;
  assign MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_4 =
	     { IF_ret_ifc_readReqFifo_first__00_BIT_8_11_THEN_ETC___d525[8],
	       ret_ifc_readReqFifo_D_OUT[6],
	       ret_ifc_readReqFifo_D_OUT[2],
	       ret_ifc_readReqFifo_D_OUT[4],
	       ret_ifc_readReqFifo_D_OUT[4],
	       ret_ifc_readReqFifo_D_OUT[2],
	       ret_ifc_readReqFifo_D_OUT[6],
	       ret_ifc_readReqFifo_D_OUT[0],
	       IF_ret_ifc_readReqFifo_first__00_BIT_8_11_THEN_ETC___d525[0] } ;
  assign MUX_ret_ifc_dmhc_m_table_a_put_2__VAL_2 =
	     ret_ifc_dmhc_hash_units_0_g_table_DOA[17:10] ^
	     ret_ifc_dmhc_hash_units_1_g_table_DOA[17:10] ^
	     ret_ifc_dmhc_hash_units_2_g_table_DOA[17:10] ^
	     ret_ifc_dmhc_hash_units_3_g_table_DOA[17:10] ;
  assign MUX_ret_ifc_dmhc_mslot_counter_write_1__VAL_1 =
	     (ret_ifc_dmhc_mslot_counter == 8'd255) ? 8'd0 : x__h60465 ;
  assign MUX_ret_ifc_dmhc_mslot_counter_write_1__VAL_2 =
	     ret_ifc_dmhc_mslot_counter + 8'd1 ;
  assign MUX_ret_ifc_dmhc_new_gslots_0_write_1__VAL_2 =
	     (ret_ifc_dmhc_victim_g_index == 2'd0) ?
	       { n_value__h58829,
		 n_maddr__h58830,
		 ret_ifc_dmhc_mslot_counter,
		 2'd1 } :
	       { ret_ifc_dmhc_new_gslots_0[67:10],
		 ret_ifc_dmhc_mslot_counter,
		 n_degree__h58839 } ;
  assign MUX_ret_ifc_dmhc_new_gslots_1_write_1__VAL_2 =
	     (ret_ifc_dmhc_victim_g_index == 2'd1) ?
	       { n_value__h58829,
		 n_maddr__h58830,
		 ret_ifc_dmhc_mslot_counter,
		 2'd1 } :
	       { ret_ifc_dmhc_new_gslots_1[67:10],
		 ret_ifc_dmhc_mslot_counter,
		 n_degree__h59136 } ;
  assign MUX_ret_ifc_dmhc_new_gslots_2_write_1__VAL_2 =
	     (ret_ifc_dmhc_victim_g_index == 2'd2) ?
	       { n_value__h58829,
		 n_maddr__h58830,
		 ret_ifc_dmhc_mslot_counter,
		 2'd1 } :
	       { ret_ifc_dmhc_new_gslots_2[67:10],
		 ret_ifc_dmhc_mslot_counter,
		 n_degree__h59284 } ;
  assign MUX_ret_ifc_dmhc_new_gslots_3_write_1__VAL_2 =
	     (ret_ifc_dmhc_victim_g_index == 2'd3) ?
	       { n_value__h58829,
		 n_maddr__h58830,
		 ret_ifc_dmhc_mslot_counter,
		 2'd1 } :
	       { ret_ifc_dmhc_new_gslots_3[67:10],
		 ret_ifc_dmhc_mslot_counter,
		 n_degree__h59432 } ;
  assign MUX_ret_ifc_dmhc_rec_value_wset_1__VAL_2 =
	     ret_ifc_dmhc_hash_units_0_g_table_DOA[67:18] ^
	     ret_ifc_dmhc_hash_units_1_g_table_DOA[67:18] ^
	     ret_ifc_dmhc_hash_units_2_g_table_DOA[67:18] ^
	     ret_ifc_dmhc_hash_units_3_g_table_DOA[67:18] ;
  assign MUX_ret_ifc_dmhc_repair_gslots_0_write_1__VAL_2 =
	     (ret_ifc_dmhc_repair_g_index == 2'd0) ?
	       { n_value__h24180, n_maddr__h24181, 10'd1 } :
	       { ret_ifc_dmhc_repair_gslots_0[67:10],
		 mslot__h24202,
		 ret_ifc_dmhc_repair_gslots_0[1:0] } ;
  assign MUX_ret_ifc_dmhc_repair_gslots_1_write_1__VAL_2 =
	     (ret_ifc_dmhc_repair_g_index == 2'd1) ?
	       { n_value__h24180, n_maddr__h24181, 10'd1 } :
	       { ret_ifc_dmhc_repair_gslots_1[67:10],
		 mslot__h24474,
		 ret_ifc_dmhc_repair_gslots_1[1:0] } ;
  assign MUX_ret_ifc_dmhc_repair_gslots_2_write_1__VAL_2 =
	     (ret_ifc_dmhc_repair_g_index == 2'd2) ?
	       { n_value__h24180, n_maddr__h24181, 10'd1 } :
	       { ret_ifc_dmhc_repair_gslots_2[67:10],
		 mslot__h24599,
		 ret_ifc_dmhc_repair_gslots_2[1:0] } ;
  assign MUX_ret_ifc_dmhc_repair_gslots_3_write_1__VAL_2 =
	     (ret_ifc_dmhc_repair_g_index == 2'd3) ?
	       { n_value__h24180, n_maddr__h24181, 10'd1 } :
	       { ret_ifc_dmhc_repair_gslots_3[67:10],
		 mslot__h24724,
		 ret_ifc_dmhc_repair_gslots_3[1:0] } ;

  // inlined wires
  assign ret_ifc_dmhc_is_hit_wire_wget =
	     ret_ifc_dmhc_stage2_ff_D_OUT == ret_ifc_dmhc_m_table_DOA[58:50] ;
  assign ret_ifc_dmhc_rec_value_whas =
	     WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	     WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables ;
  assign ret_ifc_dmhc_ldvn_start_wire_whas =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_fsm_start ||
	     ret_ifc_dmhc_ldvn_start_reg_1 && !ret_ifc_dmhc_ldvn_state_fired ;
  assign ret_ifc_dmhc_mslot_replacement_start_wire_whas =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_fsm_start ||
	     ret_ifc_dmhc_mslot_replacement_start_reg_1 &&
	     !ret_ifc_dmhc_mslot_replacement_state_fired ;
  assign ret_ifc_dmhc_ldvn_state_set_pw_whas =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_idle_l20c1 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9 ;
  assign ret_ifc_dmhc_mslot_replacement_state_set_pw_whas =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9 ;

  // register ret_ifc_dmhc_evictee_gslots_0
  assign ret_ifc_dmhc_evictee_gslots_0_D_IN =
	     MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__SEL_1 ?
	       MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__VAL_1 :
	       ret_ifc_dmhc_hash_units_0_g_table_DOA ;
  assign ret_ifc_dmhc_evictee_gslots_0_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 &&
	     ret_ifc_dmhc_evictee_mslot[59] ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ;

  // register ret_ifc_dmhc_evictee_gslots_1
  assign ret_ifc_dmhc_evictee_gslots_1_D_IN =
	     MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__SEL_1 ?
	       MUX_ret_ifc_dmhc_evictee_gslots_1_write_1__VAL_1 :
	       ret_ifc_dmhc_hash_units_1_g_table_DOA ;
  assign ret_ifc_dmhc_evictee_gslots_1_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 &&
	     ret_ifc_dmhc_evictee_mslot[59] ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ;

  // register ret_ifc_dmhc_evictee_gslots_2
  assign ret_ifc_dmhc_evictee_gslots_2_D_IN =
	     MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__SEL_1 ?
	       MUX_ret_ifc_dmhc_evictee_gslots_2_write_1__VAL_1 :
	       ret_ifc_dmhc_hash_units_2_g_table_DOA ;
  assign ret_ifc_dmhc_evictee_gslots_2_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 &&
	     ret_ifc_dmhc_evictee_mslot[59] ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ;

  // register ret_ifc_dmhc_evictee_gslots_3
  assign ret_ifc_dmhc_evictee_gslots_3_D_IN =
	     MUX_ret_ifc_dmhc_evictee_gslots_0_write_1__SEL_1 ?
	       MUX_ret_ifc_dmhc_evictee_gslots_3_write_1__VAL_1 :
	       ret_ifc_dmhc_hash_units_3_g_table_DOA ;
  assign ret_ifc_dmhc_evictee_gslots_3_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 &&
	     ret_ifc_dmhc_evictee_mslot[59] ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ;

  // register ret_ifc_dmhc_evictee_hvals_0
  assign ret_ifc_dmhc_evictee_hvals_0_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_2 ;
  assign ret_ifc_dmhc_evictee_hvals_0_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ;

  // register ret_ifc_dmhc_evictee_hvals_1
  assign ret_ifc_dmhc_evictee_hvals_1_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_2 ;
  assign ret_ifc_dmhc_evictee_hvals_1_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ;

  // register ret_ifc_dmhc_evictee_hvals_2
  assign ret_ifc_dmhc_evictee_hvals_2_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_2 ;
  assign ret_ifc_dmhc_evictee_hvals_2_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ;

  // register ret_ifc_dmhc_evictee_hvals_3
  assign ret_ifc_dmhc_evictee_hvals_3_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_2 ;
  assign ret_ifc_dmhc_evictee_hvals_3_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ;

  // register ret_ifc_dmhc_evictee_mslot
  assign ret_ifc_dmhc_evictee_mslot_D_IN = ret_ifc_dmhc_m_table_DOA ;
  assign ret_ifc_dmhc_evictee_mslot_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9 ;

  // register ret_ifc_dmhc_hash_units_0_gslot_counter
  assign ret_ifc_dmhc_hash_units_0_gslot_counter_D_IN =
	     ret_ifc_dmhc_hash_units_0_gslot_counter + 9'd1 ;
  assign ret_ifc_dmhc_hash_units_0_gslot_counter_EN =
	     !ret_ifc_dmhc_hash_units_0_init &&
	     ret_ifc_dmhc_hash_units_0_gslot_counter != 9'd511 ;

  // register ret_ifc_dmhc_hash_units_0_init
  assign ret_ifc_dmhc_hash_units_0_init_D_IN = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_0_init_EN =
	     !ret_ifc_dmhc_hash_units_0_init &&
	     ret_ifc_dmhc_hash_units_0_gslot_counter == 9'd511 ;

  // register ret_ifc_dmhc_hash_units_0_is_miss
  assign ret_ifc_dmhc_hash_units_0_is_miss_D_IN = 1'b0 ;
  assign ret_ifc_dmhc_hash_units_0_is_miss_EN = 1'b0 ;

  // register ret_ifc_dmhc_hash_units_1_gslot_counter
  assign ret_ifc_dmhc_hash_units_1_gslot_counter_D_IN =
	     ret_ifc_dmhc_hash_units_1_gslot_counter + 9'd1 ;
  assign ret_ifc_dmhc_hash_units_1_gslot_counter_EN =
	     !ret_ifc_dmhc_hash_units_1_init &&
	     ret_ifc_dmhc_hash_units_1_gslot_counter != 9'd511 ;

  // register ret_ifc_dmhc_hash_units_1_init
  assign ret_ifc_dmhc_hash_units_1_init_D_IN = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_1_init_EN =
	     !ret_ifc_dmhc_hash_units_1_init &&
	     ret_ifc_dmhc_hash_units_1_gslot_counter == 9'd511 ;

  // register ret_ifc_dmhc_hash_units_1_is_miss
  assign ret_ifc_dmhc_hash_units_1_is_miss_D_IN = 1'b0 ;
  assign ret_ifc_dmhc_hash_units_1_is_miss_EN = 1'b0 ;

  // register ret_ifc_dmhc_hash_units_2_gslot_counter
  assign ret_ifc_dmhc_hash_units_2_gslot_counter_D_IN =
	     ret_ifc_dmhc_hash_units_2_gslot_counter + 9'd1 ;
  assign ret_ifc_dmhc_hash_units_2_gslot_counter_EN =
	     !ret_ifc_dmhc_hash_units_2_init &&
	     ret_ifc_dmhc_hash_units_2_gslot_counter != 9'd511 ;

  // register ret_ifc_dmhc_hash_units_2_init
  assign ret_ifc_dmhc_hash_units_2_init_D_IN = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_2_init_EN =
	     !ret_ifc_dmhc_hash_units_2_init &&
	     ret_ifc_dmhc_hash_units_2_gslot_counter == 9'd511 ;

  // register ret_ifc_dmhc_hash_units_2_is_miss
  assign ret_ifc_dmhc_hash_units_2_is_miss_D_IN = 1'b0 ;
  assign ret_ifc_dmhc_hash_units_2_is_miss_EN = 1'b0 ;

  // register ret_ifc_dmhc_hash_units_3_gslot_counter
  assign ret_ifc_dmhc_hash_units_3_gslot_counter_D_IN =
	     ret_ifc_dmhc_hash_units_3_gslot_counter + 9'd1 ;
  assign ret_ifc_dmhc_hash_units_3_gslot_counter_EN =
	     !ret_ifc_dmhc_hash_units_3_init &&
	     ret_ifc_dmhc_hash_units_3_gslot_counter != 9'd511 ;

  // register ret_ifc_dmhc_hash_units_3_init
  assign ret_ifc_dmhc_hash_units_3_init_D_IN = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_3_init_EN =
	     !ret_ifc_dmhc_hash_units_3_init &&
	     ret_ifc_dmhc_hash_units_3_gslot_counter == 9'd511 ;

  // register ret_ifc_dmhc_hash_units_3_is_miss
  assign ret_ifc_dmhc_hash_units_3_is_miss_D_IN = 1'b0 ;
  assign ret_ifc_dmhc_hash_units_3_is_miss_EN = 1'b0 ;

  // register ret_ifc_dmhc_inited
  assign ret_ifc_dmhc_inited_D_IN = 1'd1 ;
  assign ret_ifc_dmhc_inited_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     ret_ifc_dmhc_victim_gslot[1:0] == 2'd0 ||
	     !ret_ifc_dmhc_inited && ret_ifc_dmhc_mslot_counter == 8'd255 &&
	     ret_ifc_dmhc_hash_units_0_init ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6 ;

  // register ret_ifc_dmhc_ldvn_start_reg
  assign ret_ifc_dmhc_ldvn_start_reg_D_IN =
	     MUX_ret_ifc_dmhc_ldvn_start_reg_write_1__SEL_1 ;
  assign ret_ifc_dmhc_ldvn_start_reg_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     ret_ifc_dmhc_victim_gslot[1:0] != 2'd0 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_fsm_start ;

  // register ret_ifc_dmhc_ldvn_start_reg_1
  assign ret_ifc_dmhc_ldvn_start_reg_1_D_IN =
	     ret_ifc_dmhc_ldvn_start_wire_whas ;
  assign ret_ifc_dmhc_ldvn_start_reg_1_EN = 1'd1 ;

  // register ret_ifc_dmhc_ldvn_state_can_overlap
  assign ret_ifc_dmhc_ldvn_state_can_overlap_D_IN =
	     ret_ifc_dmhc_ldvn_state_set_pw_whas ||
	     ret_ifc_dmhc_ldvn_state_can_overlap ;
  assign ret_ifc_dmhc_ldvn_state_can_overlap_EN = 1'd1 ;

  // register ret_ifc_dmhc_ldvn_state_fired
  assign ret_ifc_dmhc_ldvn_state_fired_D_IN =
	     ret_ifc_dmhc_ldvn_state_set_pw_whas ;
  assign ret_ifc_dmhc_ldvn_state_fired_EN = 1'd1 ;

  // register ret_ifc_dmhc_ldvn_state_mkFSMstate
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_idle_l20c1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  ret_ifc_dmhc_ldvn_state_mkFSMstate or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_idle_l20c1:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd0;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd1;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd2;
      ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd3;
      ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd4;
      ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd5;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd6;
      ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6:
	  ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN = 4'd7;
      default: ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign ret_ifc_dmhc_ldvn_state_mkFSMstate_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_idle_l20c1 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6 ;

  // register ret_ifc_dmhc_miss_service
  assign ret_ifc_dmhc_miss_service_D_IN =
	     !MUX_ret_ifc_dmhc_inited_write_1__SEL_1 &&
	     ret_ifc_dmhc_ldvn_state_mkFSMstate != 4'd6 ;
  assign ret_ifc_dmhc_miss_service_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     ret_ifc_dmhc_victim_gslot[1:0] == 2'd0 ||
	     EN_add_entry_put && !ret_ifc_dmhc_miss_service ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6 ;

  // register ret_ifc_dmhc_mslot_counter
  assign ret_ifc_dmhc_mslot_counter_D_IN =
	     MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_1 ?
	       MUX_ret_ifc_dmhc_mslot_counter_write_1__VAL_1 :
	       MUX_ret_ifc_dmhc_mslot_counter_write_1__VAL_2 ;
  assign ret_ifc_dmhc_mslot_counter_EN =
	     !ret_ifc_dmhc_inited &&
	     (ret_ifc_dmhc_hash_units_0_init ||
	      ret_ifc_dmhc_mslot_counter != 8'd255) ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ;

  // register ret_ifc_dmhc_mslot_replacement_start_reg
  assign ret_ifc_dmhc_mslot_replacement_start_reg_D_IN =
	     MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_2 ;
  assign ret_ifc_dmhc_mslot_replacement_start_reg_EN =
	     EN_add_entry_put && !ret_ifc_dmhc_miss_service ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_fsm_start ;

  // register ret_ifc_dmhc_mslot_replacement_start_reg_1
  assign ret_ifc_dmhc_mslot_replacement_start_reg_1_D_IN =
	     ret_ifc_dmhc_mslot_replacement_start_wire_whas ;
  assign ret_ifc_dmhc_mslot_replacement_start_reg_1_EN = 1'd1 ;

  // register ret_ifc_dmhc_mslot_replacement_state_can_overlap
  assign ret_ifc_dmhc_mslot_replacement_state_can_overlap_D_IN =
	     ret_ifc_dmhc_mslot_replacement_state_set_pw_whas ||
	     ret_ifc_dmhc_mslot_replacement_state_can_overlap ;
  assign ret_ifc_dmhc_mslot_replacement_state_can_overlap_EN = 1'd1 ;

  // register ret_ifc_dmhc_mslot_replacement_state_fired
  assign ret_ifc_dmhc_mslot_replacement_state_fired_D_IN =
	     ret_ifc_dmhc_mslot_replacement_state_set_pw_whas ;
  assign ret_ifc_dmhc_mslot_replacement_state_fired_EN = 1'd1 ;

  // register ret_ifc_dmhc_mslot_replacement_state_mkFSMstate
  always@(WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd0;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd2;
      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd3;
      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd4;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd5;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd6;
      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd7;
      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd8;
      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd9;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd10;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd11;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9:
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN = 4'd12;
      default: ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 ;

  // register ret_ifc_dmhc_mslot_to_repair
  assign ret_ifc_dmhc_mslot_to_repair_D_IN = ret_ifc_dmhc_m_table_DOA ;
  assign ret_ifc_dmhc_mslot_to_repair_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9 ;

  // register ret_ifc_dmhc_new_gslots_0
  assign ret_ifc_dmhc_new_gslots_0_D_IN =
	     (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6) ?
	       ret_ifc_dmhc_hash_units_0_g_table_DOA :
	       MUX_ret_ifc_dmhc_new_gslots_0_write_1__VAL_2 ;
  assign ret_ifc_dmhc_new_gslots_0_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ;

  // register ret_ifc_dmhc_new_gslots_1
  assign ret_ifc_dmhc_new_gslots_1_D_IN =
	     (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6) ?
	       ret_ifc_dmhc_hash_units_1_g_table_DOA :
	       MUX_ret_ifc_dmhc_new_gslots_1_write_1__VAL_2 ;
  assign ret_ifc_dmhc_new_gslots_1_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ;

  // register ret_ifc_dmhc_new_gslots_2
  assign ret_ifc_dmhc_new_gslots_2_D_IN =
	     (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6) ?
	       ret_ifc_dmhc_hash_units_2_g_table_DOA :
	       MUX_ret_ifc_dmhc_new_gslots_2_write_1__VAL_2 ;
  assign ret_ifc_dmhc_new_gslots_2_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ;

  // register ret_ifc_dmhc_new_gslots_3
  assign ret_ifc_dmhc_new_gslots_3_D_IN =
	     (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6) ?
	       ret_ifc_dmhc_hash_units_3_g_table_DOA :
	       MUX_ret_ifc_dmhc_new_gslots_3_write_1__VAL_2 ;
  assign ret_ifc_dmhc_new_gslots_3_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ;

  // register ret_ifc_dmhc_new_hvals_0
  assign ret_ifc_dmhc_new_hvals_0_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_3 ;
  assign ret_ifc_dmhc_new_hvals_0_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ;

  // register ret_ifc_dmhc_new_hvals_1
  assign ret_ifc_dmhc_new_hvals_1_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_3 ;
  assign ret_ifc_dmhc_new_hvals_1_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ;

  // register ret_ifc_dmhc_new_hvals_2
  assign ret_ifc_dmhc_new_hvals_2_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_3 ;
  assign ret_ifc_dmhc_new_hvals_2_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ;

  // register ret_ifc_dmhc_new_hvals_3
  assign ret_ifc_dmhc_new_hvals_3_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_3 ;
  assign ret_ifc_dmhc_new_hvals_3_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ;

  // register ret_ifc_dmhc_new_mslot
  assign ret_ifc_dmhc_new_mslot_D_IN = { 1'd1, add_entry_put } ;
  assign ret_ifc_dmhc_new_mslot_EN = MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_2 ;

  // register ret_ifc_dmhc_repair_g_index
  assign ret_ifc_dmhc_repair_g_index_D_IN =
	     ret_ifc_dmhc_repair_gslots_3_04_BITS_1_TO_0_05_ETC___d116 ?
	       2'd3 :
	       (ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_07_ETC___d114 ?
		  2'd2 :
		  (ret_ifc_dmhc_repair_gslots_1_08_BITS_1_TO_0_09_ETC___d112 ?
		     2'd1 :
		     2'd0)) ;
  assign ret_ifc_dmhc_repair_g_index_EN =
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 ;

  // register ret_ifc_dmhc_repair_gslot
  assign ret_ifc_dmhc_repair_gslot_D_IN =
	     ret_ifc_dmhc_repair_gslots_3_04_BITS_1_TO_0_05_ETC___d116 ?
	       ret_ifc_dmhc_repair_gslots_3 :
	       IF_ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_ETC___d118 ;
  assign ret_ifc_dmhc_repair_gslot_EN =
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 ;

  // register ret_ifc_dmhc_repair_gslots_0
  assign ret_ifc_dmhc_repair_gslots_0_D_IN =
	     (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2) ?
	       ret_ifc_dmhc_hash_units_0_g_table_DOA :
	       MUX_ret_ifc_dmhc_repair_gslots_0_write_1__VAL_2 ;
  assign ret_ifc_dmhc_repair_gslots_0_EN =
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ;

  // register ret_ifc_dmhc_repair_gslots_1
  assign ret_ifc_dmhc_repair_gslots_1_D_IN =
	     (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2) ?
	       ret_ifc_dmhc_hash_units_1_g_table_DOA :
	       MUX_ret_ifc_dmhc_repair_gslots_1_write_1__VAL_2 ;
  assign ret_ifc_dmhc_repair_gslots_1_EN =
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ;

  // register ret_ifc_dmhc_repair_gslots_2
  assign ret_ifc_dmhc_repair_gslots_2_D_IN =
	     (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2) ?
	       ret_ifc_dmhc_hash_units_2_g_table_DOA :
	       MUX_ret_ifc_dmhc_repair_gslots_2_write_1__VAL_2 ;
  assign ret_ifc_dmhc_repair_gslots_2_EN =
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ;

  // register ret_ifc_dmhc_repair_gslots_3
  assign ret_ifc_dmhc_repair_gslots_3_D_IN =
	     (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2) ?
	       ret_ifc_dmhc_hash_units_3_g_table_DOA :
	       MUX_ret_ifc_dmhc_repair_gslots_3_write_1__VAL_2 ;
  assign ret_ifc_dmhc_repair_gslots_3_EN =
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ;

  // register ret_ifc_dmhc_repair_hvals_0
  assign ret_ifc_dmhc_repair_hvals_0_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_1 ;
  assign ret_ifc_dmhc_repair_hvals_0_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ;

  // register ret_ifc_dmhc_repair_hvals_1
  assign ret_ifc_dmhc_repair_hvals_1_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_1 ;
  assign ret_ifc_dmhc_repair_hvals_1_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ;

  // register ret_ifc_dmhc_repair_hvals_2
  assign ret_ifc_dmhc_repair_hvals_2_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_1 ;
  assign ret_ifc_dmhc_repair_hvals_2_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ;

  // register ret_ifc_dmhc_repair_hvals_3
  assign ret_ifc_dmhc_repair_hvals_3_D_IN =
	     MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_1 ;
  assign ret_ifc_dmhc_repair_hvals_3_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ;

  // register ret_ifc_dmhc_repair_mslot
  assign ret_ifc_dmhc_repair_mslot_D_IN = 60'h0 ;
  assign ret_ifc_dmhc_repair_mslot_EN = 1'b0 ;

  // register ret_ifc_dmhc_stage
  assign ret_ifc_dmhc_stage_D_IN = 2'd0 ;
  assign ret_ifc_dmhc_stage_EN =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     ret_ifc_dmhc_victim_gslot[1:0] == 2'd0 ||
	     ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6 ;

  // register ret_ifc_dmhc_victim_g_index
  assign ret_ifc_dmhc_victim_g_index_D_IN =
	     ret_ifc_dmhc_new_gslots_3_52_BITS_1_TO_0_53_UL_ETC___d364 ?
	       2'd3 :
	       (ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_UL_ETC___d362 ?
		  2'd2 :
		  (ret_ifc_dmhc_new_gslots_1_56_BITS_1_TO_0_57_UL_ETC___d360 ?
		     2'd1 :
		     2'd0)) ;
  assign ret_ifc_dmhc_victim_g_index_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ;

  // register ret_ifc_dmhc_victim_gslot
  assign ret_ifc_dmhc_victim_gslot_D_IN =
	     ret_ifc_dmhc_new_gslots_3_52_BITS_1_TO_0_53_UL_ETC___d364 ?
	       ret_ifc_dmhc_new_gslots_3 :
	       IF_ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_ETC___d366 ;
  assign ret_ifc_dmhc_victim_gslot_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ;

  // register ret_ifc_dmhc_victim_mslot
  assign ret_ifc_dmhc_victim_mslot_D_IN = 60'h0 ;
  assign ret_ifc_dmhc_victim_mslot_EN = 1'b0 ;

  // register ret_ifc_dmhc_victim_mslot_addr
  assign ret_ifc_dmhc_victim_mslot_addr_D_IN =
	     ret_ifc_dmhc_new_gslots_3_52_BITS_1_TO_0_53_UL_ETC___d364 ?
	       ret_ifc_dmhc_new_gslots_3[9:2] :
	       _theResult_____3_fst_mslot__h58006 ;
  assign ret_ifc_dmhc_victim_mslot_addr_EN =
	     ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ;

  // submodule ret_ifc_delay2_ff
  assign ret_ifc_delay2_ff_D_IN = ret_ifc_delay_ff_D_OUT ;
  assign ret_ifc_delay2_ff_ENQ = WILL_FIRE_RL_ret_ifc_do_delay ;
  assign ret_ifc_delay2_ff_DEQ = WILL_FIRE_RL_ret_ifc_do_resp ;
  assign ret_ifc_delay2_ff_CLR = 1'b0 ;

  // submodule ret_ifc_delay_ff
  assign ret_ifc_delay_ff_D_IN = ret_ifc_readReqFifo_D_OUT ;
  assign ret_ifc_delay_ff_ENQ = WILL_FIRE_RL_ret_ifc_do_read ;
  assign ret_ifc_delay_ff_DEQ = WILL_FIRE_RL_ret_ifc_do_delay ;
  assign ret_ifc_delay_ff_CLR = 1'b0 ;

  // submodule ret_ifc_dmhc_hash_units_0_g_table
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_3 or
	  WILL_FIRE_RL_ret_ifc_do_read or
	  MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_3;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_0_g_table_a_put_2__VAL_4;
      default: ret_ifc_dmhc_hash_units_0_g_table_ADDRA =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_0_init or
	  ret_ifc_dmhc_hash_units_0_gslot_counter or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_hvals_0 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_hvals_0 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_hvals_0)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_0_init:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRB =
	      ret_ifc_dmhc_hash_units_0_gslot_counter;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRB =
	      ret_ifc_dmhc_repair_hvals_0;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRB =
	      ret_ifc_dmhc_evictee_hvals_0;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_0_g_table_ADDRB = ret_ifc_dmhc_new_hvals_0;
      default: ret_ifc_dmhc_hash_units_0_g_table_ADDRB =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  WILL_FIRE_RL_ret_ifc_do_read)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_0_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_0_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_0_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_0_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: ret_ifc_dmhc_hash_units_0_g_table_DIA =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_0_init or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_gslots_0 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_gslots_0 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_gslots_0)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_0_init:
	  ret_ifc_dmhc_hash_units_0_g_table_DIB = 68'd0;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_0_g_table_DIB =
	      ret_ifc_dmhc_repair_gslots_0;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_0_g_table_DIB =
	      ret_ifc_dmhc_evictee_gslots_0;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_0_g_table_DIB = ret_ifc_dmhc_new_gslots_0;
      default: ret_ifc_dmhc_hash_units_0_g_table_DIB =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ret_ifc_dmhc_hash_units_0_g_table_WEA = 1'd0 ;
  assign ret_ifc_dmhc_hash_units_0_g_table_WEB = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_0_g_table_ENA =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	     WILL_FIRE_RL_ret_ifc_do_read ;
  assign ret_ifc_dmhc_hash_units_0_g_table_ENB =
	     !ret_ifc_dmhc_hash_units_0_init ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ;

  // submodule ret_ifc_dmhc_hash_units_1_g_table
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_3 or
	  WILL_FIRE_RL_ret_ifc_do_read or
	  MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_3;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_1_g_table_a_put_2__VAL_4;
      default: ret_ifc_dmhc_hash_units_1_g_table_ADDRA =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_1_init or
	  ret_ifc_dmhc_hash_units_1_gslot_counter or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_hvals_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_hvals_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_hvals_1)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_1_init:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRB =
	      ret_ifc_dmhc_hash_units_1_gslot_counter;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRB =
	      ret_ifc_dmhc_repair_hvals_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRB =
	      ret_ifc_dmhc_evictee_hvals_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_1_g_table_ADDRB = ret_ifc_dmhc_new_hvals_1;
      default: ret_ifc_dmhc_hash_units_1_g_table_ADDRB =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  WILL_FIRE_RL_ret_ifc_do_read)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_1_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_1_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_1_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_1_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: ret_ifc_dmhc_hash_units_1_g_table_DIA =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_1_init or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_gslots_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_gslots_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_gslots_1)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_1_init:
	  ret_ifc_dmhc_hash_units_1_g_table_DIB = 68'd0;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_1_g_table_DIB =
	      ret_ifc_dmhc_repair_gslots_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_1_g_table_DIB =
	      ret_ifc_dmhc_evictee_gslots_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_1_g_table_DIB = ret_ifc_dmhc_new_gslots_1;
      default: ret_ifc_dmhc_hash_units_1_g_table_DIB =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ret_ifc_dmhc_hash_units_1_g_table_WEA = 1'd0 ;
  assign ret_ifc_dmhc_hash_units_1_g_table_WEB = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_1_g_table_ENA =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	     WILL_FIRE_RL_ret_ifc_do_read ;
  assign ret_ifc_dmhc_hash_units_1_g_table_ENB =
	     !ret_ifc_dmhc_hash_units_1_init ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ;

  // submodule ret_ifc_dmhc_hash_units_2_g_table
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_3 or
	  WILL_FIRE_RL_ret_ifc_do_read or
	  MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_3;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_2_g_table_a_put_2__VAL_4;
      default: ret_ifc_dmhc_hash_units_2_g_table_ADDRA =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_2_init or
	  ret_ifc_dmhc_hash_units_2_gslot_counter or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_hvals_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_hvals_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_hvals_2)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_2_init:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRB =
	      ret_ifc_dmhc_hash_units_2_gslot_counter;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRB =
	      ret_ifc_dmhc_repair_hvals_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRB =
	      ret_ifc_dmhc_evictee_hvals_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_2_g_table_ADDRB = ret_ifc_dmhc_new_hvals_2;
      default: ret_ifc_dmhc_hash_units_2_g_table_ADDRB =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  WILL_FIRE_RL_ret_ifc_do_read)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_2_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_2_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_2_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_2_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: ret_ifc_dmhc_hash_units_2_g_table_DIA =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_2_init or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_gslots_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_gslots_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_gslots_2)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_2_init:
	  ret_ifc_dmhc_hash_units_2_g_table_DIB = 68'd0;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_2_g_table_DIB =
	      ret_ifc_dmhc_repair_gslots_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_2_g_table_DIB =
	      ret_ifc_dmhc_evictee_gslots_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_2_g_table_DIB = ret_ifc_dmhc_new_gslots_2;
      default: ret_ifc_dmhc_hash_units_2_g_table_DIB =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ret_ifc_dmhc_hash_units_2_g_table_WEA = 1'd0 ;
  assign ret_ifc_dmhc_hash_units_2_g_table_WEB = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_2_g_table_ENA =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	     WILL_FIRE_RL_ret_ifc_do_read ;
  assign ret_ifc_dmhc_hash_units_2_g_table_ENB =
	     !ret_ifc_dmhc_hash_units_2_init ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ;

  // submodule ret_ifc_dmhc_hash_units_3_g_table
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_1 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_3 or
	  WILL_FIRE_RL_ret_ifc_do_read or
	  MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_1;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_2;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_3;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRA =
	      MUX_ret_ifc_dmhc_hash_units_3_g_table_a_put_2__VAL_4;
      default: ret_ifc_dmhc_hash_units_3_g_table_ADDRA =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_3_init or
	  ret_ifc_dmhc_hash_units_3_gslot_counter or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_hvals_3 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_hvals_3 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_hvals_3)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_3_init:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRB =
	      ret_ifc_dmhc_hash_units_3_gslot_counter;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRB =
	      ret_ifc_dmhc_repair_hvals_3;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRB =
	      ret_ifc_dmhc_evictee_hvals_3;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_3_g_table_ADDRB = ret_ifc_dmhc_new_hvals_3;
      default: ret_ifc_dmhc_hash_units_3_g_table_ADDRB =
		   9'b010101010 /* unspecified value */ ;
    endcase
  end
  always@(WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 or
	  WILL_FIRE_RL_ret_ifc_do_read)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9:
	  ret_ifc_dmhc_hash_units_3_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9:
	  ret_ifc_dmhc_hash_units_3_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9:
	  ret_ifc_dmhc_hash_units_3_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_do_read:
	  ret_ifc_dmhc_hash_units_3_g_table_DIA =
	      68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: ret_ifc_dmhc_hash_units_3_g_table_DIA =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(ret_ifc_dmhc_hash_units_3_init or
	  WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 or
	  ret_ifc_dmhc_repair_gslots_3 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 or
	  ret_ifc_dmhc_evictee_gslots_3 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 or
	  ret_ifc_dmhc_new_gslots_3)
  begin
    case (1'b1) // synopsys parallel_case
      !ret_ifc_dmhc_hash_units_3_init:
	  ret_ifc_dmhc_hash_units_3_g_table_DIB = 68'd0;
      WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9:
	  ret_ifc_dmhc_hash_units_3_g_table_DIB =
	      ret_ifc_dmhc_repair_gslots_3;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9:
	  ret_ifc_dmhc_hash_units_3_g_table_DIB =
	      ret_ifc_dmhc_evictee_gslots_3;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9:
	  ret_ifc_dmhc_hash_units_3_g_table_DIB = ret_ifc_dmhc_new_gslots_3;
      default: ret_ifc_dmhc_hash_units_3_g_table_DIB =
		   68'hAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ret_ifc_dmhc_hash_units_3_g_table_WEA = 1'd0 ;
  assign ret_ifc_dmhc_hash_units_3_g_table_WEB = 1'd1 ;
  assign ret_ifc_dmhc_hash_units_3_g_table_ENA =
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	     WILL_FIRE_RL_ret_ifc_do_read ;
  assign ret_ifc_dmhc_hash_units_3_g_table_ENB =
	     !ret_ifc_dmhc_hash_units_3_init ||
	     WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ;

  // submodule ret_ifc_dmhc_m_table
  assign ret_ifc_dmhc_m_table_ADDRA =
	     MUX_ret_ifc_dmhc_ldvn_start_reg_write_1__SEL_1 ?
	       ret_ifc_dmhc_victim_mslot_addr :
	       MUX_ret_ifc_dmhc_m_table_a_put_2__VAL_2 ;
  assign ret_ifc_dmhc_m_table_ADDRB = ret_ifc_dmhc_mslot_counter ;
  assign ret_ifc_dmhc_m_table_DIA =
	     MUX_ret_ifc_dmhc_ldvn_start_reg_write_1__SEL_1 ?
	       60'hAAAAAAAAAAAAAAA /* unspecified value */  :
	       60'hAAAAAAAAAAAAAAA /* unspecified value */  ;
  always@(MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_1 or
	  MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_2 or
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 or
	  ret_ifc_dmhc_new_mslot)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_1:
	  ret_ifc_dmhc_m_table_DIB = 60'd0;
      MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_2:
	  ret_ifc_dmhc_m_table_DIB =
	      60'hAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9:
	  ret_ifc_dmhc_m_table_DIB = ret_ifc_dmhc_new_mslot;
      default: ret_ifc_dmhc_m_table_DIB =
		   60'hAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ret_ifc_dmhc_m_table_WEA = 1'd0 ;
  assign ret_ifc_dmhc_m_table_WEB = !MUX_ret_ifc_dmhc_m_table_b_put_1__SEL_2 ;
  assign ret_ifc_dmhc_m_table_ENA =
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	     ret_ifc_dmhc_victim_gslot[1:0] != 2'd0 ||
	     WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables ;
  assign ret_ifc_dmhc_m_table_ENB =
	     !ret_ifc_dmhc_inited &&
	     (ret_ifc_dmhc_hash_units_0_init ||
	      ret_ifc_dmhc_mslot_counter != 8'd255) ||
	     EN_add_entry_put && !ret_ifc_dmhc_miss_service ||
	     WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ;

  // submodule ret_ifc_dmhc_stage1_ff
  assign ret_ifc_dmhc_stage1_ff_D_IN = ret_ifc_readReqFifo_D_OUT ;
  assign ret_ifc_dmhc_stage1_ff_ENQ = WILL_FIRE_RL_ret_ifc_do_read ;
  assign ret_ifc_dmhc_stage1_ff_DEQ =
	     WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables ;
  assign ret_ifc_dmhc_stage1_ff_CLR = 1'b0 ;

  // submodule ret_ifc_dmhc_stage2_ff
  assign ret_ifc_dmhc_stage2_ff_D_IN = ret_ifc_dmhc_stage1_ff_D_OUT ;
  assign ret_ifc_dmhc_stage2_ff_ENQ =
	     WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables ;
  assign ret_ifc_dmhc_stage2_ff_DEQ =
	     WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ;
  assign ret_ifc_dmhc_stage2_ff_CLR = 1'b0 ;

  // submodule ret_ifc_readDataFifo
  assign ret_ifc_readDataFifo_D_IN =
	     { WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	       ret_ifc_dmhc_is_hit_wire_wget,
	       IF_ret_ifc_dmhc_rec_value_whas__45_THEN_ret_if_ETC___d547 } ;
  assign ret_ifc_readDataFifo_ENQ = WILL_FIRE_RL_ret_ifc_do_resp ;
  assign ret_ifc_readDataFifo_DEQ = EN_lookupPort_response_get ;
  assign ret_ifc_readDataFifo_CLR = 1'b0 ;

  // submodule ret_ifc_readReqFifo
  assign ret_ifc_readReqFifo_D_IN = lookupPort_request_put ;
  assign ret_ifc_readReqFifo_ENQ = EN_lookupPort_request_put ;
  assign ret_ifc_readReqFifo_DEQ = WILL_FIRE_RL_ret_ifc_do_read ;
  assign ret_ifc_readReqFifo_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_ret_ifc_dmhc_evictee_mslot_34_BIT_51_36_THE_ETC___d248 =
	     ret_ifc_dmhc_evictee_mslot[51] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_evictee_mslot_34_BIT_58_45_THE_ETC___d259 =
	     ret_ifc_dmhc_evictee_mslot[58] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_evictee_mslot_BIT_54_THEN_1_EL_ETC__q2 =
	     ret_ifc_dmhc_evictee_mslot[54] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_51_6_THE_ETC___d78 =
	     ret_ifc_dmhc_mslot_to_repair[51] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_mslot_to_repair_4_BIT_58_5_THE_ETC___d89 =
	     ret_ifc_dmhc_mslot_to_repair[58] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_mslot_to_repair_BIT_54_THEN_1__ETC__q1 =
	     ret_ifc_dmhc_mslot_to_repair[54] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_ETC___d366 =
	     ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_UL_ETC___d362 ?
	       ret_ifc_dmhc_new_gslots_2 :
	       (ret_ifc_dmhc_new_gslots_1_56_BITS_1_TO_0_57_UL_ETC___d360 ?
		  ret_ifc_dmhc_new_gslots_1 :
		  ret_ifc_dmhc_new_gslots_0) ;
  assign IF_ret_ifc_dmhc_new_mslot_16_BIT_51_18_THEN_1__ETC___d330 =
	     ret_ifc_dmhc_new_mslot[51] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_new_mslot_16_BIT_58_27_THEN_1__ETC___d341 =
	     ret_ifc_dmhc_new_mslot[58] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_new_mslot_BIT_54_THEN_1_ELSE_0__q3 =
	     ret_ifc_dmhc_new_mslot[54] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_dmhc_rec_value_whas__45_THEN_ret_if_ETC___d547 =
	     ret_ifc_dmhc_rec_value_whas ? x_wget__h2155 : 50'd0 ;
  assign IF_ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_ETC___d118 =
	     ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_07_ETC___d114 ?
	       ret_ifc_dmhc_repair_gslots_2 :
	       (ret_ifc_dmhc_repair_gslots_1_08_BITS_1_TO_0_09_ETC___d112 ?
		  ret_ifc_dmhc_repair_gslots_1 :
		  ret_ifc_dmhc_repair_gslots_0) ;
  assign IF_ret_ifc_readReqFifoD_OUT_BIT_4_THEN_1_ELSE_0__q4 =
	     ret_ifc_readReqFifo_D_OUT[4] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_readReqFifo_first__00_BIT_1_02_THEN_ETC___d514 =
	     ret_ifc_readReqFifo_D_OUT[1] ? 9'd1 : 9'd0 ;
  assign IF_ret_ifc_readReqFifo_first__00_BIT_8_11_THEN_ETC___d525 =
	     ret_ifc_readReqFifo_D_OUT[8] ? 9'd1 : 9'd0 ;
  assign _theResult_____2_fst_maddr__h24218 =
	     _theResult_____2_fst_maddr__h24250 ^
	     ret_ifc_dmhc_repair_gslots_3[17:10] ;
  assign _theResult_____2_fst_maddr__h24222 =
	     _theResult_____2_fst_maddr__h24246 ^
	     ret_ifc_dmhc_repair_gslots_2[17:10] ;
  assign _theResult_____2_fst_maddr__h24226 =
	     _theResult_____2_fst_maddr__h24242 ^
	     ret_ifc_dmhc_repair_gslots_1[17:10] ;
  assign _theResult_____2_fst_maddr__h24242 =
	     (ret_ifc_dmhc_repair_g_index == 2'd0) ?
	       8'd0 :
	       ret_ifc_dmhc_repair_gslots_0[17:10] ;
  assign _theResult_____2_fst_maddr__h24246 =
	     (ret_ifc_dmhc_repair_g_index == 2'd1) ?
	       _theResult_____2_fst_maddr__h24242 :
	       _theResult_____2_fst_maddr__h24226 ;
  assign _theResult_____2_fst_maddr__h24250 =
	     (ret_ifc_dmhc_repair_g_index == 2'd2) ?
	       _theResult_____2_fst_maddr__h24246 :
	       _theResult_____2_fst_maddr__h24222 ;
  assign _theResult_____2_fst_maddr__h58871 =
	     _theResult_____2_fst_maddr__h58903 ^
	     ret_ifc_dmhc_new_gslots_3[17:10] ;
  assign _theResult_____2_fst_maddr__h58875 =
	     _theResult_____2_fst_maddr__h58899 ^
	     ret_ifc_dmhc_new_gslots_2[17:10] ;
  assign _theResult_____2_fst_maddr__h58879 =
	     _theResult_____2_fst_maddr__h58895 ^
	     ret_ifc_dmhc_new_gslots_1[17:10] ;
  assign _theResult_____2_fst_maddr__h58895 =
	     (ret_ifc_dmhc_victim_g_index == 2'd0) ?
	       8'd0 :
	       ret_ifc_dmhc_new_gslots_0[17:10] ;
  assign _theResult_____2_fst_maddr__h58899 =
	     (ret_ifc_dmhc_victim_g_index == 2'd1) ?
	       _theResult_____2_fst_maddr__h58895 :
	       _theResult_____2_fst_maddr__h58879 ;
  assign _theResult_____2_fst_maddr__h58903 =
	     (ret_ifc_dmhc_victim_g_index == 2'd2) ?
	       _theResult_____2_fst_maddr__h58899 :
	       _theResult_____2_fst_maddr__h58875 ;
  assign _theResult_____2_fst_value__h24217 =
	     _theResult_____2_fst_value__h24249 ^
	     ret_ifc_dmhc_repair_gslots_3[67:18] ;
  assign _theResult_____2_fst_value__h24221 =
	     _theResult_____2_fst_value__h24245 ^
	     ret_ifc_dmhc_repair_gslots_2[67:18] ;
  assign _theResult_____2_fst_value__h24225 =
	     _theResult_____2_fst_value__h24241 ^
	     ret_ifc_dmhc_repair_gslots_1[67:18] ;
  assign _theResult_____2_fst_value__h24241 =
	     (ret_ifc_dmhc_repair_g_index == 2'd0) ?
	       50'd0 :
	       ret_ifc_dmhc_repair_gslots_0[67:18] ;
  assign _theResult_____2_fst_value__h24245 =
	     (ret_ifc_dmhc_repair_g_index == 2'd1) ?
	       _theResult_____2_fst_value__h24241 :
	       _theResult_____2_fst_value__h24225 ;
  assign _theResult_____2_fst_value__h24249 =
	     (ret_ifc_dmhc_repair_g_index == 2'd2) ?
	       _theResult_____2_fst_value__h24245 :
	       _theResult_____2_fst_value__h24221 ;
  assign _theResult_____2_fst_value__h24253 =
	     (ret_ifc_dmhc_repair_g_index == 2'd3) ?
	       _theResult_____2_fst_value__h24249 :
	       _theResult_____2_fst_value__h24217 ;
  assign _theResult_____2_fst_value__h58870 =
	     _theResult_____2_fst_value__h58902 ^
	     ret_ifc_dmhc_new_gslots_3[67:18] ;
  assign _theResult_____2_fst_value__h58874 =
	     _theResult_____2_fst_value__h58898 ^
	     ret_ifc_dmhc_new_gslots_2[67:18] ;
  assign _theResult_____2_fst_value__h58878 =
	     _theResult_____2_fst_value__h58894 ^
	     ret_ifc_dmhc_new_gslots_1[67:18] ;
  assign _theResult_____2_fst_value__h58894 =
	     (ret_ifc_dmhc_victim_g_index == 2'd0) ?
	       50'd0 :
	       ret_ifc_dmhc_new_gslots_0[67:18] ;
  assign _theResult_____2_fst_value__h58898 =
	     (ret_ifc_dmhc_victim_g_index == 2'd1) ?
	       _theResult_____2_fst_value__h58894 :
	       _theResult_____2_fst_value__h58878 ;
  assign _theResult_____2_fst_value__h58902 =
	     (ret_ifc_dmhc_victim_g_index == 2'd2) ?
	       _theResult_____2_fst_value__h58898 :
	       _theResult_____2_fst_value__h58874 ;
  assign _theResult_____2_fst_value__h58906 =
	     (ret_ifc_dmhc_victim_g_index == 2'd3) ?
	       _theResult_____2_fst_value__h58902 :
	       _theResult_____2_fst_value__h58870 ;
  assign _theResult_____3_fst_degree__h23454 =
	     ret_ifc_dmhc_repair_gslots_1_08_BITS_1_TO_0_09_ETC___d112 ?
	       ret_ifc_dmhc_repair_gslots_1[1:0] :
	       ret_ifc_dmhc_repair_gslots_0[1:0] ;
  assign _theResult_____3_fst_degree__h23475 =
	     ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_07_ETC___d114 ?
	       ret_ifc_dmhc_repair_gslots_2[1:0] :
	       _theResult_____3_fst_degree__h23454 ;
  assign _theResult_____3_fst_degree__h57986 =
	     ret_ifc_dmhc_new_gslots_1_56_BITS_1_TO_0_57_UL_ETC___d360 ?
	       ret_ifc_dmhc_new_gslots_1[1:0] :
	       ret_ifc_dmhc_new_gslots_0[1:0] ;
  assign _theResult_____3_fst_degree__h58007 =
	     ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_UL_ETC___d362 ?
	       ret_ifc_dmhc_new_gslots_2[1:0] :
	       _theResult_____3_fst_degree__h57986 ;
  assign _theResult_____3_fst_mslot__h57985 =
	     ret_ifc_dmhc_new_gslots_1_56_BITS_1_TO_0_57_UL_ETC___d360 ?
	       ret_ifc_dmhc_new_gslots_1[9:2] :
	       ret_ifc_dmhc_new_gslots_0[9:2] ;
  assign _theResult_____3_fst_mslot__h58006 =
	     ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_UL_ETC___d362 ?
	       ret_ifc_dmhc_new_gslots_2[9:2] :
	       _theResult_____3_fst_mslot__h57985 ;
  assign mslot__h24202 =
	     (ret_ifc_dmhc_repair_g_index == 2'd0) ?
	       ret_ifc_dmhc_repair_gslots_0[9:2] :
	       ret_ifc_dmhc_victim_mslot_addr ;
  assign mslot__h24474 =
	     (ret_ifc_dmhc_repair_g_index == 2'd1) ?
	       ret_ifc_dmhc_repair_gslots_1[9:2] :
	       ret_ifc_dmhc_victim_mslot_addr ;
  assign mslot__h24599 =
	     (ret_ifc_dmhc_repair_g_index == 2'd2) ?
	       ret_ifc_dmhc_repair_gslots_2[9:2] :
	       ret_ifc_dmhc_victim_mslot_addr ;
  assign mslot__h24724 =
	     (ret_ifc_dmhc_repair_g_index == 2'd3) ?
	       ret_ifc_dmhc_repair_gslots_3[9:2] :
	       ret_ifc_dmhc_victim_mslot_addr ;
  assign n_degree__h58839 = ret_ifc_dmhc_new_gslots_0[1:0] + 2'd1 ;
  assign n_degree__h59136 = ret_ifc_dmhc_new_gslots_1[1:0] + 2'd1 ;
  assign n_degree__h59284 = ret_ifc_dmhc_new_gslots_2[1:0] + 2'd1 ;
  assign n_degree__h59432 = ret_ifc_dmhc_new_gslots_3[1:0] + 2'd1 ;
  assign n_maddr__h24181 =
	     tmp_gslot_maddr__h24214 ^ ret_ifc_dmhc_victim_mslot_addr ;
  assign n_maddr__h58830 =
	     tmp_gslot_maddr__h58867 ^ ret_ifc_dmhc_mslot_counter ;
  assign n_value__h24180 =
	     _theResult_____2_fst_value__h24253 ^
	     ret_ifc_dmhc_mslot_to_repair[49:0] ;
  assign n_value__h58829 =
	     _theResult_____2_fst_value__h58906 ^
	     ret_ifc_dmhc_new_mslot[49:0] ;
  assign re_maddr__h61811 = MUX_ret_ifc_dmhc_m_table_a_put_2__VAL_2 ;
  assign re_value__h61812 = MUX_ret_ifc_dmhc_rec_value_wset_1__VAL_2 ;
  assign ret_ifc_dmhc_hash_units_0_init_AND_ret_ifc_dmh_ETC___d179 =
	     ret_ifc_dmhc_hash_units_0_init &&
	     ret_ifc_dmhc_hash_units_1_init &&
	     ret_ifc_dmhc_hash_units_2_init &&
	     ret_ifc_dmhc_hash_units_3_init ;
  assign ret_ifc_dmhc_ldvn_abort_whas__8_AND_ret_ifc_dm_ETC___d193 =
	     (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd0 ||
	      ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd7) &&
	     (!ret_ifc_dmhc_ldvn_start_reg_1 ||
	      ret_ifc_dmhc_ldvn_state_fired) ;
  assign ret_ifc_dmhc_mslot_replacement_abort_whas__99__ETC___d455 =
	     (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd0 ||
	      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd12) &&
	     (!ret_ifc_dmhc_mslot_replacement_start_reg_1 ||
	      ret_ifc_dmhc_mslot_replacement_state_fired) ;
  assign ret_ifc_dmhc_new_gslots_1_56_BITS_1_TO_0_57_UL_ETC___d360 =
	     ret_ifc_dmhc_new_gslots_1[1:0] < ret_ifc_dmhc_new_gslots_0[1:0] ;
  assign ret_ifc_dmhc_new_gslots_2_54_BITS_1_TO_0_55_UL_ETC___d362 =
	     ret_ifc_dmhc_new_gslots_2[1:0] <
	     _theResult_____3_fst_degree__h57986 ;
  assign ret_ifc_dmhc_new_gslots_3_52_BITS_1_TO_0_53_UL_ETC___d364 =
	     ret_ifc_dmhc_new_gslots_3[1:0] <
	     _theResult_____3_fst_degree__h58007 ;
  assign ret_ifc_dmhc_repair_gslots_1_08_BITS_1_TO_0_09_ETC___d112 =
	     ret_ifc_dmhc_repair_gslots_1[1:0] <
	     ret_ifc_dmhc_repair_gslots_0[1:0] ;
  assign ret_ifc_dmhc_repair_gslots_2_06_BITS_1_TO_0_07_ETC___d114 =
	     ret_ifc_dmhc_repair_gslots_2[1:0] <
	     _theResult_____3_fst_degree__h23454 ;
  assign ret_ifc_dmhc_repair_gslots_3_04_BITS_1_TO_0_05_ETC___d116 =
	     ret_ifc_dmhc_repair_gslots_3[1:0] <
	     _theResult_____3_fst_degree__h23475 ;
  assign tmp_gslot_maddr__h24214 =
	     (ret_ifc_dmhc_repair_g_index == 2'd3) ?
	       _theResult_____2_fst_maddr__h24250 :
	       _theResult_____2_fst_maddr__h24218 ;
  assign tmp_gslot_maddr__h58867 =
	     (ret_ifc_dmhc_victim_g_index == 2'd3) ?
	       _theResult_____2_fst_maddr__h58903 :
	       _theResult_____2_fst_maddr__h58871 ;
  assign x__h60465 = MUX_ret_ifc_dmhc_mslot_counter_write_1__VAL_2 ;
  assign x_degree__h51319 = ret_ifc_dmhc_evictee_gslots_0[1:0] - 2'd1 ;
  assign x_degree__h51618 = ret_ifc_dmhc_evictee_gslots_1[1:0] - 2'd1 ;
  assign x_degree__h51917 = ret_ifc_dmhc_evictee_gslots_2[1:0] - 2'd1 ;
  assign x_degree__h52216 = ret_ifc_dmhc_evictee_gslots_3[1:0] - 2'd1 ;
  assign x_wget__h2155 =
	     WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ?
	       ret_ifc_dmhc_m_table_DOA[49:0] :
	       MUX_ret_ifc_dmhc_rec_value_wset_1__VAL_2 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        ret_ifc_dmhc_hash_units_0_gslot_counter <= `BSV_ASSIGNMENT_DELAY 9'd0;
	ret_ifc_dmhc_hash_units_0_init <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_hash_units_0_is_miss <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_hash_units_1_gslot_counter <= `BSV_ASSIGNMENT_DELAY 9'd0;
	ret_ifc_dmhc_hash_units_1_init <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_hash_units_1_is_miss <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_hash_units_2_gslot_counter <= `BSV_ASSIGNMENT_DELAY 9'd0;
	ret_ifc_dmhc_hash_units_2_init <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_hash_units_2_is_miss <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_hash_units_3_gslot_counter <= `BSV_ASSIGNMENT_DELAY 9'd0;
	ret_ifc_dmhc_hash_units_3_init <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_hash_units_3_is_miss <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_inited <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_ldvn_start_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_ldvn_start_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_ldvn_state_can_overlap <= `BSV_ASSIGNMENT_DELAY 1'd1;
	ret_ifc_dmhc_ldvn_state_fired <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_ldvn_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY 4'd0;
	ret_ifc_dmhc_miss_service <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ret_ifc_dmhc_mslot_counter <= `BSV_ASSIGNMENT_DELAY 8'd0;
	ret_ifc_dmhc_mslot_replacement_start_reg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	ret_ifc_dmhc_mslot_replacement_start_reg_1 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	ret_ifc_dmhc_mslot_replacement_state_can_overlap <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	ret_ifc_dmhc_mslot_replacement_state_fired <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	ret_ifc_dmhc_mslot_replacement_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	ret_ifc_dmhc_stage <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (ret_ifc_dmhc_hash_units_0_gslot_counter_EN)
	  ret_ifc_dmhc_hash_units_0_gslot_counter <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_0_gslot_counter_D_IN;
	if (ret_ifc_dmhc_hash_units_0_init_EN)
	  ret_ifc_dmhc_hash_units_0_init <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_0_init_D_IN;
	if (ret_ifc_dmhc_hash_units_0_is_miss_EN)
	  ret_ifc_dmhc_hash_units_0_is_miss <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_0_is_miss_D_IN;
	if (ret_ifc_dmhc_hash_units_1_gslot_counter_EN)
	  ret_ifc_dmhc_hash_units_1_gslot_counter <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_1_gslot_counter_D_IN;
	if (ret_ifc_dmhc_hash_units_1_init_EN)
	  ret_ifc_dmhc_hash_units_1_init <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_1_init_D_IN;
	if (ret_ifc_dmhc_hash_units_1_is_miss_EN)
	  ret_ifc_dmhc_hash_units_1_is_miss <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_1_is_miss_D_IN;
	if (ret_ifc_dmhc_hash_units_2_gslot_counter_EN)
	  ret_ifc_dmhc_hash_units_2_gslot_counter <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_2_gslot_counter_D_IN;
	if (ret_ifc_dmhc_hash_units_2_init_EN)
	  ret_ifc_dmhc_hash_units_2_init <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_2_init_D_IN;
	if (ret_ifc_dmhc_hash_units_2_is_miss_EN)
	  ret_ifc_dmhc_hash_units_2_is_miss <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_2_is_miss_D_IN;
	if (ret_ifc_dmhc_hash_units_3_gslot_counter_EN)
	  ret_ifc_dmhc_hash_units_3_gslot_counter <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_3_gslot_counter_D_IN;
	if (ret_ifc_dmhc_hash_units_3_init_EN)
	  ret_ifc_dmhc_hash_units_3_init <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_3_init_D_IN;
	if (ret_ifc_dmhc_hash_units_3_is_miss_EN)
	  ret_ifc_dmhc_hash_units_3_is_miss <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_hash_units_3_is_miss_D_IN;
	if (ret_ifc_dmhc_inited_EN)
	  ret_ifc_dmhc_inited <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_inited_D_IN;
	if (ret_ifc_dmhc_ldvn_start_reg_EN)
	  ret_ifc_dmhc_ldvn_start_reg <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_ldvn_start_reg_D_IN;
	if (ret_ifc_dmhc_ldvn_start_reg_1_EN)
	  ret_ifc_dmhc_ldvn_start_reg_1 <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_ldvn_start_reg_1_D_IN;
	if (ret_ifc_dmhc_ldvn_state_can_overlap_EN)
	  ret_ifc_dmhc_ldvn_state_can_overlap <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_ldvn_state_can_overlap_D_IN;
	if (ret_ifc_dmhc_ldvn_state_fired_EN)
	  ret_ifc_dmhc_ldvn_state_fired <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_ldvn_state_fired_D_IN;
	if (ret_ifc_dmhc_ldvn_state_mkFSMstate_EN)
	  ret_ifc_dmhc_ldvn_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_ldvn_state_mkFSMstate_D_IN;
	if (ret_ifc_dmhc_miss_service_EN)
	  ret_ifc_dmhc_miss_service <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_miss_service_D_IN;
	if (ret_ifc_dmhc_mslot_counter_EN)
	  ret_ifc_dmhc_mslot_counter <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_mslot_counter_D_IN;
	if (ret_ifc_dmhc_mslot_replacement_start_reg_EN)
	  ret_ifc_dmhc_mslot_replacement_start_reg <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_mslot_replacement_start_reg_D_IN;
	if (ret_ifc_dmhc_mslot_replacement_start_reg_1_EN)
	  ret_ifc_dmhc_mslot_replacement_start_reg_1 <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_mslot_replacement_start_reg_1_D_IN;
	if (ret_ifc_dmhc_mslot_replacement_state_can_overlap_EN)
	  ret_ifc_dmhc_mslot_replacement_state_can_overlap <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_mslot_replacement_state_can_overlap_D_IN;
	if (ret_ifc_dmhc_mslot_replacement_state_fired_EN)
	  ret_ifc_dmhc_mslot_replacement_state_fired <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_mslot_replacement_state_fired_D_IN;
	if (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_EN)
	  ret_ifc_dmhc_mslot_replacement_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY
	      ret_ifc_dmhc_mslot_replacement_state_mkFSMstate_D_IN;
	if (ret_ifc_dmhc_stage_EN)
	  ret_ifc_dmhc_stage <= `BSV_ASSIGNMENT_DELAY ret_ifc_dmhc_stage_D_IN;
      end
    if (ret_ifc_dmhc_evictee_gslots_0_EN)
      ret_ifc_dmhc_evictee_gslots_0 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_gslots_0_D_IN;
    if (ret_ifc_dmhc_evictee_gslots_1_EN)
      ret_ifc_dmhc_evictee_gslots_1 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_gslots_1_D_IN;
    if (ret_ifc_dmhc_evictee_gslots_2_EN)
      ret_ifc_dmhc_evictee_gslots_2 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_gslots_2_D_IN;
    if (ret_ifc_dmhc_evictee_gslots_3_EN)
      ret_ifc_dmhc_evictee_gslots_3 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_gslots_3_D_IN;
    if (ret_ifc_dmhc_evictee_hvals_0_EN)
      ret_ifc_dmhc_evictee_hvals_0 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_hvals_0_D_IN;
    if (ret_ifc_dmhc_evictee_hvals_1_EN)
      ret_ifc_dmhc_evictee_hvals_1 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_hvals_1_D_IN;
    if (ret_ifc_dmhc_evictee_hvals_2_EN)
      ret_ifc_dmhc_evictee_hvals_2 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_hvals_2_D_IN;
    if (ret_ifc_dmhc_evictee_hvals_3_EN)
      ret_ifc_dmhc_evictee_hvals_3 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_hvals_3_D_IN;
    if (ret_ifc_dmhc_evictee_mslot_EN)
      ret_ifc_dmhc_evictee_mslot <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_evictee_mslot_D_IN;
    if (ret_ifc_dmhc_mslot_to_repair_EN)
      ret_ifc_dmhc_mslot_to_repair <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_mslot_to_repair_D_IN;
    if (ret_ifc_dmhc_new_gslots_0_EN)
      ret_ifc_dmhc_new_gslots_0 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_gslots_0_D_IN;
    if (ret_ifc_dmhc_new_gslots_1_EN)
      ret_ifc_dmhc_new_gslots_1 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_gslots_1_D_IN;
    if (ret_ifc_dmhc_new_gslots_2_EN)
      ret_ifc_dmhc_new_gslots_2 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_gslots_2_D_IN;
    if (ret_ifc_dmhc_new_gslots_3_EN)
      ret_ifc_dmhc_new_gslots_3 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_gslots_3_D_IN;
    if (ret_ifc_dmhc_new_hvals_0_EN)
      ret_ifc_dmhc_new_hvals_0 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_hvals_0_D_IN;
    if (ret_ifc_dmhc_new_hvals_1_EN)
      ret_ifc_dmhc_new_hvals_1 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_hvals_1_D_IN;
    if (ret_ifc_dmhc_new_hvals_2_EN)
      ret_ifc_dmhc_new_hvals_2 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_hvals_2_D_IN;
    if (ret_ifc_dmhc_new_hvals_3_EN)
      ret_ifc_dmhc_new_hvals_3 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_hvals_3_D_IN;
    if (ret_ifc_dmhc_new_mslot_EN)
      ret_ifc_dmhc_new_mslot <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_new_mslot_D_IN;
    if (ret_ifc_dmhc_repair_g_index_EN)
      ret_ifc_dmhc_repair_g_index <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_g_index_D_IN;
    if (ret_ifc_dmhc_repair_gslot_EN)
      ret_ifc_dmhc_repair_gslot <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_gslot_D_IN;
    if (ret_ifc_dmhc_repair_gslots_0_EN)
      ret_ifc_dmhc_repair_gslots_0 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_gslots_0_D_IN;
    if (ret_ifc_dmhc_repair_gslots_1_EN)
      ret_ifc_dmhc_repair_gslots_1 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_gslots_1_D_IN;
    if (ret_ifc_dmhc_repair_gslots_2_EN)
      ret_ifc_dmhc_repair_gslots_2 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_gslots_2_D_IN;
    if (ret_ifc_dmhc_repair_gslots_3_EN)
      ret_ifc_dmhc_repair_gslots_3 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_gslots_3_D_IN;
    if (ret_ifc_dmhc_repair_hvals_0_EN)
      ret_ifc_dmhc_repair_hvals_0 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_hvals_0_D_IN;
    if (ret_ifc_dmhc_repair_hvals_1_EN)
      ret_ifc_dmhc_repair_hvals_1 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_hvals_1_D_IN;
    if (ret_ifc_dmhc_repair_hvals_2_EN)
      ret_ifc_dmhc_repair_hvals_2 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_hvals_2_D_IN;
    if (ret_ifc_dmhc_repair_hvals_3_EN)
      ret_ifc_dmhc_repair_hvals_3 <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_hvals_3_D_IN;
    if (ret_ifc_dmhc_repair_mslot_EN)
      ret_ifc_dmhc_repair_mslot <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_repair_mslot_D_IN;
    if (ret_ifc_dmhc_victim_g_index_EN)
      ret_ifc_dmhc_victim_g_index <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_victim_g_index_D_IN;
    if (ret_ifc_dmhc_victim_gslot_EN)
      ret_ifc_dmhc_victim_gslot <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_victim_gslot_D_IN;
    if (ret_ifc_dmhc_victim_mslot_EN)
      ret_ifc_dmhc_victim_mslot <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_victim_mslot_D_IN;
    if (ret_ifc_dmhc_victim_mslot_addr_EN)
      ret_ifc_dmhc_victim_mslot_addr <= `BSV_ASSIGNMENT_DELAY
	  ret_ifc_dmhc_victim_mslot_addr_D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    ret_ifc_dmhc_evictee_gslots_0 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_evictee_gslots_1 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_evictee_gslots_2 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_evictee_gslots_3 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_evictee_hvals_0 = 9'h0AA;
    ret_ifc_dmhc_evictee_hvals_1 = 9'h0AA;
    ret_ifc_dmhc_evictee_hvals_2 = 9'h0AA;
    ret_ifc_dmhc_evictee_hvals_3 = 9'h0AA;
    ret_ifc_dmhc_evictee_mslot = 60'hAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_hash_units_0_gslot_counter = 9'h0AA;
    ret_ifc_dmhc_hash_units_0_init = 1'h0;
    ret_ifc_dmhc_hash_units_0_is_miss = 1'h0;
    ret_ifc_dmhc_hash_units_1_gslot_counter = 9'h0AA;
    ret_ifc_dmhc_hash_units_1_init = 1'h0;
    ret_ifc_dmhc_hash_units_1_is_miss = 1'h0;
    ret_ifc_dmhc_hash_units_2_gslot_counter = 9'h0AA;
    ret_ifc_dmhc_hash_units_2_init = 1'h0;
    ret_ifc_dmhc_hash_units_2_is_miss = 1'h0;
    ret_ifc_dmhc_hash_units_3_gslot_counter = 9'h0AA;
    ret_ifc_dmhc_hash_units_3_init = 1'h0;
    ret_ifc_dmhc_hash_units_3_is_miss = 1'h0;
    ret_ifc_dmhc_inited = 1'h0;
    ret_ifc_dmhc_ldvn_start_reg = 1'h0;
    ret_ifc_dmhc_ldvn_start_reg_1 = 1'h0;
    ret_ifc_dmhc_ldvn_state_can_overlap = 1'h0;
    ret_ifc_dmhc_ldvn_state_fired = 1'h0;
    ret_ifc_dmhc_ldvn_state_mkFSMstate = 4'hA;
    ret_ifc_dmhc_miss_service = 1'h0;
    ret_ifc_dmhc_mslot_counter = 8'hAA;
    ret_ifc_dmhc_mslot_replacement_start_reg = 1'h0;
    ret_ifc_dmhc_mslot_replacement_start_reg_1 = 1'h0;
    ret_ifc_dmhc_mslot_replacement_state_can_overlap = 1'h0;
    ret_ifc_dmhc_mslot_replacement_state_fired = 1'h0;
    ret_ifc_dmhc_mslot_replacement_state_mkFSMstate = 4'hA;
    ret_ifc_dmhc_mslot_to_repair = 60'hAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_new_gslots_0 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_new_gslots_1 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_new_gslots_2 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_new_gslots_3 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_new_hvals_0 = 9'h0AA;
    ret_ifc_dmhc_new_hvals_1 = 9'h0AA;
    ret_ifc_dmhc_new_hvals_2 = 9'h0AA;
    ret_ifc_dmhc_new_hvals_3 = 9'h0AA;
    ret_ifc_dmhc_new_mslot = 60'hAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_repair_g_index = 2'h2;
    ret_ifc_dmhc_repair_gslot = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_repair_gslots_0 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_repair_gslots_1 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_repair_gslots_2 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_repair_gslots_3 = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_repair_hvals_0 = 9'h0AA;
    ret_ifc_dmhc_repair_hvals_1 = 9'h0AA;
    ret_ifc_dmhc_repair_hvals_2 = 9'h0AA;
    ret_ifc_dmhc_repair_hvals_3 = 9'h0AA;
    ret_ifc_dmhc_repair_mslot = 60'hAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_stage = 2'h2;
    ret_ifc_dmhc_victim_g_index = 2'h2;
    ret_ifc_dmhc_victim_gslot = 68'hAAAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_victim_mslot = 60'hAAAAAAAAAAAAAAA;
    ret_ifc_dmhc_victim_mslot_addr = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get)
	begin
	  v__h66821 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get)
	$fwrite(32'h80000001, "(%0d) ", v__h66821);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get) $fwrite(32'h80000001, param1);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get) $fwrite(32'h80000001, ".deq = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get && ret_ifc_readDataFifo_D_OUT[50])
	$fwrite(32'h80000001,
		"tagged Valid ",
		"'h%h",
		ret_ifc_readDataFifo_D_OUT[49:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get && !ret_ifc_readDataFifo_D_OUT[50])
	$fwrite(32'h80000001, "tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get) $fwrite(32'h80000001, "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_lookupPort_response_get) $fflush(32'h80000001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_read)
	begin
	  v___1__h62928 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_read)
	$display("(%0d) MatchTable:do_read %s key: %h",
		 v___1__h62928,
		 param1,
		 ret_ifc_readReqFifo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables)
	begin
	  v__h62100 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_lookup_gtables)
	$display("[%0d]: mslot addr: %d rec_value %h",
		 v__h62100,
		 re_maddr__h61811,
		 re_value__h61812);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable)
	begin
	  v__h62279 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable)
	$display("[%0d]: mslot.key: %d, mslot.value: %d",
		 v__h62279,
		 ret_ifc_dmhc_m_table_DOA[58:50],
		 ret_ifc_dmhc_m_table_DOA[49:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_delay)
	begin
	  v__h66160 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_delay)
	$display("(%0d) dmhc %d",
		 v__h66160,
		 WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
		 ret_ifc_dmhc_is_hit_wire_wget);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp)
	begin
	  v___1__h66250 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp)
	$display("(%0d) MatchTable:do_resp %s key: %h, ishit: %d",
		 v___1__h66250,
		 param1,
		 ret_ifc_delay2_ff_D_OUT,
		 WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
		 ret_ifc_dmhc_is_hit_wire_wget);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	begin
	  v__h66419 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	$fwrite(32'h80000001, "(%0d) ", v__h66419);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	$fwrite(32'h80000001, param1, ".enq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	$fwrite(32'h80000001, "(");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	$fwrite(32'h80000001,
		"tagged Valid ",
		"'h%h",
		IF_ret_ifc_dmhc_rec_value_whas__45_THEN_ret_if_ETC___d547);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	$fwrite(32'h80000001, ")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	$fwrite(32'h80000001, "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable &&
	  ret_ifc_dmhc_is_hit_wire_wget)
	$fflush(32'h80000001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	begin
	  v__h66549 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	$fwrite(32'h80000001, "(%0d) ", v__h66549);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	$fwrite(32'h80000001, param1, ".enq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	$fwrite(32'h80000001, "(");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	$fwrite(32'h80000001, "tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	$fwrite(32'h80000001, ")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	$fwrite(32'h80000001, "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_do_resp &&
	  (!WILL_FIRE_RL_ret_ifc_dmhc_lookup_mtable ||
	   !ret_ifc_dmhc_is_hit_wire_wget))
	$fflush(32'h80000001);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_add_entry_put)
	begin
	  v___1__h67019 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_add_entry_put)
	$display("(%0d) add entry %h %h",
		 v___1__h67019,
		 add_entry_put[58:50],
		 add_entry_put[49:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (!ret_ifc_dmhc_inited && ret_ifc_dmhc_mslot_counter == 8'd255 &&
	  ret_ifc_dmhc_hash_units_0_init)
	begin
	  v__h61537 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (!ret_ifc_dmhc_inited && ret_ifc_dmhc_mslot_counter == 8'd255 &&
	  ret_ifc_dmhc_hash_units_0_init)
	$display("(%0d) match table inited", v__h61537);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9 &&
	  (WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 22, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_ldvn_action_l22c9] and [RL_ret_ifc_dmhc_ldvn_action_l30c9,\n  RL_ret_ifc_dmhc_ldvn_action_l41c9, RL_ret_ifc_dmhc_ldvn_action_l52c9,\n  RL_ret_ifc_dmhc_ldvn_action_l60c9, RL_ret_ifc_dmhc_ldvn_action_l99c9,\n  RL_ret_ifc_dmhc_ldvn_action_l107c9] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9 &&
	  (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 30, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_ldvn_action_l30c9] and [RL_ret_ifc_dmhc_ldvn_action_l41c9,\n  RL_ret_ifc_dmhc_ldvn_action_l52c9, RL_ret_ifc_dmhc_ldvn_action_l60c9,\n  RL_ret_ifc_dmhc_ldvn_action_l99c9, RL_ret_ifc_dmhc_ldvn_action_l107c9] )\n  fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd2 &&
	  (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 41, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_ldvn_action_l41c9] and [RL_ret_ifc_dmhc_ldvn_action_l52c9,\n  RL_ret_ifc_dmhc_ldvn_action_l60c9, RL_ret_ifc_dmhc_ldvn_action_l99c9,\n  RL_ret_ifc_dmhc_ldvn_action_l107c9] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd3 &&
	  (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 52, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_ldvn_action_l52c9] and [RL_ret_ifc_dmhc_ldvn_action_l60c9,\n  RL_ret_ifc_dmhc_ldvn_action_l99c9, RL_ret_ifc_dmhc_ldvn_action_l107c9] )\n  fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd4 &&
	  (WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 ||
	   ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 60, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_ldvn_action_l60c9] and [RL_ret_ifc_dmhc_ldvn_action_l99c9,\n  RL_ret_ifc_dmhc_ldvn_action_l107c9] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9 &&
	  ret_ifc_dmhc_ldvn_state_mkFSMstate == 4'd6)
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 99, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_ldvn_action_l99c9] and [RL_ret_ifc_dmhc_ldvn_action_l107c9]\n  ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	  ret_ifc_dmhc_victim_gslot[1:0] == 2'd0)
	begin
	  v__h60873 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9 &&
	  ret_ifc_dmhc_victim_gslot[1:0] == 2'd0)
	$display("[%d]: new (key,value) inserted at slot %d\n",
		 v__h60873,
		 ret_ifc_dmhc_mslot_counter - 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 &&
	  (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 128, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l128c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l138c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l149c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l164c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l172c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l182c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l192c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 &&
	  (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 138, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l138c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l149c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l164c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l172c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l182c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l192c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 &&
	  (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 149, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l149c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l164c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l172c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l182c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l192c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 &&
	  (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 164, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l164c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l172c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l182c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l192c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 &&
	  (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 172, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l172c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l182c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l192c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 &&
	  (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 192, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l192c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 &&
	  (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 182, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l182c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l192c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 &&
	  (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 201, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l201c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 &&
	  (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 243, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l243c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 &&
	  WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9)
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 251, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l251c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9 &&
	  (WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd2 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd3 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd6 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd7 ||
	   ret_ifc_dmhc_mslot_replacement_state_mkFSMstate == 4'd8 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9 ||
	   WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9))
	$display("Error: \"/home/netarchlab/p4fpga/p4fpga/bsv/library/DMHC/MissServiceFSM.bsv\", line 121, column 9: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l121c9] and\n  [RL_ret_ifc_dmhc_mslot_replacement_action_l128c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l138c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l149c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l164c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l172c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l182c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l192c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l201c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l243c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l251c9,\n  RL_ret_ifc_dmhc_mslot_replacement_action_l258c9] ) fired in the same clock\n  cycle.\n");
  end
  // synopsys translate_on
endmodule  // mkMatchTable_SendFrame

