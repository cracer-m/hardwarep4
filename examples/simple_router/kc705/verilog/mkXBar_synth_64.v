//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Wed May 31 23:27:57 CST 2017
//
// BVI format method schedule info:
// schedule input_ports_0_put  CF ( input_ports_1_put,
// 				 input_ports_2_put,
// 				 input_ports_3_put,
// 				 input_ports_4_put,
// 				 input_ports_5_put,
// 				 input_ports_6_put,
// 				 input_ports_7_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_0_put  C ( input_ports_0_put );
//
// schedule input_ports_1_put  CF ( input_ports_0_put,
// 				 input_ports_2_put,
// 				 input_ports_3_put,
// 				 input_ports_4_put,
// 				 input_ports_5_put,
// 				 input_ports_6_put,
// 				 input_ports_7_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_1_put  C ( input_ports_1_put );
//
// schedule input_ports_2_put  CF ( input_ports_0_put,
// 				 input_ports_1_put,
// 				 input_ports_3_put,
// 				 input_ports_4_put,
// 				 input_ports_5_put,
// 				 input_ports_6_put,
// 				 input_ports_7_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_2_put  C ( input_ports_2_put );
//
// schedule input_ports_3_put  CF ( input_ports_0_put,
// 				 input_ports_1_put,
// 				 input_ports_2_put,
// 				 input_ports_4_put,
// 				 input_ports_5_put,
// 				 input_ports_6_put,
// 				 input_ports_7_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_3_put  C ( input_ports_3_put );
//
// schedule input_ports_4_put  CF ( input_ports_0_put,
// 				 input_ports_1_put,
// 				 input_ports_2_put,
// 				 input_ports_3_put,
// 				 input_ports_5_put,
// 				 input_ports_6_put,
// 				 input_ports_7_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_4_put  C ( input_ports_4_put );
//
// schedule input_ports_5_put  CF ( input_ports_0_put,
// 				 input_ports_1_put,
// 				 input_ports_2_put,
// 				 input_ports_3_put,
// 				 input_ports_4_put,
// 				 input_ports_6_put,
// 				 input_ports_7_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_5_put  C ( input_ports_5_put );
//
// schedule input_ports_6_put  CF ( input_ports_0_put,
// 				 input_ports_1_put,
// 				 input_ports_2_put,
// 				 input_ports_3_put,
// 				 input_ports_4_put,
// 				 input_ports_5_put,
// 				 input_ports_7_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_6_put  C ( input_ports_6_put );
//
// schedule input_ports_7_put  CF ( input_ports_0_put,
// 				 input_ports_1_put,
// 				 input_ports_2_put,
// 				 input_ports_3_put,
// 				 input_ports_4_put,
// 				 input_ports_5_put,
// 				 input_ports_6_put,
// 				 output_ports_0_get,
// 				 output_ports_1_get,
// 				 output_ports_2_get,
// 				 output_ports_3_get,
// 				 output_ports_4_get,
// 				 output_ports_5_get,
// 				 output_ports_6_get,
// 				 output_ports_7_get );
// schedule input_ports_7_put  C ( input_ports_7_put );
//
// schedule output_ports_0_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_1_get,
// 				  output_ports_2_get,
// 				  output_ports_3_get,
// 				  output_ports_4_get,
// 				  output_ports_5_get,
// 				  output_ports_6_get,
// 				  output_ports_7_get );
// schedule output_ports_0_get  C ( output_ports_0_get );
//
// schedule output_ports_1_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_0_get,
// 				  output_ports_2_get,
// 				  output_ports_3_get,
// 				  output_ports_4_get,
// 				  output_ports_5_get,
// 				  output_ports_6_get,
// 				  output_ports_7_get );
// schedule output_ports_1_get  C ( output_ports_1_get );
//
// schedule output_ports_2_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_0_get,
// 				  output_ports_1_get,
// 				  output_ports_3_get,
// 				  output_ports_4_get,
// 				  output_ports_5_get,
// 				  output_ports_6_get,
// 				  output_ports_7_get );
// schedule output_ports_2_get  C ( output_ports_2_get );
//
// schedule output_ports_3_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_0_get,
// 				  output_ports_1_get,
// 				  output_ports_2_get,
// 				  output_ports_4_get,
// 				  output_ports_5_get,
// 				  output_ports_6_get,
// 				  output_ports_7_get );
// schedule output_ports_3_get  C ( output_ports_3_get );
//
// schedule output_ports_4_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_0_get,
// 				  output_ports_1_get,
// 				  output_ports_2_get,
// 				  output_ports_3_get,
// 				  output_ports_5_get,
// 				  output_ports_6_get,
// 				  output_ports_7_get );
// schedule output_ports_4_get  C ( output_ports_4_get );
//
// schedule output_ports_5_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_0_get,
// 				  output_ports_1_get,
// 				  output_ports_2_get,
// 				  output_ports_3_get,
// 				  output_ports_4_get,
// 				  output_ports_6_get,
// 				  output_ports_7_get );
// schedule output_ports_5_get  C ( output_ports_5_get );
//
// schedule output_ports_6_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_0_get,
// 				  output_ports_1_get,
// 				  output_ports_2_get,
// 				  output_ports_3_get,
// 				  output_ports_4_get,
// 				  output_ports_5_get,
// 				  output_ports_7_get );
// schedule output_ports_6_get  C ( output_ports_6_get );
//
// schedule output_ports_7_get  CF ( input_ports_0_put,
// 				  input_ports_1_put,
// 				  input_ports_2_put,
// 				  input_ports_3_put,
// 				  input_ports_4_put,
// 				  input_ports_5_put,
// 				  input_ports_6_put,
// 				  input_ports_7_put,
// 				  output_ports_0_get,
// 				  output_ports_1_get,
// 				  output_ports_2_get,
// 				  output_ports_3_get,
// 				  output_ports_4_get,
// 				  output_ports_5_get,
// 				  output_ports_6_get );
// schedule output_ports_7_get  C ( output_ports_7_get );
//
//
// Ports:
// Name                         I/O  size props
// RDY_input_ports_0_put          O     1 reg
// RDY_input_ports_1_put          O     1 reg
// RDY_input_ports_2_put          O     1 reg
// RDY_input_ports_3_put          O     1 reg
// RDY_input_ports_4_put          O     1 reg
// RDY_input_ports_5_put          O     1 reg
// RDY_input_ports_6_put          O     1 reg
// RDY_input_ports_7_put          O     1 reg
// output_ports_0_get             O   610 reg
// RDY_output_ports_0_get         O     1 reg
// output_ports_1_get             O   610 reg
// RDY_output_ports_1_get         O     1 reg
// output_ports_2_get             O   610 reg
// RDY_output_ports_2_get         O     1 reg
// output_ports_3_get             O   610 reg
// RDY_output_ports_3_get         O     1 reg
// output_ports_4_get             O   610 reg
// RDY_output_ports_4_get         O     1 reg
// output_ports_5_get             O   610 reg
// RDY_output_ports_5_get         O     1 reg
// output_ports_6_get             O   610 reg
// RDY_output_ports_6_get         O     1 reg
// output_ports_7_get             O   610 reg
// RDY_output_ports_7_get         O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// input_ports_0_put              I   610 reg
// input_ports_1_put              I   610 reg
// input_ports_2_put              I   610 reg
// input_ports_3_put              I   610 reg
// input_ports_4_put              I   610 reg
// input_ports_5_put              I   610 reg
// input_ports_6_put              I   610 reg
// input_ports_7_put              I   610 reg
// EN_input_ports_0_put           I     1
// EN_input_ports_1_put           I     1
// EN_input_ports_2_put           I     1
// EN_input_ports_3_put           I     1
// EN_input_ports_4_put           I     1
// EN_input_ports_5_put           I     1
// EN_input_ports_6_put           I     1
// EN_input_ports_7_put           I     1
// EN_output_ports_0_get          I     1
// EN_output_ports_1_get          I     1
// EN_output_ports_2_get          I     1
// EN_output_ports_3_get          I     1
// EN_output_ports_4_get          I     1
// EN_output_ports_5_get          I     1
// EN_output_ports_6_get          I     1
// EN_output_ports_7_get          I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkXBar_synth_64(CLK,
		       RST_N,

		       input_ports_0_put,
		       EN_input_ports_0_put,
		       RDY_input_ports_0_put,

		       input_ports_1_put,
		       EN_input_ports_1_put,
		       RDY_input_ports_1_put,

		       input_ports_2_put,
		       EN_input_ports_2_put,
		       RDY_input_ports_2_put,

		       input_ports_3_put,
		       EN_input_ports_3_put,
		       RDY_input_ports_3_put,

		       input_ports_4_put,
		       EN_input_ports_4_put,
		       RDY_input_ports_4_put,

		       input_ports_5_put,
		       EN_input_ports_5_put,
		       RDY_input_ports_5_put,

		       input_ports_6_put,
		       EN_input_ports_6_put,
		       RDY_input_ports_6_put,

		       input_ports_7_put,
		       EN_input_ports_7_put,
		       RDY_input_ports_7_put,

		       EN_output_ports_0_get,
		       output_ports_0_get,
		       RDY_output_ports_0_get,

		       EN_output_ports_1_get,
		       output_ports_1_get,
		       RDY_output_ports_1_get,

		       EN_output_ports_2_get,
		       output_ports_2_get,
		       RDY_output_ports_2_get,

		       EN_output_ports_3_get,
		       output_ports_3_get,
		       RDY_output_ports_3_get,

		       EN_output_ports_4_get,
		       output_ports_4_get,
		       RDY_output_ports_4_get,

		       EN_output_ports_5_get,
		       output_ports_5_get,
		       RDY_output_ports_5_get,

		       EN_output_ports_6_get,
		       output_ports_6_get,
		       RDY_output_ports_6_get,

		       EN_output_ports_7_get,
		       output_ports_7_get,
		       RDY_output_ports_7_get);
  input  CLK;
  input  RST_N;

  // action method input_ports_0_put
  input  [609 : 0] input_ports_0_put;
  input  EN_input_ports_0_put;
  output RDY_input_ports_0_put;

  // action method input_ports_1_put
  input  [609 : 0] input_ports_1_put;
  input  EN_input_ports_1_put;
  output RDY_input_ports_1_put;

  // action method input_ports_2_put
  input  [609 : 0] input_ports_2_put;
  input  EN_input_ports_2_put;
  output RDY_input_ports_2_put;

  // action method input_ports_3_put
  input  [609 : 0] input_ports_3_put;
  input  EN_input_ports_3_put;
  output RDY_input_ports_3_put;

  // action method input_ports_4_put
  input  [609 : 0] input_ports_4_put;
  input  EN_input_ports_4_put;
  output RDY_input_ports_4_put;

  // action method input_ports_5_put
  input  [609 : 0] input_ports_5_put;
  input  EN_input_ports_5_put;
  output RDY_input_ports_5_put;

  // action method input_ports_6_put
  input  [609 : 0] input_ports_6_put;
  input  EN_input_ports_6_put;
  output RDY_input_ports_6_put;

  // action method input_ports_7_put
  input  [609 : 0] input_ports_7_put;
  input  EN_input_ports_7_put;
  output RDY_input_ports_7_put;

  // actionvalue method output_ports_0_get
  input  EN_output_ports_0_get;
  output [609 : 0] output_ports_0_get;
  output RDY_output_ports_0_get;

  // actionvalue method output_ports_1_get
  input  EN_output_ports_1_get;
  output [609 : 0] output_ports_1_get;
  output RDY_output_ports_1_get;

  // actionvalue method output_ports_2_get
  input  EN_output_ports_2_get;
  output [609 : 0] output_ports_2_get;
  output RDY_output_ports_2_get;

  // actionvalue method output_ports_3_get
  input  EN_output_ports_3_get;
  output [609 : 0] output_ports_3_get;
  output RDY_output_ports_3_get;

  // actionvalue method output_ports_4_get
  input  EN_output_ports_4_get;
  output [609 : 0] output_ports_4_get;
  output RDY_output_ports_4_get;

  // actionvalue method output_ports_5_get
  input  EN_output_ports_5_get;
  output [609 : 0] output_ports_5_get;
  output RDY_output_ports_5_get;

  // actionvalue method output_ports_6_get
  input  EN_output_ports_6_get;
  output [609 : 0] output_ports_6_get;
  output RDY_output_ports_6_get;

  // actionvalue method output_ports_7_get
  input  EN_output_ports_7_get;
  output [609 : 0] output_ports_7_get;
  output RDY_output_ports_7_get;

  // signals for module outputs
  wire [609 : 0] output_ports_0_get,
		 output_ports_1_get,
		 output_ports_2_get,
		 output_ports_3_get,
		 output_ports_4_get,
		 output_ports_5_get,
		 output_ports_6_get,
		 output_ports_7_get;
  wire RDY_input_ports_0_put,
       RDY_input_ports_1_put,
       RDY_input_ports_2_put,
       RDY_input_ports_3_put,
       RDY_input_ports_4_put,
       RDY_input_ports_5_put,
       RDY_input_ports_6_put,
       RDY_input_ports_7_put,
       RDY_output_ports_0_get,
       RDY_output_ports_1_get,
       RDY_output_ports_2_get,
       RDY_output_ports_3_get,
       RDY_output_ports_4_get,
       RDY_output_ports_5_get,
       RDY_output_ports_6_get,
       RDY_output_ports_7_get;

  // register lower_lower_merges_1_fi0HasPrio
  reg lower_lower_merges_1_fi0HasPrio;
  reg lower_lower_merges_1_fi0HasPrio_D_IN;
  wire lower_lower_merges_1_fi0HasPrio_EN;

  // register lower_lower_merges_1_routeFrom
  reg [1 : 0] lower_lower_merges_1_routeFrom;
  wire [1 : 0] lower_lower_merges_1_routeFrom_D_IN;
  wire lower_lower_merges_1_routeFrom_EN;

  // register lower_lower_merges_fi0HasPrio
  reg lower_lower_merges_fi0HasPrio;
  reg lower_lower_merges_fi0HasPrio_D_IN;
  wire lower_lower_merges_fi0HasPrio_EN;

  // register lower_lower_merges_routeFrom
  reg [1 : 0] lower_lower_merges_routeFrom;
  wire [1 : 0] lower_lower_merges_routeFrom_D_IN;
  wire lower_lower_merges_routeFrom_EN;

  // register lower_merges_1_fi0HasPrio
  reg lower_merges_1_fi0HasPrio;
  reg lower_merges_1_fi0HasPrio_D_IN;
  wire lower_merges_1_fi0HasPrio_EN;

  // register lower_merges_1_routeFrom
  reg [1 : 0] lower_merges_1_routeFrom;
  wire [1 : 0] lower_merges_1_routeFrom_D_IN;
  wire lower_merges_1_routeFrom_EN;

  // register lower_merges_2_fi0HasPrio
  reg lower_merges_2_fi0HasPrio;
  reg lower_merges_2_fi0HasPrio_D_IN;
  wire lower_merges_2_fi0HasPrio_EN;

  // register lower_merges_2_routeFrom
  reg [1 : 0] lower_merges_2_routeFrom;
  wire [1 : 0] lower_merges_2_routeFrom_D_IN;
  wire lower_merges_2_routeFrom_EN;

  // register lower_merges_3_fi0HasPrio
  reg lower_merges_3_fi0HasPrio;
  reg lower_merges_3_fi0HasPrio_D_IN;
  wire lower_merges_3_fi0HasPrio_EN;

  // register lower_merges_3_routeFrom
  reg [1 : 0] lower_merges_3_routeFrom;
  wire [1 : 0] lower_merges_3_routeFrom_D_IN;
  wire lower_merges_3_routeFrom_EN;

  // register lower_merges_fi0HasPrio
  reg lower_merges_fi0HasPrio;
  reg lower_merges_fi0HasPrio_D_IN;
  wire lower_merges_fi0HasPrio_EN;

  // register lower_merges_routeFrom
  reg [1 : 0] lower_merges_routeFrom;
  wire [1 : 0] lower_merges_routeFrom_D_IN;
  wire lower_merges_routeFrom_EN;

  // register lower_upper_merges_1_fi0HasPrio
  reg lower_upper_merges_1_fi0HasPrio;
  reg lower_upper_merges_1_fi0HasPrio_D_IN;
  wire lower_upper_merges_1_fi0HasPrio_EN;

  // register lower_upper_merges_1_routeFrom
  reg [1 : 0] lower_upper_merges_1_routeFrom;
  wire [1 : 0] lower_upper_merges_1_routeFrom_D_IN;
  wire lower_upper_merges_1_routeFrom_EN;

  // register lower_upper_merges_fi0HasPrio
  reg lower_upper_merges_fi0HasPrio;
  reg lower_upper_merges_fi0HasPrio_D_IN;
  wire lower_upper_merges_fi0HasPrio_EN;

  // register lower_upper_merges_routeFrom
  reg [1 : 0] lower_upper_merges_routeFrom;
  wire [1 : 0] lower_upper_merges_routeFrom_D_IN;
  wire lower_upper_merges_routeFrom_EN;

  // register merges_1_fi0HasPrio
  reg merges_1_fi0HasPrio;
  reg merges_1_fi0HasPrio_D_IN;
  wire merges_1_fi0HasPrio_EN;

  // register merges_1_routeFrom
  reg [1 : 0] merges_1_routeFrom;
  wire [1 : 0] merges_1_routeFrom_D_IN;
  wire merges_1_routeFrom_EN;

  // register merges_2_fi0HasPrio
  reg merges_2_fi0HasPrio;
  reg merges_2_fi0HasPrio_D_IN;
  wire merges_2_fi0HasPrio_EN;

  // register merges_2_routeFrom
  reg [1 : 0] merges_2_routeFrom;
  wire [1 : 0] merges_2_routeFrom_D_IN;
  wire merges_2_routeFrom_EN;

  // register merges_3_fi0HasPrio
  reg merges_3_fi0HasPrio;
  reg merges_3_fi0HasPrio_D_IN;
  wire merges_3_fi0HasPrio_EN;

  // register merges_3_routeFrom
  reg [1 : 0] merges_3_routeFrom;
  wire [1 : 0] merges_3_routeFrom_D_IN;
  wire merges_3_routeFrom_EN;

  // register merges_4_fi0HasPrio
  reg merges_4_fi0HasPrio;
  reg merges_4_fi0HasPrio_D_IN;
  wire merges_4_fi0HasPrio_EN;

  // register merges_4_routeFrom
  reg [1 : 0] merges_4_routeFrom;
  wire [1 : 0] merges_4_routeFrom_D_IN;
  wire merges_4_routeFrom_EN;

  // register merges_5_fi0HasPrio
  reg merges_5_fi0HasPrio;
  reg merges_5_fi0HasPrio_D_IN;
  wire merges_5_fi0HasPrio_EN;

  // register merges_5_routeFrom
  reg [1 : 0] merges_5_routeFrom;
  wire [1 : 0] merges_5_routeFrom_D_IN;
  wire merges_5_routeFrom_EN;

  // register merges_6_fi0HasPrio
  reg merges_6_fi0HasPrio;
  reg merges_6_fi0HasPrio_D_IN;
  wire merges_6_fi0HasPrio_EN;

  // register merges_6_routeFrom
  reg [1 : 0] merges_6_routeFrom;
  wire [1 : 0] merges_6_routeFrom_D_IN;
  wire merges_6_routeFrom_EN;

  // register merges_7_fi0HasPrio
  reg merges_7_fi0HasPrio;
  reg merges_7_fi0HasPrio_D_IN;
  wire merges_7_fi0HasPrio_EN;

  // register merges_7_routeFrom
  reg [1 : 0] merges_7_routeFrom;
  wire [1 : 0] merges_7_routeFrom_D_IN;
  wire merges_7_routeFrom_EN;

  // register merges_fi0HasPrio
  reg merges_fi0HasPrio;
  reg merges_fi0HasPrio_D_IN;
  wire merges_fi0HasPrio_EN;

  // register merges_routeFrom
  reg [1 : 0] merges_routeFrom;
  wire [1 : 0] merges_routeFrom_D_IN;
  wire merges_routeFrom_EN;

  // register upper_lower_merges_1_fi0HasPrio
  reg upper_lower_merges_1_fi0HasPrio;
  reg upper_lower_merges_1_fi0HasPrio_D_IN;
  wire upper_lower_merges_1_fi0HasPrio_EN;

  // register upper_lower_merges_1_routeFrom
  reg [1 : 0] upper_lower_merges_1_routeFrom;
  wire [1 : 0] upper_lower_merges_1_routeFrom_D_IN;
  wire upper_lower_merges_1_routeFrom_EN;

  // register upper_lower_merges_fi0HasPrio
  reg upper_lower_merges_fi0HasPrio;
  reg upper_lower_merges_fi0HasPrio_D_IN;
  wire upper_lower_merges_fi0HasPrio_EN;

  // register upper_lower_merges_routeFrom
  reg [1 : 0] upper_lower_merges_routeFrom;
  wire [1 : 0] upper_lower_merges_routeFrom_D_IN;
  wire upper_lower_merges_routeFrom_EN;

  // register upper_merges_1_fi0HasPrio
  reg upper_merges_1_fi0HasPrio;
  reg upper_merges_1_fi0HasPrio_D_IN;
  wire upper_merges_1_fi0HasPrio_EN;

  // register upper_merges_1_routeFrom
  reg [1 : 0] upper_merges_1_routeFrom;
  wire [1 : 0] upper_merges_1_routeFrom_D_IN;
  wire upper_merges_1_routeFrom_EN;

  // register upper_merges_2_fi0HasPrio
  reg upper_merges_2_fi0HasPrio;
  reg upper_merges_2_fi0HasPrio_D_IN;
  wire upper_merges_2_fi0HasPrio_EN;

  // register upper_merges_2_routeFrom
  reg [1 : 0] upper_merges_2_routeFrom;
  wire [1 : 0] upper_merges_2_routeFrom_D_IN;
  wire upper_merges_2_routeFrom_EN;

  // register upper_merges_3_fi0HasPrio
  reg upper_merges_3_fi0HasPrio;
  reg upper_merges_3_fi0HasPrio_D_IN;
  wire upper_merges_3_fi0HasPrio_EN;

  // register upper_merges_3_routeFrom
  reg [1 : 0] upper_merges_3_routeFrom;
  wire [1 : 0] upper_merges_3_routeFrom_D_IN;
  wire upper_merges_3_routeFrom_EN;

  // register upper_merges_fi0HasPrio
  reg upper_merges_fi0HasPrio;
  reg upper_merges_fi0HasPrio_D_IN;
  wire upper_merges_fi0HasPrio_EN;

  // register upper_merges_routeFrom
  reg [1 : 0] upper_merges_routeFrom;
  wire [1 : 0] upper_merges_routeFrom_D_IN;
  wire upper_merges_routeFrom_EN;

  // register upper_upper_merges_1_fi0HasPrio
  reg upper_upper_merges_1_fi0HasPrio;
  reg upper_upper_merges_1_fi0HasPrio_D_IN;
  wire upper_upper_merges_1_fi0HasPrio_EN;

  // register upper_upper_merges_1_routeFrom
  reg [1 : 0] upper_upper_merges_1_routeFrom;
  wire [1 : 0] upper_upper_merges_1_routeFrom_D_IN;
  wire upper_upper_merges_1_routeFrom_EN;

  // register upper_upper_merges_fi0HasPrio
  reg upper_upper_merges_fi0HasPrio;
  reg upper_upper_merges_fi0HasPrio_D_IN;
  wire upper_upper_merges_fi0HasPrio_EN;

  // register upper_upper_merges_routeFrom
  reg [1 : 0] upper_upper_merges_routeFrom;
  wire [1 : 0] upper_upper_merges_routeFrom_D_IN;
  wire upper_upper_merges_routeFrom_EN;

  // ports of submodule lower_lower_lower_f
  wire [609 : 0] lower_lower_lower_f_D_IN, lower_lower_lower_f_D_OUT;
  wire lower_lower_lower_f_CLR,
       lower_lower_lower_f_DEQ,
       lower_lower_lower_f_EMPTY_N,
       lower_lower_lower_f_ENQ,
       lower_lower_lower_f_FULL_N;

  // ports of submodule lower_lower_merges_1_fi0
  wire [609 : 0] lower_lower_merges_1_fi0_D_IN,
		 lower_lower_merges_1_fi0_D_OUT;
  wire lower_lower_merges_1_fi0_CLR,
       lower_lower_merges_1_fi0_DEQ,
       lower_lower_merges_1_fi0_EMPTY_N,
       lower_lower_merges_1_fi0_ENQ,
       lower_lower_merges_1_fi0_FULL_N;

  // ports of submodule lower_lower_merges_1_fi1
  wire [609 : 0] lower_lower_merges_1_fi1_D_IN,
		 lower_lower_merges_1_fi1_D_OUT;
  wire lower_lower_merges_1_fi1_CLR,
       lower_lower_merges_1_fi1_DEQ,
       lower_lower_merges_1_fi1_EMPTY_N,
       lower_lower_merges_1_fi1_ENQ,
       lower_lower_merges_1_fi1_FULL_N;

  // ports of submodule lower_lower_merges_1_fo
  reg [609 : 0] lower_lower_merges_1_fo_D_IN;
  wire [609 : 0] lower_lower_merges_1_fo_D_OUT;
  wire lower_lower_merges_1_fo_CLR,
       lower_lower_merges_1_fo_DEQ,
       lower_lower_merges_1_fo_EMPTY_N,
       lower_lower_merges_1_fo_ENQ,
       lower_lower_merges_1_fo_FULL_N;

  // ports of submodule lower_lower_merges_fi0
  wire [609 : 0] lower_lower_merges_fi0_D_IN, lower_lower_merges_fi0_D_OUT;
  wire lower_lower_merges_fi0_CLR,
       lower_lower_merges_fi0_DEQ,
       lower_lower_merges_fi0_EMPTY_N,
       lower_lower_merges_fi0_ENQ,
       lower_lower_merges_fi0_FULL_N;

  // ports of submodule lower_lower_merges_fi1
  wire [609 : 0] lower_lower_merges_fi1_D_IN, lower_lower_merges_fi1_D_OUT;
  wire lower_lower_merges_fi1_CLR,
       lower_lower_merges_fi1_DEQ,
       lower_lower_merges_fi1_EMPTY_N,
       lower_lower_merges_fi1_ENQ,
       lower_lower_merges_fi1_FULL_N;

  // ports of submodule lower_lower_merges_fo
  reg [609 : 0] lower_lower_merges_fo_D_IN;
  wire [609 : 0] lower_lower_merges_fo_D_OUT;
  wire lower_lower_merges_fo_CLR,
       lower_lower_merges_fo_DEQ,
       lower_lower_merges_fo_EMPTY_N,
       lower_lower_merges_fo_ENQ,
       lower_lower_merges_fo_FULL_N;

  // ports of submodule lower_lower_upper_f
  wire [609 : 0] lower_lower_upper_f_D_IN, lower_lower_upper_f_D_OUT;
  wire lower_lower_upper_f_CLR,
       lower_lower_upper_f_DEQ,
       lower_lower_upper_f_EMPTY_N,
       lower_lower_upper_f_ENQ,
       lower_lower_upper_f_FULL_N;

  // ports of submodule lower_merges_1_fi0
  wire [609 : 0] lower_merges_1_fi0_D_IN, lower_merges_1_fi0_D_OUT;
  wire lower_merges_1_fi0_CLR,
       lower_merges_1_fi0_DEQ,
       lower_merges_1_fi0_EMPTY_N,
       lower_merges_1_fi0_ENQ,
       lower_merges_1_fi0_FULL_N;

  // ports of submodule lower_merges_1_fi1
  wire [609 : 0] lower_merges_1_fi1_D_IN, lower_merges_1_fi1_D_OUT;
  wire lower_merges_1_fi1_CLR,
       lower_merges_1_fi1_DEQ,
       lower_merges_1_fi1_EMPTY_N,
       lower_merges_1_fi1_ENQ,
       lower_merges_1_fi1_FULL_N;

  // ports of submodule lower_merges_1_fo
  reg [609 : 0] lower_merges_1_fo_D_IN;
  wire [609 : 0] lower_merges_1_fo_D_OUT;
  wire lower_merges_1_fo_CLR,
       lower_merges_1_fo_DEQ,
       lower_merges_1_fo_EMPTY_N,
       lower_merges_1_fo_ENQ,
       lower_merges_1_fo_FULL_N;

  // ports of submodule lower_merges_2_fi0
  wire [609 : 0] lower_merges_2_fi0_D_IN, lower_merges_2_fi0_D_OUT;
  wire lower_merges_2_fi0_CLR,
       lower_merges_2_fi0_DEQ,
       lower_merges_2_fi0_EMPTY_N,
       lower_merges_2_fi0_ENQ,
       lower_merges_2_fi0_FULL_N;

  // ports of submodule lower_merges_2_fi1
  wire [609 : 0] lower_merges_2_fi1_D_IN, lower_merges_2_fi1_D_OUT;
  wire lower_merges_2_fi1_CLR,
       lower_merges_2_fi1_DEQ,
       lower_merges_2_fi1_EMPTY_N,
       lower_merges_2_fi1_ENQ,
       lower_merges_2_fi1_FULL_N;

  // ports of submodule lower_merges_2_fo
  reg [609 : 0] lower_merges_2_fo_D_IN;
  wire [609 : 0] lower_merges_2_fo_D_OUT;
  wire lower_merges_2_fo_CLR,
       lower_merges_2_fo_DEQ,
       lower_merges_2_fo_EMPTY_N,
       lower_merges_2_fo_ENQ,
       lower_merges_2_fo_FULL_N;

  // ports of submodule lower_merges_3_fi0
  wire [609 : 0] lower_merges_3_fi0_D_IN, lower_merges_3_fi0_D_OUT;
  wire lower_merges_3_fi0_CLR,
       lower_merges_3_fi0_DEQ,
       lower_merges_3_fi0_EMPTY_N,
       lower_merges_3_fi0_ENQ,
       lower_merges_3_fi0_FULL_N;

  // ports of submodule lower_merges_3_fi1
  wire [609 : 0] lower_merges_3_fi1_D_IN, lower_merges_3_fi1_D_OUT;
  wire lower_merges_3_fi1_CLR,
       lower_merges_3_fi1_DEQ,
       lower_merges_3_fi1_EMPTY_N,
       lower_merges_3_fi1_ENQ,
       lower_merges_3_fi1_FULL_N;

  // ports of submodule lower_merges_3_fo
  reg [609 : 0] lower_merges_3_fo_D_IN;
  wire [609 : 0] lower_merges_3_fo_D_OUT;
  wire lower_merges_3_fo_CLR,
       lower_merges_3_fo_DEQ,
       lower_merges_3_fo_EMPTY_N,
       lower_merges_3_fo_ENQ,
       lower_merges_3_fo_FULL_N;

  // ports of submodule lower_merges_fi0
  wire [609 : 0] lower_merges_fi0_D_IN, lower_merges_fi0_D_OUT;
  wire lower_merges_fi0_CLR,
       lower_merges_fi0_DEQ,
       lower_merges_fi0_EMPTY_N,
       lower_merges_fi0_ENQ,
       lower_merges_fi0_FULL_N;

  // ports of submodule lower_merges_fi1
  wire [609 : 0] lower_merges_fi1_D_IN, lower_merges_fi1_D_OUT;
  wire lower_merges_fi1_CLR,
       lower_merges_fi1_DEQ,
       lower_merges_fi1_EMPTY_N,
       lower_merges_fi1_ENQ,
       lower_merges_fi1_FULL_N;

  // ports of submodule lower_merges_fo
  reg [609 : 0] lower_merges_fo_D_IN;
  wire [609 : 0] lower_merges_fo_D_OUT;
  wire lower_merges_fo_CLR,
       lower_merges_fo_DEQ,
       lower_merges_fo_EMPTY_N,
       lower_merges_fo_ENQ,
       lower_merges_fo_FULL_N;

  // ports of submodule lower_upper_lower_f
  wire [609 : 0] lower_upper_lower_f_D_IN, lower_upper_lower_f_D_OUT;
  wire lower_upper_lower_f_CLR,
       lower_upper_lower_f_DEQ,
       lower_upper_lower_f_EMPTY_N,
       lower_upper_lower_f_ENQ,
       lower_upper_lower_f_FULL_N;

  // ports of submodule lower_upper_merges_1_fi0
  wire [609 : 0] lower_upper_merges_1_fi0_D_IN,
		 lower_upper_merges_1_fi0_D_OUT;
  wire lower_upper_merges_1_fi0_CLR,
       lower_upper_merges_1_fi0_DEQ,
       lower_upper_merges_1_fi0_EMPTY_N,
       lower_upper_merges_1_fi0_ENQ,
       lower_upper_merges_1_fi0_FULL_N;

  // ports of submodule lower_upper_merges_1_fi1
  wire [609 : 0] lower_upper_merges_1_fi1_D_IN,
		 lower_upper_merges_1_fi1_D_OUT;
  wire lower_upper_merges_1_fi1_CLR,
       lower_upper_merges_1_fi1_DEQ,
       lower_upper_merges_1_fi1_EMPTY_N,
       lower_upper_merges_1_fi1_ENQ,
       lower_upper_merges_1_fi1_FULL_N;

  // ports of submodule lower_upper_merges_1_fo
  reg [609 : 0] lower_upper_merges_1_fo_D_IN;
  wire [609 : 0] lower_upper_merges_1_fo_D_OUT;
  wire lower_upper_merges_1_fo_CLR,
       lower_upper_merges_1_fo_DEQ,
       lower_upper_merges_1_fo_EMPTY_N,
       lower_upper_merges_1_fo_ENQ,
       lower_upper_merges_1_fo_FULL_N;

  // ports of submodule lower_upper_merges_fi0
  wire [609 : 0] lower_upper_merges_fi0_D_IN, lower_upper_merges_fi0_D_OUT;
  wire lower_upper_merges_fi0_CLR,
       lower_upper_merges_fi0_DEQ,
       lower_upper_merges_fi0_EMPTY_N,
       lower_upper_merges_fi0_ENQ,
       lower_upper_merges_fi0_FULL_N;

  // ports of submodule lower_upper_merges_fi1
  wire [609 : 0] lower_upper_merges_fi1_D_IN, lower_upper_merges_fi1_D_OUT;
  wire lower_upper_merges_fi1_CLR,
       lower_upper_merges_fi1_DEQ,
       lower_upper_merges_fi1_EMPTY_N,
       lower_upper_merges_fi1_ENQ,
       lower_upper_merges_fi1_FULL_N;

  // ports of submodule lower_upper_merges_fo
  reg [609 : 0] lower_upper_merges_fo_D_IN;
  wire [609 : 0] lower_upper_merges_fo_D_OUT;
  wire lower_upper_merges_fo_CLR,
       lower_upper_merges_fo_DEQ,
       lower_upper_merges_fo_EMPTY_N,
       lower_upper_merges_fo_ENQ,
       lower_upper_merges_fo_FULL_N;

  // ports of submodule lower_upper_upper_f
  wire [609 : 0] lower_upper_upper_f_D_IN, lower_upper_upper_f_D_OUT;
  wire lower_upper_upper_f_CLR,
       lower_upper_upper_f_DEQ,
       lower_upper_upper_f_EMPTY_N,
       lower_upper_upper_f_ENQ,
       lower_upper_upper_f_FULL_N;

  // ports of submodule merges_1_fi0
  wire [609 : 0] merges_1_fi0_D_IN, merges_1_fi0_D_OUT;
  wire merges_1_fi0_CLR,
       merges_1_fi0_DEQ,
       merges_1_fi0_EMPTY_N,
       merges_1_fi0_ENQ,
       merges_1_fi0_FULL_N;

  // ports of submodule merges_1_fi1
  wire [609 : 0] merges_1_fi1_D_IN, merges_1_fi1_D_OUT;
  wire merges_1_fi1_CLR,
       merges_1_fi1_DEQ,
       merges_1_fi1_EMPTY_N,
       merges_1_fi1_ENQ,
       merges_1_fi1_FULL_N;

  // ports of submodule merges_1_fo
  reg [609 : 0] merges_1_fo_D_IN;
  wire [609 : 0] merges_1_fo_D_OUT;
  wire merges_1_fo_CLR,
       merges_1_fo_DEQ,
       merges_1_fo_EMPTY_N,
       merges_1_fo_ENQ,
       merges_1_fo_FULL_N;

  // ports of submodule merges_2_fi0
  wire [609 : 0] merges_2_fi0_D_IN, merges_2_fi0_D_OUT;
  wire merges_2_fi0_CLR,
       merges_2_fi0_DEQ,
       merges_2_fi0_EMPTY_N,
       merges_2_fi0_ENQ,
       merges_2_fi0_FULL_N;

  // ports of submodule merges_2_fi1
  wire [609 : 0] merges_2_fi1_D_IN, merges_2_fi1_D_OUT;
  wire merges_2_fi1_CLR,
       merges_2_fi1_DEQ,
       merges_2_fi1_EMPTY_N,
       merges_2_fi1_ENQ,
       merges_2_fi1_FULL_N;

  // ports of submodule merges_2_fo
  reg [609 : 0] merges_2_fo_D_IN;
  wire [609 : 0] merges_2_fo_D_OUT;
  wire merges_2_fo_CLR,
       merges_2_fo_DEQ,
       merges_2_fo_EMPTY_N,
       merges_2_fo_ENQ,
       merges_2_fo_FULL_N;

  // ports of submodule merges_3_fi0
  wire [609 : 0] merges_3_fi0_D_IN, merges_3_fi0_D_OUT;
  wire merges_3_fi0_CLR,
       merges_3_fi0_DEQ,
       merges_3_fi0_EMPTY_N,
       merges_3_fi0_ENQ,
       merges_3_fi0_FULL_N;

  // ports of submodule merges_3_fi1
  wire [609 : 0] merges_3_fi1_D_IN, merges_3_fi1_D_OUT;
  wire merges_3_fi1_CLR,
       merges_3_fi1_DEQ,
       merges_3_fi1_EMPTY_N,
       merges_3_fi1_ENQ,
       merges_3_fi1_FULL_N;

  // ports of submodule merges_3_fo
  reg [609 : 0] merges_3_fo_D_IN;
  wire [609 : 0] merges_3_fo_D_OUT;
  wire merges_3_fo_CLR,
       merges_3_fo_DEQ,
       merges_3_fo_EMPTY_N,
       merges_3_fo_ENQ,
       merges_3_fo_FULL_N;

  // ports of submodule merges_4_fi0
  wire [609 : 0] merges_4_fi0_D_IN, merges_4_fi0_D_OUT;
  wire merges_4_fi0_CLR,
       merges_4_fi0_DEQ,
       merges_4_fi0_EMPTY_N,
       merges_4_fi0_ENQ,
       merges_4_fi0_FULL_N;

  // ports of submodule merges_4_fi1
  wire [609 : 0] merges_4_fi1_D_IN, merges_4_fi1_D_OUT;
  wire merges_4_fi1_CLR,
       merges_4_fi1_DEQ,
       merges_4_fi1_EMPTY_N,
       merges_4_fi1_ENQ,
       merges_4_fi1_FULL_N;

  // ports of submodule merges_4_fo
  reg [609 : 0] merges_4_fo_D_IN;
  wire [609 : 0] merges_4_fo_D_OUT;
  wire merges_4_fo_CLR,
       merges_4_fo_DEQ,
       merges_4_fo_EMPTY_N,
       merges_4_fo_ENQ,
       merges_4_fo_FULL_N;

  // ports of submodule merges_5_fi0
  wire [609 : 0] merges_5_fi0_D_IN, merges_5_fi0_D_OUT;
  wire merges_5_fi0_CLR,
       merges_5_fi0_DEQ,
       merges_5_fi0_EMPTY_N,
       merges_5_fi0_ENQ,
       merges_5_fi0_FULL_N;

  // ports of submodule merges_5_fi1
  wire [609 : 0] merges_5_fi1_D_IN, merges_5_fi1_D_OUT;
  wire merges_5_fi1_CLR,
       merges_5_fi1_DEQ,
       merges_5_fi1_EMPTY_N,
       merges_5_fi1_ENQ,
       merges_5_fi1_FULL_N;

  // ports of submodule merges_5_fo
  reg [609 : 0] merges_5_fo_D_IN;
  wire [609 : 0] merges_5_fo_D_OUT;
  wire merges_5_fo_CLR,
       merges_5_fo_DEQ,
       merges_5_fo_EMPTY_N,
       merges_5_fo_ENQ,
       merges_5_fo_FULL_N;

  // ports of submodule merges_6_fi0
  wire [609 : 0] merges_6_fi0_D_IN, merges_6_fi0_D_OUT;
  wire merges_6_fi0_CLR,
       merges_6_fi0_DEQ,
       merges_6_fi0_EMPTY_N,
       merges_6_fi0_ENQ,
       merges_6_fi0_FULL_N;

  // ports of submodule merges_6_fi1
  wire [609 : 0] merges_6_fi1_D_IN, merges_6_fi1_D_OUT;
  wire merges_6_fi1_CLR,
       merges_6_fi1_DEQ,
       merges_6_fi1_EMPTY_N,
       merges_6_fi1_ENQ,
       merges_6_fi1_FULL_N;

  // ports of submodule merges_6_fo
  reg [609 : 0] merges_6_fo_D_IN;
  wire [609 : 0] merges_6_fo_D_OUT;
  wire merges_6_fo_CLR,
       merges_6_fo_DEQ,
       merges_6_fo_EMPTY_N,
       merges_6_fo_ENQ,
       merges_6_fo_FULL_N;

  // ports of submodule merges_7_fi0
  wire [609 : 0] merges_7_fi0_D_IN, merges_7_fi0_D_OUT;
  wire merges_7_fi0_CLR,
       merges_7_fi0_DEQ,
       merges_7_fi0_EMPTY_N,
       merges_7_fi0_ENQ,
       merges_7_fi0_FULL_N;

  // ports of submodule merges_7_fi1
  wire [609 : 0] merges_7_fi1_D_IN, merges_7_fi1_D_OUT;
  wire merges_7_fi1_CLR,
       merges_7_fi1_DEQ,
       merges_7_fi1_EMPTY_N,
       merges_7_fi1_ENQ,
       merges_7_fi1_FULL_N;

  // ports of submodule merges_7_fo
  reg [609 : 0] merges_7_fo_D_IN;
  wire [609 : 0] merges_7_fo_D_OUT;
  wire merges_7_fo_CLR,
       merges_7_fo_DEQ,
       merges_7_fo_EMPTY_N,
       merges_7_fo_ENQ,
       merges_7_fo_FULL_N;

  // ports of submodule merges_fi0
  wire [609 : 0] merges_fi0_D_IN, merges_fi0_D_OUT;
  wire merges_fi0_CLR,
       merges_fi0_DEQ,
       merges_fi0_EMPTY_N,
       merges_fi0_ENQ,
       merges_fi0_FULL_N;

  // ports of submodule merges_fi1
  wire [609 : 0] merges_fi1_D_IN, merges_fi1_D_OUT;
  wire merges_fi1_CLR,
       merges_fi1_DEQ,
       merges_fi1_EMPTY_N,
       merges_fi1_ENQ,
       merges_fi1_FULL_N;

  // ports of submodule merges_fo
  reg [609 : 0] merges_fo_D_IN;
  wire [609 : 0] merges_fo_D_OUT;
  wire merges_fo_CLR,
       merges_fo_DEQ,
       merges_fo_EMPTY_N,
       merges_fo_ENQ,
       merges_fo_FULL_N;

  // ports of submodule upper_lower_lower_f
  wire [609 : 0] upper_lower_lower_f_D_IN, upper_lower_lower_f_D_OUT;
  wire upper_lower_lower_f_CLR,
       upper_lower_lower_f_DEQ,
       upper_lower_lower_f_EMPTY_N,
       upper_lower_lower_f_ENQ,
       upper_lower_lower_f_FULL_N;

  // ports of submodule upper_lower_merges_1_fi0
  wire [609 : 0] upper_lower_merges_1_fi0_D_IN,
		 upper_lower_merges_1_fi0_D_OUT;
  wire upper_lower_merges_1_fi0_CLR,
       upper_lower_merges_1_fi0_DEQ,
       upper_lower_merges_1_fi0_EMPTY_N,
       upper_lower_merges_1_fi0_ENQ,
       upper_lower_merges_1_fi0_FULL_N;

  // ports of submodule upper_lower_merges_1_fi1
  wire [609 : 0] upper_lower_merges_1_fi1_D_IN,
		 upper_lower_merges_1_fi1_D_OUT;
  wire upper_lower_merges_1_fi1_CLR,
       upper_lower_merges_1_fi1_DEQ,
       upper_lower_merges_1_fi1_EMPTY_N,
       upper_lower_merges_1_fi1_ENQ,
       upper_lower_merges_1_fi1_FULL_N;

  // ports of submodule upper_lower_merges_1_fo
  reg [609 : 0] upper_lower_merges_1_fo_D_IN;
  wire [609 : 0] upper_lower_merges_1_fo_D_OUT;
  wire upper_lower_merges_1_fo_CLR,
       upper_lower_merges_1_fo_DEQ,
       upper_lower_merges_1_fo_EMPTY_N,
       upper_lower_merges_1_fo_ENQ,
       upper_lower_merges_1_fo_FULL_N;

  // ports of submodule upper_lower_merges_fi0
  wire [609 : 0] upper_lower_merges_fi0_D_IN, upper_lower_merges_fi0_D_OUT;
  wire upper_lower_merges_fi0_CLR,
       upper_lower_merges_fi0_DEQ,
       upper_lower_merges_fi0_EMPTY_N,
       upper_lower_merges_fi0_ENQ,
       upper_lower_merges_fi0_FULL_N;

  // ports of submodule upper_lower_merges_fi1
  wire [609 : 0] upper_lower_merges_fi1_D_IN, upper_lower_merges_fi1_D_OUT;
  wire upper_lower_merges_fi1_CLR,
       upper_lower_merges_fi1_DEQ,
       upper_lower_merges_fi1_EMPTY_N,
       upper_lower_merges_fi1_ENQ,
       upper_lower_merges_fi1_FULL_N;

  // ports of submodule upper_lower_merges_fo
  reg [609 : 0] upper_lower_merges_fo_D_IN;
  wire [609 : 0] upper_lower_merges_fo_D_OUT;
  wire upper_lower_merges_fo_CLR,
       upper_lower_merges_fo_DEQ,
       upper_lower_merges_fo_EMPTY_N,
       upper_lower_merges_fo_ENQ,
       upper_lower_merges_fo_FULL_N;

  // ports of submodule upper_lower_upper_f
  wire [609 : 0] upper_lower_upper_f_D_IN, upper_lower_upper_f_D_OUT;
  wire upper_lower_upper_f_CLR,
       upper_lower_upper_f_DEQ,
       upper_lower_upper_f_EMPTY_N,
       upper_lower_upper_f_ENQ,
       upper_lower_upper_f_FULL_N;

  // ports of submodule upper_merges_1_fi0
  wire [609 : 0] upper_merges_1_fi0_D_IN, upper_merges_1_fi0_D_OUT;
  wire upper_merges_1_fi0_CLR,
       upper_merges_1_fi0_DEQ,
       upper_merges_1_fi0_EMPTY_N,
       upper_merges_1_fi0_ENQ,
       upper_merges_1_fi0_FULL_N;

  // ports of submodule upper_merges_1_fi1
  wire [609 : 0] upper_merges_1_fi1_D_IN, upper_merges_1_fi1_D_OUT;
  wire upper_merges_1_fi1_CLR,
       upper_merges_1_fi1_DEQ,
       upper_merges_1_fi1_EMPTY_N,
       upper_merges_1_fi1_ENQ,
       upper_merges_1_fi1_FULL_N;

  // ports of submodule upper_merges_1_fo
  reg [609 : 0] upper_merges_1_fo_D_IN;
  wire [609 : 0] upper_merges_1_fo_D_OUT;
  wire upper_merges_1_fo_CLR,
       upper_merges_1_fo_DEQ,
       upper_merges_1_fo_EMPTY_N,
       upper_merges_1_fo_ENQ,
       upper_merges_1_fo_FULL_N;

  // ports of submodule upper_merges_2_fi0
  wire [609 : 0] upper_merges_2_fi0_D_IN, upper_merges_2_fi0_D_OUT;
  wire upper_merges_2_fi0_CLR,
       upper_merges_2_fi0_DEQ,
       upper_merges_2_fi0_EMPTY_N,
       upper_merges_2_fi0_ENQ,
       upper_merges_2_fi0_FULL_N;

  // ports of submodule upper_merges_2_fi1
  wire [609 : 0] upper_merges_2_fi1_D_IN, upper_merges_2_fi1_D_OUT;
  wire upper_merges_2_fi1_CLR,
       upper_merges_2_fi1_DEQ,
       upper_merges_2_fi1_EMPTY_N,
       upper_merges_2_fi1_ENQ,
       upper_merges_2_fi1_FULL_N;

  // ports of submodule upper_merges_2_fo
  reg [609 : 0] upper_merges_2_fo_D_IN;
  wire [609 : 0] upper_merges_2_fo_D_OUT;
  wire upper_merges_2_fo_CLR,
       upper_merges_2_fo_DEQ,
       upper_merges_2_fo_EMPTY_N,
       upper_merges_2_fo_ENQ,
       upper_merges_2_fo_FULL_N;

  // ports of submodule upper_merges_3_fi0
  wire [609 : 0] upper_merges_3_fi0_D_IN, upper_merges_3_fi0_D_OUT;
  wire upper_merges_3_fi0_CLR,
       upper_merges_3_fi0_DEQ,
       upper_merges_3_fi0_EMPTY_N,
       upper_merges_3_fi0_ENQ,
       upper_merges_3_fi0_FULL_N;

  // ports of submodule upper_merges_3_fi1
  wire [609 : 0] upper_merges_3_fi1_D_IN, upper_merges_3_fi1_D_OUT;
  wire upper_merges_3_fi1_CLR,
       upper_merges_3_fi1_DEQ,
       upper_merges_3_fi1_EMPTY_N,
       upper_merges_3_fi1_ENQ,
       upper_merges_3_fi1_FULL_N;

  // ports of submodule upper_merges_3_fo
  reg [609 : 0] upper_merges_3_fo_D_IN;
  wire [609 : 0] upper_merges_3_fo_D_OUT;
  wire upper_merges_3_fo_CLR,
       upper_merges_3_fo_DEQ,
       upper_merges_3_fo_EMPTY_N,
       upper_merges_3_fo_ENQ,
       upper_merges_3_fo_FULL_N;

  // ports of submodule upper_merges_fi0
  wire [609 : 0] upper_merges_fi0_D_IN, upper_merges_fi0_D_OUT;
  wire upper_merges_fi0_CLR,
       upper_merges_fi0_DEQ,
       upper_merges_fi0_EMPTY_N,
       upper_merges_fi0_ENQ,
       upper_merges_fi0_FULL_N;

  // ports of submodule upper_merges_fi1
  wire [609 : 0] upper_merges_fi1_D_IN, upper_merges_fi1_D_OUT;
  wire upper_merges_fi1_CLR,
       upper_merges_fi1_DEQ,
       upper_merges_fi1_EMPTY_N,
       upper_merges_fi1_ENQ,
       upper_merges_fi1_FULL_N;

  // ports of submodule upper_merges_fo
  reg [609 : 0] upper_merges_fo_D_IN;
  wire [609 : 0] upper_merges_fo_D_OUT;
  wire upper_merges_fo_CLR,
       upper_merges_fo_DEQ,
       upper_merges_fo_EMPTY_N,
       upper_merges_fo_ENQ,
       upper_merges_fo_FULL_N;

  // ports of submodule upper_upper_lower_f
  wire [609 : 0] upper_upper_lower_f_D_IN, upper_upper_lower_f_D_OUT;
  wire upper_upper_lower_f_CLR,
       upper_upper_lower_f_DEQ,
       upper_upper_lower_f_EMPTY_N,
       upper_upper_lower_f_ENQ,
       upper_upper_lower_f_FULL_N;

  // ports of submodule upper_upper_merges_1_fi0
  wire [609 : 0] upper_upper_merges_1_fi0_D_IN,
		 upper_upper_merges_1_fi0_D_OUT;
  wire upper_upper_merges_1_fi0_CLR,
       upper_upper_merges_1_fi0_DEQ,
       upper_upper_merges_1_fi0_EMPTY_N,
       upper_upper_merges_1_fi0_ENQ,
       upper_upper_merges_1_fi0_FULL_N;

  // ports of submodule upper_upper_merges_1_fi1
  wire [609 : 0] upper_upper_merges_1_fi1_D_IN,
		 upper_upper_merges_1_fi1_D_OUT;
  wire upper_upper_merges_1_fi1_CLR,
       upper_upper_merges_1_fi1_DEQ,
       upper_upper_merges_1_fi1_EMPTY_N,
       upper_upper_merges_1_fi1_ENQ,
       upper_upper_merges_1_fi1_FULL_N;

  // ports of submodule upper_upper_merges_1_fo
  reg [609 : 0] upper_upper_merges_1_fo_D_IN;
  wire [609 : 0] upper_upper_merges_1_fo_D_OUT;
  wire upper_upper_merges_1_fo_CLR,
       upper_upper_merges_1_fo_DEQ,
       upper_upper_merges_1_fo_EMPTY_N,
       upper_upper_merges_1_fo_ENQ,
       upper_upper_merges_1_fo_FULL_N;

  // ports of submodule upper_upper_merges_fi0
  wire [609 : 0] upper_upper_merges_fi0_D_IN, upper_upper_merges_fi0_D_OUT;
  wire upper_upper_merges_fi0_CLR,
       upper_upper_merges_fi0_DEQ,
       upper_upper_merges_fi0_EMPTY_N,
       upper_upper_merges_fi0_ENQ,
       upper_upper_merges_fi0_FULL_N;

  // ports of submodule upper_upper_merges_fi1
  wire [609 : 0] upper_upper_merges_fi1_D_IN, upper_upper_merges_fi1_D_OUT;
  wire upper_upper_merges_fi1_CLR,
       upper_upper_merges_fi1_DEQ,
       upper_upper_merges_fi1_EMPTY_N,
       upper_upper_merges_fi1_ENQ,
       upper_upper_merges_fi1_FULL_N;

  // ports of submodule upper_upper_merges_fo
  reg [609 : 0] upper_upper_merges_fo_D_IN;
  wire [609 : 0] upper_upper_merges_fo_D_OUT;
  wire upper_upper_merges_fo_CLR,
       upper_upper_merges_fo_DEQ,
       upper_upper_merges_fo_EMPTY_N,
       upper_upper_merges_fo_ENQ,
       upper_upper_merges_fo_FULL_N;

  // ports of submodule upper_upper_upper_f
  wire [609 : 0] upper_upper_upper_f_D_IN, upper_upper_upper_f_D_OUT;
  wire upper_upper_upper_f_CLR,
       upper_upper_upper_f_DEQ,
       upper_upper_upper_f_EMPTY_N,
       upper_upper_upper_f_ENQ,
       upper_upper_upper_f_FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_lower_lower_merges_1_both_have_data,
       WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty,
       WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty,
       WILL_FIRE_RL_lower_lower_merges_both_have_data,
       WILL_FIRE_RL_lower_lower_merges_fi0_is_empty,
       WILL_FIRE_RL_lower_lower_merges_fi1_is_empty,
       WILL_FIRE_RL_lower_lower_route,
       WILL_FIRE_RL_lower_lower_route_1,
       WILL_FIRE_RL_lower_merges_1_both_have_data,
       WILL_FIRE_RL_lower_merges_1_fi0_is_empty,
       WILL_FIRE_RL_lower_merges_1_fi1_is_empty,
       WILL_FIRE_RL_lower_merges_2_both_have_data,
       WILL_FIRE_RL_lower_merges_2_fi0_is_empty,
       WILL_FIRE_RL_lower_merges_2_fi1_is_empty,
       WILL_FIRE_RL_lower_merges_3_both_have_data,
       WILL_FIRE_RL_lower_merges_3_fi0_is_empty,
       WILL_FIRE_RL_lower_merges_3_fi1_is_empty,
       WILL_FIRE_RL_lower_merges_both_have_data,
       WILL_FIRE_RL_lower_merges_fi0_is_empty,
       WILL_FIRE_RL_lower_merges_fi1_is_empty,
       WILL_FIRE_RL_lower_route,
       WILL_FIRE_RL_lower_route_1,
       WILL_FIRE_RL_lower_route_2,
       WILL_FIRE_RL_lower_route_3,
       WILL_FIRE_RL_lower_upper_merges_1_both_have_data,
       WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty,
       WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty,
       WILL_FIRE_RL_lower_upper_merges_both_have_data,
       WILL_FIRE_RL_lower_upper_merges_fi0_is_empty,
       WILL_FIRE_RL_lower_upper_merges_fi1_is_empty,
       WILL_FIRE_RL_lower_upper_route,
       WILL_FIRE_RL_lower_upper_route_1,
       WILL_FIRE_RL_merges_1_both_have_data,
       WILL_FIRE_RL_merges_1_fi0_is_empty,
       WILL_FIRE_RL_merges_1_fi1_is_empty,
       WILL_FIRE_RL_merges_2_both_have_data,
       WILL_FIRE_RL_merges_2_fi0_is_empty,
       WILL_FIRE_RL_merges_2_fi1_is_empty,
       WILL_FIRE_RL_merges_3_both_have_data,
       WILL_FIRE_RL_merges_3_fi0_is_empty,
       WILL_FIRE_RL_merges_3_fi1_is_empty,
       WILL_FIRE_RL_merges_4_both_have_data,
       WILL_FIRE_RL_merges_4_fi0_is_empty,
       WILL_FIRE_RL_merges_4_fi1_is_empty,
       WILL_FIRE_RL_merges_5_both_have_data,
       WILL_FIRE_RL_merges_5_fi0_is_empty,
       WILL_FIRE_RL_merges_5_fi1_is_empty,
       WILL_FIRE_RL_merges_6_both_have_data,
       WILL_FIRE_RL_merges_6_fi0_is_empty,
       WILL_FIRE_RL_merges_6_fi1_is_empty,
       WILL_FIRE_RL_merges_7_both_have_data,
       WILL_FIRE_RL_merges_7_fi0_is_empty,
       WILL_FIRE_RL_merges_7_fi1_is_empty,
       WILL_FIRE_RL_merges_both_have_data,
       WILL_FIRE_RL_merges_fi0_is_empty,
       WILL_FIRE_RL_merges_fi1_is_empty,
       WILL_FIRE_RL_route,
       WILL_FIRE_RL_route_1,
       WILL_FIRE_RL_route_2,
       WILL_FIRE_RL_route_3,
       WILL_FIRE_RL_route_4,
       WILL_FIRE_RL_route_5,
       WILL_FIRE_RL_route_6,
       WILL_FIRE_RL_route_7,
       WILL_FIRE_RL_upper_lower_merges_1_both_have_data,
       WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty,
       WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty,
       WILL_FIRE_RL_upper_lower_merges_both_have_data,
       WILL_FIRE_RL_upper_lower_merges_fi0_is_empty,
       WILL_FIRE_RL_upper_lower_merges_fi1_is_empty,
       WILL_FIRE_RL_upper_lower_route,
       WILL_FIRE_RL_upper_lower_route_1,
       WILL_FIRE_RL_upper_merges_1_both_have_data,
       WILL_FIRE_RL_upper_merges_1_fi0_is_empty,
       WILL_FIRE_RL_upper_merges_1_fi1_is_empty,
       WILL_FIRE_RL_upper_merges_2_both_have_data,
       WILL_FIRE_RL_upper_merges_2_fi0_is_empty,
       WILL_FIRE_RL_upper_merges_2_fi1_is_empty,
       WILL_FIRE_RL_upper_merges_3_both_have_data,
       WILL_FIRE_RL_upper_merges_3_fi0_is_empty,
       WILL_FIRE_RL_upper_merges_3_fi1_is_empty,
       WILL_FIRE_RL_upper_merges_both_have_data,
       WILL_FIRE_RL_upper_merges_fi0_is_empty,
       WILL_FIRE_RL_upper_merges_fi1_is_empty,
       WILL_FIRE_RL_upper_route,
       WILL_FIRE_RL_upper_route_1,
       WILL_FIRE_RL_upper_route_2,
       WILL_FIRE_RL_upper_route_3,
       WILL_FIRE_RL_upper_upper_merges_1_both_have_data,
       WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty,
       WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty,
       WILL_FIRE_RL_upper_upper_merges_both_have_data,
       WILL_FIRE_RL_upper_upper_merges_fi0_is_empty,
       WILL_FIRE_RL_upper_upper_merges_fi1_is_empty,
       WILL_FIRE_RL_upper_upper_route,
       WILL_FIRE_RL_upper_upper_route_1;

  // inputs to muxes for submodule ports
  wire [609 : 0] MUX_lower_lower_merges_1_fo_enq_1__VAL_1,
		 MUX_lower_lower_merges_fo_enq_1__VAL_1,
		 MUX_lower_merges_1_fo_enq_1__VAL_1,
		 MUX_lower_merges_2_fo_enq_1__VAL_1,
		 MUX_lower_merges_3_fo_enq_1__VAL_1,
		 MUX_lower_merges_fo_enq_1__VAL_1,
		 MUX_lower_upper_merges_1_fo_enq_1__VAL_1,
		 MUX_lower_upper_merges_fo_enq_1__VAL_1,
		 MUX_merges_1_fo_enq_1__VAL_1,
		 MUX_merges_2_fo_enq_1__VAL_1,
		 MUX_merges_3_fo_enq_1__VAL_1,
		 MUX_merges_4_fo_enq_1__VAL_1,
		 MUX_merges_5_fo_enq_1__VAL_1,
		 MUX_merges_6_fo_enq_1__VAL_1,
		 MUX_merges_7_fo_enq_1__VAL_1,
		 MUX_merges_fo_enq_1__VAL_1,
		 MUX_upper_lower_merges_1_fo_enq_1__VAL_1,
		 MUX_upper_lower_merges_fo_enq_1__VAL_1,
		 MUX_upper_merges_1_fo_enq_1__VAL_1,
		 MUX_upper_merges_2_fo_enq_1__VAL_1,
		 MUX_upper_merges_3_fo_enq_1__VAL_1,
		 MUX_upper_merges_fo_enq_1__VAL_1,
		 MUX_upper_upper_merges_1_fo_enq_1__VAL_1,
		 MUX_upper_upper_merges_fo_enq_1__VAL_1;
  wire MUX_lower_lower_merges_1_fi0HasPrio_write_1__SEL_1,
       MUX_lower_lower_merges_1_fo_enq_1__SEL_1,
       MUX_lower_lower_merges_fi0HasPrio_write_1__SEL_1,
       MUX_lower_lower_merges_fo_enq_1__SEL_1,
       MUX_lower_merges_1_fi0HasPrio_write_1__SEL_1,
       MUX_lower_merges_1_fo_enq_1__SEL_1,
       MUX_lower_merges_2_fi0HasPrio_write_1__SEL_1,
       MUX_lower_merges_2_fo_enq_1__SEL_1,
       MUX_lower_merges_3_fi0HasPrio_write_1__SEL_1,
       MUX_lower_merges_3_fo_enq_1__SEL_1,
       MUX_lower_merges_fi0HasPrio_write_1__SEL_1,
       MUX_lower_merges_fo_enq_1__SEL_1,
       MUX_lower_upper_merges_1_fi0HasPrio_write_1__SEL_1,
       MUX_lower_upper_merges_1_fo_enq_1__SEL_1,
       MUX_lower_upper_merges_fi0HasPrio_write_1__SEL_1,
       MUX_lower_upper_merges_fo_enq_1__SEL_1,
       MUX_merges_1_fi0HasPrio_write_1__SEL_1,
       MUX_merges_1_fo_enq_1__SEL_1,
       MUX_merges_2_fi0HasPrio_write_1__SEL_1,
       MUX_merges_2_fo_enq_1__SEL_1,
       MUX_merges_3_fi0HasPrio_write_1__SEL_1,
       MUX_merges_3_fo_enq_1__SEL_1,
       MUX_merges_4_fi0HasPrio_write_1__SEL_1,
       MUX_merges_4_fo_enq_1__SEL_1,
       MUX_merges_5_fi0HasPrio_write_1__SEL_1,
       MUX_merges_5_fo_enq_1__SEL_1,
       MUX_merges_6_fi0HasPrio_write_1__SEL_1,
       MUX_merges_6_fo_enq_1__SEL_1,
       MUX_merges_7_fi0HasPrio_write_1__SEL_1,
       MUX_merges_7_fo_enq_1__SEL_1,
       MUX_merges_fi0HasPrio_write_1__SEL_1,
       MUX_merges_fo_enq_1__SEL_1,
       MUX_upper_lower_merges_1_fi0HasPrio_write_1__SEL_1,
       MUX_upper_lower_merges_1_fo_enq_1__SEL_1,
       MUX_upper_lower_merges_fi0HasPrio_write_1__SEL_1,
       MUX_upper_lower_merges_fo_enq_1__SEL_1,
       MUX_upper_merges_1_fi0HasPrio_write_1__SEL_1,
       MUX_upper_merges_1_fo_enq_1__SEL_1,
       MUX_upper_merges_2_fi0HasPrio_write_1__SEL_1,
       MUX_upper_merges_2_fo_enq_1__SEL_1,
       MUX_upper_merges_3_fi0HasPrio_write_1__SEL_1,
       MUX_upper_merges_3_fo_enq_1__SEL_1,
       MUX_upper_merges_fi0HasPrio_write_1__SEL_1,
       MUX_upper_merges_fo_enq_1__SEL_1,
       MUX_upper_upper_merges_1_fi0HasPrio_write_1__SEL_1,
       MUX_upper_upper_merges_1_fo_enq_1__SEL_1,
       MUX_upper_upper_merges_fi0HasPrio_write_1__SEL_1,
       MUX_upper_upper_merges_fo_enq_1__SEL_1;

  // remaining internal signals
  reg [63 : 0] v__h10311,
	       v__h10377,
	       v__h1065,
	       v__h10991,
	       v__h11050,
	       v__h11424,
	       v__h11478,
	       v__h11872,
	       v__h11925,
	       v__h12298,
	       v__h12351,
	       v__h13418,
	       v__h13484,
	       v__h14464,
	       v__h14530,
	       v__h15113,
	       v__h15172,
	       v__h15529,
	       v__h15582,
	       v__h16624,
	       v__h16690,
	       v__h17670,
	       v__h17736,
	       v__h18319,
	       v__h18378,
	       v__h18735,
	       v__h18788,
	       v__h19592,
	       v__h19658,
	       v__h2045,
	       v__h20638,
	       v__h20704,
	       v__h2111,
	       v__h21684,
	       v__h21750,
	       v__h22730,
	       v__h22796,
	       v__h23410,
	       v__h23469,
	       v__h23843,
	       v__h23897,
	       v__h24291,
	       v__h24344,
	       v__h24717,
	       v__h24770,
	       v__h25583,
	       v__h25649,
	       v__h26629,
	       v__h26695,
	       v__h2694,
	       v__h2753,
	       v__h27675,
	       v__h27741,
	       v__h28721,
	       v__h28787,
	       v__h29767,
	       v__h29833,
	       v__h30813,
	       v__h30879,
	       v__h3110,
	       v__h3163,
	       v__h31859,
	       v__h31925,
	       v__h32905,
	       v__h32971,
	       v__h33609,
	       v__h33668,
	       v__h34048,
	       v__h34102,
	       v__h34494,
	       v__h34548,
	       v__h34952,
	       v__h35006,
	       v__h35436,
	       v__h35489,
	       v__h35874,
	       v__h35927,
	       v__h36324,
	       v__h36377,
	       v__h36786,
	       v__h36839,
	       v__h4205,
	       v__h4271,
	       v__h5251,
	       v__h5317,
	       v__h5900,
	       v__h5959,
	       v__h6316,
	       v__h6369,
	       v__h7173,
	       v__h7239,
	       v__h8219,
	       v__h8285,
	       v__h9265,
	       v__h9331,
	       v__h998;
  wire IF_lower_lower_merges_1_fi0HasPrio_58_THEN_NOT_ETC___d965,
       IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d966,
       IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d979,
       IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d991,
       IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d996,
       IF_lower_lower_merges_1_routeFrom_53_BIT_0_55__ETC___d986,
       IF_lower_lower_merges_fi0HasPrio_83_THEN_NOT_l_ETC___d890,
       IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d891,
       IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d904,
       IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d916,
       IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d921,
       IF_lower_lower_merges_routeFrom_78_BIT_0_80_TH_ETC___d911,
       IF_lower_merges_1_fi0HasPrio_130_THEN_NOT_lowe_ETC___d1137,
       IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1138,
       IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1151,
       IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1163,
       IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1168,
       IF_lower_merges_1_routeFrom_125_BIT_0_127_THEN_ETC___d1158,
       IF_lower_merges_2_fi0HasPrio_205_THEN_NOT_lowe_ETC___d1212,
       IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1213,
       IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1226,
       IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1238,
       IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1243,
       IF_lower_merges_2_routeFrom_200_BIT_0_202_THEN_ETC___d1233,
       IF_lower_merges_3_fi0HasPrio_280_THEN_NOT_lowe_ETC___d1287,
       IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1288,
       IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1301,
       IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1313,
       IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1318,
       IF_lower_merges_3_routeFrom_275_BIT_0_277_THEN_ETC___d1308,
       IF_lower_merges_fi0HasPrio_055_THEN_NOT_lower__ETC___d1062,
       IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1063,
       IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1076,
       IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1088,
       IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1093,
       IF_lower_merges_routeFrom_050_BIT_0_052_THEN_l_ETC___d1083,
       IF_lower_upper_merges_1_fi0HasPrio_86_THEN_NOT_ETC___d793,
       IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d794,
       IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d807,
       IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d819,
       IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d824,
       IF_lower_upper_merges_1_routeFrom_81_BIT_0_83__ETC___d814,
       IF_lower_upper_merges_fi0HasPrio_11_THEN_NOT_l_ETC___d718,
       IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d719,
       IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d732,
       IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d744,
       IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d749,
       IF_lower_upper_merges_routeFrom_06_BIT_0_08_TH_ETC___d739,
       IF_merges_1_fi0HasPrio_474_THEN_NOT_merges_1_f_ETC___d1481,
       IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1495,
       IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1507,
       IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1512,
       IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_i_ETC___d1482,
       IF_merges_1_routeFrom_469_BIT_0_471_THEN_merge_ETC___d1502,
       IF_merges_2_fi0HasPrio_549_THEN_NOT_merges_2_f_ETC___d1556,
       IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1570,
       IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1582,
       IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1587,
       IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_i_ETC___d1557,
       IF_merges_2_routeFrom_544_BIT_0_546_THEN_merge_ETC___d1577,
       IF_merges_3_fi0HasPrio_624_THEN_NOT_merges_3_f_ETC___d1631,
       IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1645,
       IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1657,
       IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1662,
       IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_i_ETC___d1632,
       IF_merges_3_routeFrom_619_BIT_0_621_THEN_merge_ETC___d1652,
       IF_merges_4_fi0HasPrio_699_THEN_NOT_merges_4_f_ETC___d1706,
       IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1720,
       IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1732,
       IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1737,
       IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_i_ETC___d1707,
       IF_merges_4_routeFrom_694_BIT_0_696_THEN_merge_ETC___d1727,
       IF_merges_5_fi0HasPrio_774_THEN_NOT_merges_5_f_ETC___d1781,
       IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1795,
       IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1807,
       IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1812,
       IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_i_ETC___d1782,
       IF_merges_5_routeFrom_769_BIT_0_771_THEN_merge_ETC___d1802,
       IF_merges_6_fi0HasPrio_849_THEN_NOT_merges_6_f_ETC___d1856,
       IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1870,
       IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1882,
       IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1887,
       IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_i_ETC___d1857,
       IF_merges_6_routeFrom_844_BIT_0_846_THEN_merge_ETC___d1877,
       IF_merges_7_fi0HasPrio_924_THEN_NOT_merges_7_f_ETC___d1931,
       IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1945,
       IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1957,
       IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1962,
       IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_i_ETC___d1932,
       IF_merges_7_routeFrom_919_BIT_0_921_THEN_merge_ETC___d1952,
       IF_merges_fi0HasPrio_399_THEN_NOT_merges_fi0_f_ETC___d1406,
       IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1420,
       IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1432,
       IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1437,
       IF_merges_fi0HasPrio_399_THEN_merges_fi0_i_not_ETC___d1407,
       IF_merges_routeFrom_394_BIT_0_396_THEN_merges__ETC___d1427,
       IF_upper_lower_merges_1_fi0HasPrio_68_THEN_NOT_ETC___d275,
       IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d276,
       IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d289,
       IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d301,
       IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d306,
       IF_upper_lower_merges_1_routeFrom_63_BIT_0_65__ETC___d296,
       IF_upper_lower_merges_fi0HasPrio_93_THEN_NOT_u_ETC___d200,
       IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d201,
       IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d214,
       IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d226,
       IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d231,
       IF_upper_lower_merges_routeFrom_88_BIT_0_90_TH_ETC___d221,
       IF_upper_merges_1_fi0HasPrio_40_THEN_NOT_upper_ETC___d447,
       IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d448,
       IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d461,
       IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d473,
       IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d478,
       IF_upper_merges_1_routeFrom_35_BIT_0_37_THEN_u_ETC___d468,
       IF_upper_merges_2_fi0HasPrio_15_THEN_NOT_upper_ETC___d522,
       IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d523,
       IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d536,
       IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d548,
       IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d553,
       IF_upper_merges_2_routeFrom_10_BIT_0_12_THEN_u_ETC___d543,
       IF_upper_merges_3_fi0HasPrio_90_THEN_NOT_upper_ETC___d597,
       IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d598,
       IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d611,
       IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d623,
       IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d628,
       IF_upper_merges_3_routeFrom_85_BIT_0_87_THEN_u_ETC___d618,
       IF_upper_merges_fi0HasPrio_65_THEN_NOT_upper_m_ETC___d372,
       IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d373,
       IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d386,
       IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d398,
       IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d403,
       IF_upper_merges_routeFrom_60_BIT_0_62_THEN_upp_ETC___d393,
       IF_upper_upper_merges_1_fi0HasPrio_4_THEN_NOT__ETC___d101,
       IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d102,
       IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d115,
       IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d127,
       IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d132,
       IF_upper_upper_merges_1_routeFrom_9_BIT_0_1_TH_ETC___d122,
       IF_upper_upper_merges_fi0HasPrio_9_THEN_NOT_up_ETC___d26,
       IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d27,
       IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d40,
       IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d52,
       IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d57,
       IF_upper_upper_merges_routeFrom_4_BIT_0_6_THEN_ETC___d47,
       lower_lower_merges_1_fo_i_notFull__41_AND_IF_l_ETC___d957,
       lower_lower_merges_1_routeFrom_53_BIT_1_54_AND_ETC___d999,
       lower_lower_merges_fo_i_notFull__66_AND_IF_low_ETC___d882,
       lower_lower_merges_routeFrom_78_BIT_1_79_AND_I_ETC___d924,
       lower_merges_1_fo_i_notFull__113_AND_IF_lower__ETC___d1129,
       lower_merges_1_routeFrom_125_BIT_1_126_AND_IF__ETC___d1171,
       lower_merges_2_fo_i_notFull__188_AND_IF_lower__ETC___d1204,
       lower_merges_2_routeFrom_200_BIT_1_201_AND_IF__ETC___d1246,
       lower_merges_3_fo_i_notFull__263_AND_IF_lower__ETC___d1279,
       lower_merges_3_routeFrom_275_BIT_1_276_AND_IF__ETC___d1321,
       lower_merges_fo_i_notFull__038_AND_IF_lower_me_ETC___d1054,
       lower_merges_routeFrom_050_BIT_1_051_AND_IF_lo_ETC___d1096,
       lower_upper_merges_1_fo_i_notFull__69_AND_IF_l_ETC___d785,
       lower_upper_merges_1_routeFrom_81_BIT_1_82_AND_ETC___d827,
       lower_upper_merges_fo_i_notFull__94_AND_IF_low_ETC___d710,
       lower_upper_merges_routeFrom_06_BIT_1_07_AND_I_ETC___d752,
       merges_1_fo_i_notFull__457_AND_IF_merges_1_rou_ETC___d1473,
       merges_1_routeFrom_469_BIT_1_470_AND_IF_merges_ETC___d1515,
       merges_2_fo_i_notFull__532_AND_IF_merges_2_rou_ETC___d1548,
       merges_2_routeFrom_544_BIT_1_545_AND_IF_merges_ETC___d1590,
       merges_3_fo_i_notFull__607_AND_IF_merges_3_rou_ETC___d1623,
       merges_3_routeFrom_619_BIT_1_620_AND_IF_merges_ETC___d1665,
       merges_4_fo_i_notFull__682_AND_IF_merges_4_rou_ETC___d1698,
       merges_4_routeFrom_694_BIT_1_695_AND_IF_merges_ETC___d1740,
       merges_5_fo_i_notFull__757_AND_IF_merges_5_rou_ETC___d1773,
       merges_5_routeFrom_769_BIT_1_770_AND_IF_merges_ETC___d1815,
       merges_6_fo_i_notFull__832_AND_IF_merges_6_rou_ETC___d1848,
       merges_6_routeFrom_844_BIT_1_845_AND_IF_merges_ETC___d1890,
       merges_7_fo_i_notFull__907_AND_IF_merges_7_rou_ETC___d1923,
       merges_7_routeFrom_919_BIT_1_920_AND_IF_merges_ETC___d1965,
       merges_fo_i_notFull__382_AND_IF_merges_routeFr_ETC___d1398,
       merges_routeFrom_394_BIT_1_395_AND_IF_merges_r_ETC___d1440,
       upper_lower_merges_1_fo_i_notFull__51_AND_IF_u_ETC___d267,
       upper_lower_merges_1_routeFrom_63_BIT_1_64_AND_ETC___d309,
       upper_lower_merges_fo_i_notFull__76_AND_IF_upp_ETC___d192,
       upper_lower_merges_routeFrom_88_BIT_1_89_AND_I_ETC___d234,
       upper_merges_1_fo_i_notFull__23_AND_IF_upper_m_ETC___d439,
       upper_merges_1_routeFrom_35_BIT_1_36_AND_IF_up_ETC___d481,
       upper_merges_2_fo_i_notFull__98_AND_IF_upper_m_ETC___d514,
       upper_merges_2_routeFrom_10_BIT_1_11_AND_IF_up_ETC___d556,
       upper_merges_3_fo_i_notFull__73_AND_IF_upper_m_ETC___d589,
       upper_merges_3_routeFrom_85_BIT_1_86_AND_IF_up_ETC___d631,
       upper_merges_fo_i_notFull__48_AND_IF_upper_mer_ETC___d364,
       upper_merges_routeFrom_60_BIT_1_61_AND_IF_uppe_ETC___d406,
       upper_upper_merges_1_fo_i_notFull__7_AND_IF_up_ETC___d93,
       upper_upper_merges_1_routeFrom_9_BIT_1_0_AND_I_ETC___d135,
       upper_upper_merges_fo_i_notFull_AND_IF_upper_u_ETC___d18,
       upper_upper_merges_routeFrom_4_BIT_1_5_AND_IF__ETC___d60;

  // action method input_ports_0_put
  assign RDY_input_ports_0_put = upper_upper_upper_f_FULL_N ;

  // action method input_ports_1_put
  assign RDY_input_ports_1_put = upper_upper_lower_f_FULL_N ;

  // action method input_ports_2_put
  assign RDY_input_ports_2_put = upper_lower_upper_f_FULL_N ;

  // action method input_ports_3_put
  assign RDY_input_ports_3_put = upper_lower_lower_f_FULL_N ;

  // action method input_ports_4_put
  assign RDY_input_ports_4_put = lower_upper_upper_f_FULL_N ;

  // action method input_ports_5_put
  assign RDY_input_ports_5_put = lower_upper_lower_f_FULL_N ;

  // action method input_ports_6_put
  assign RDY_input_ports_6_put = lower_lower_upper_f_FULL_N ;

  // action method input_ports_7_put
  assign RDY_input_ports_7_put = lower_lower_lower_f_FULL_N ;

  // actionvalue method output_ports_0_get
  assign output_ports_0_get = merges_fo_D_OUT ;
  assign RDY_output_ports_0_get = merges_fo_EMPTY_N ;

  // actionvalue method output_ports_1_get
  assign output_ports_1_get = merges_1_fo_D_OUT ;
  assign RDY_output_ports_1_get = merges_1_fo_EMPTY_N ;

  // actionvalue method output_ports_2_get
  assign output_ports_2_get = merges_2_fo_D_OUT ;
  assign RDY_output_ports_2_get = merges_2_fo_EMPTY_N ;

  // actionvalue method output_ports_3_get
  assign output_ports_3_get = merges_3_fo_D_OUT ;
  assign RDY_output_ports_3_get = merges_3_fo_EMPTY_N ;

  // actionvalue method output_ports_4_get
  assign output_ports_4_get = merges_4_fo_D_OUT ;
  assign RDY_output_ports_4_get = merges_4_fo_EMPTY_N ;

  // actionvalue method output_ports_5_get
  assign output_ports_5_get = merges_5_fo_D_OUT ;
  assign RDY_output_ports_5_get = merges_5_fo_EMPTY_N ;

  // actionvalue method output_ports_6_get
  assign output_ports_6_get = merges_6_fo_D_OUT ;
  assign RDY_output_ports_6_get = merges_6_fo_EMPTY_N ;

  // actionvalue method output_ports_7_get
  assign output_ports_7_get = merges_7_fo_D_OUT ;
  assign RDY_output_ports_7_get = merges_7_fo_EMPTY_N ;

  // submodule lower_lower_lower_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_lower_lower_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(lower_lower_lower_f_D_IN),
								.ENQ(lower_lower_lower_f_ENQ),
								.DEQ(lower_lower_lower_f_DEQ),
								.CLR(lower_lower_lower_f_CLR),
								.D_OUT(lower_lower_lower_f_D_OUT),
								.FULL_N(lower_lower_lower_f_FULL_N),
								.EMPTY_N(lower_lower_lower_f_EMPTY_N));

  // submodule lower_lower_merges_1_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_lower_merges_1_fi0(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(lower_lower_merges_1_fi0_D_IN),
						    .ENQ(lower_lower_merges_1_fi0_ENQ),
						    .DEQ(lower_lower_merges_1_fi0_DEQ),
						    .CLR(lower_lower_merges_1_fi0_CLR),
						    .D_OUT(lower_lower_merges_1_fi0_D_OUT),
						    .FULL_N(lower_lower_merges_1_fi0_FULL_N),
						    .EMPTY_N(lower_lower_merges_1_fi0_EMPTY_N));

  // submodule lower_lower_merges_1_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_lower_merges_1_fi1(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(lower_lower_merges_1_fi1_D_IN),
						    .ENQ(lower_lower_merges_1_fi1_ENQ),
						    .DEQ(lower_lower_merges_1_fi1_DEQ),
						    .CLR(lower_lower_merges_1_fi1_CLR),
						    .D_OUT(lower_lower_merges_1_fi1_D_OUT),
						    .FULL_N(lower_lower_merges_1_fi1_FULL_N),
						    .EMPTY_N(lower_lower_merges_1_fi1_EMPTY_N));

  // submodule lower_lower_merges_1_fo
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_lower_merges_1_fo(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(lower_lower_merges_1_fo_D_IN),
						   .ENQ(lower_lower_merges_1_fo_ENQ),
						   .DEQ(lower_lower_merges_1_fo_DEQ),
						   .CLR(lower_lower_merges_1_fo_CLR),
						   .D_OUT(lower_lower_merges_1_fo_D_OUT),
						   .FULL_N(lower_lower_merges_1_fo_FULL_N),
						   .EMPTY_N(lower_lower_merges_1_fo_EMPTY_N));

  // submodule lower_lower_merges_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_lower_merges_fi0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(lower_lower_merges_fi0_D_IN),
						  .ENQ(lower_lower_merges_fi0_ENQ),
						  .DEQ(lower_lower_merges_fi0_DEQ),
						  .CLR(lower_lower_merges_fi0_CLR),
						  .D_OUT(lower_lower_merges_fi0_D_OUT),
						  .FULL_N(lower_lower_merges_fi0_FULL_N),
						  .EMPTY_N(lower_lower_merges_fi0_EMPTY_N));

  // submodule lower_lower_merges_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_lower_merges_fi1(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(lower_lower_merges_fi1_D_IN),
						  .ENQ(lower_lower_merges_fi1_ENQ),
						  .DEQ(lower_lower_merges_fi1_DEQ),
						  .CLR(lower_lower_merges_fi1_CLR),
						  .D_OUT(lower_lower_merges_fi1_D_OUT),
						  .FULL_N(lower_lower_merges_fi1_FULL_N),
						  .EMPTY_N(lower_lower_merges_fi1_EMPTY_N));

  // submodule lower_lower_merges_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_lower_merges_fo(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(lower_lower_merges_fo_D_IN),
								  .ENQ(lower_lower_merges_fo_ENQ),
								  .DEQ(lower_lower_merges_fo_DEQ),
								  .CLR(lower_lower_merges_fo_CLR),
								  .D_OUT(lower_lower_merges_fo_D_OUT),
								  .FULL_N(lower_lower_merges_fo_FULL_N),
								  .EMPTY_N(lower_lower_merges_fo_EMPTY_N));

  // submodule lower_lower_upper_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_lower_upper_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(lower_lower_upper_f_D_IN),
								.ENQ(lower_lower_upper_f_ENQ),
								.DEQ(lower_lower_upper_f_DEQ),
								.CLR(lower_lower_upper_f_CLR),
								.D_OUT(lower_lower_upper_f_D_OUT),
								.FULL_N(lower_lower_upper_f_FULL_N),
								.EMPTY_N(lower_lower_upper_f_EMPTY_N));

  // submodule lower_merges_1_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_1_fi0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(lower_merges_1_fi0_D_IN),
							       .ENQ(lower_merges_1_fi0_ENQ),
							       .DEQ(lower_merges_1_fi0_DEQ),
							       .CLR(lower_merges_1_fi0_CLR),
							       .D_OUT(lower_merges_1_fi0_D_OUT),
							       .FULL_N(lower_merges_1_fi0_FULL_N),
							       .EMPTY_N(lower_merges_1_fi0_EMPTY_N));

  // submodule lower_merges_1_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_1_fi1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(lower_merges_1_fi1_D_IN),
							       .ENQ(lower_merges_1_fi1_ENQ),
							       .DEQ(lower_merges_1_fi1_DEQ),
							       .CLR(lower_merges_1_fi1_CLR),
							       .D_OUT(lower_merges_1_fi1_D_OUT),
							       .FULL_N(lower_merges_1_fi1_FULL_N),
							       .EMPTY_N(lower_merges_1_fi1_EMPTY_N));

  // submodule lower_merges_1_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_1_fo(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(lower_merges_1_fo_D_IN),
							      .ENQ(lower_merges_1_fo_ENQ),
							      .DEQ(lower_merges_1_fo_DEQ),
							      .CLR(lower_merges_1_fo_CLR),
							      .D_OUT(lower_merges_1_fo_D_OUT),
							      .FULL_N(lower_merges_1_fo_FULL_N),
							      .EMPTY_N(lower_merges_1_fo_EMPTY_N));

  // submodule lower_merges_2_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_2_fi0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(lower_merges_2_fi0_D_IN),
							       .ENQ(lower_merges_2_fi0_ENQ),
							       .DEQ(lower_merges_2_fi0_DEQ),
							       .CLR(lower_merges_2_fi0_CLR),
							       .D_OUT(lower_merges_2_fi0_D_OUT),
							       .FULL_N(lower_merges_2_fi0_FULL_N),
							       .EMPTY_N(lower_merges_2_fi0_EMPTY_N));

  // submodule lower_merges_2_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_2_fi1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(lower_merges_2_fi1_D_IN),
							       .ENQ(lower_merges_2_fi1_ENQ),
							       .DEQ(lower_merges_2_fi1_DEQ),
							       .CLR(lower_merges_2_fi1_CLR),
							       .D_OUT(lower_merges_2_fi1_D_OUT),
							       .FULL_N(lower_merges_2_fi1_FULL_N),
							       .EMPTY_N(lower_merges_2_fi1_EMPTY_N));

  // submodule lower_merges_2_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_2_fo(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(lower_merges_2_fo_D_IN),
							      .ENQ(lower_merges_2_fo_ENQ),
							      .DEQ(lower_merges_2_fo_DEQ),
							      .CLR(lower_merges_2_fo_CLR),
							      .D_OUT(lower_merges_2_fo_D_OUT),
							      .FULL_N(lower_merges_2_fo_FULL_N),
							      .EMPTY_N(lower_merges_2_fo_EMPTY_N));

  // submodule lower_merges_3_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_3_fi0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(lower_merges_3_fi0_D_IN),
							       .ENQ(lower_merges_3_fi0_ENQ),
							       .DEQ(lower_merges_3_fi0_DEQ),
							       .CLR(lower_merges_3_fi0_CLR),
							       .D_OUT(lower_merges_3_fi0_D_OUT),
							       .FULL_N(lower_merges_3_fi0_FULL_N),
							       .EMPTY_N(lower_merges_3_fi0_EMPTY_N));

  // submodule lower_merges_3_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_3_fi1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(lower_merges_3_fi1_D_IN),
							       .ENQ(lower_merges_3_fi1_ENQ),
							       .DEQ(lower_merges_3_fi1_DEQ),
							       .CLR(lower_merges_3_fi1_CLR),
							       .D_OUT(lower_merges_3_fi1_D_OUT),
							       .FULL_N(lower_merges_3_fi1_FULL_N),
							       .EMPTY_N(lower_merges_3_fi1_EMPTY_N));

  // submodule lower_merges_3_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_3_fo(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(lower_merges_3_fo_D_IN),
							      .ENQ(lower_merges_3_fo_ENQ),
							      .DEQ(lower_merges_3_fo_DEQ),
							      .CLR(lower_merges_3_fo_CLR),
							      .D_OUT(lower_merges_3_fo_D_OUT),
							      .FULL_N(lower_merges_3_fo_FULL_N),
							      .EMPTY_N(lower_merges_3_fo_EMPTY_N));

  // submodule lower_merges_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_fi0(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(lower_merges_fi0_D_IN),
							     .ENQ(lower_merges_fi0_ENQ),
							     .DEQ(lower_merges_fi0_DEQ),
							     .CLR(lower_merges_fi0_CLR),
							     .D_OUT(lower_merges_fi0_D_OUT),
							     .FULL_N(lower_merges_fi0_FULL_N),
							     .EMPTY_N(lower_merges_fi0_EMPTY_N));

  // submodule lower_merges_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_fi1(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(lower_merges_fi1_D_IN),
							     .ENQ(lower_merges_fi1_ENQ),
							     .DEQ(lower_merges_fi1_DEQ),
							     .CLR(lower_merges_fi1_CLR),
							     .D_OUT(lower_merges_fi1_D_OUT),
							     .FULL_N(lower_merges_fi1_FULL_N),
							     .EMPTY_N(lower_merges_fi1_EMPTY_N));

  // submodule lower_merges_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_merges_fo(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(lower_merges_fo_D_IN),
							    .ENQ(lower_merges_fo_ENQ),
							    .DEQ(lower_merges_fo_DEQ),
							    .CLR(lower_merges_fo_CLR),
							    .D_OUT(lower_merges_fo_D_OUT),
							    .FULL_N(lower_merges_fo_FULL_N),
							    .EMPTY_N(lower_merges_fo_EMPTY_N));

  // submodule lower_upper_lower_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_upper_lower_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(lower_upper_lower_f_D_IN),
								.ENQ(lower_upper_lower_f_ENQ),
								.DEQ(lower_upper_lower_f_DEQ),
								.CLR(lower_upper_lower_f_CLR),
								.D_OUT(lower_upper_lower_f_D_OUT),
								.FULL_N(lower_upper_lower_f_FULL_N),
								.EMPTY_N(lower_upper_lower_f_EMPTY_N));

  // submodule lower_upper_merges_1_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_upper_merges_1_fi0(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(lower_upper_merges_1_fi0_D_IN),
						    .ENQ(lower_upper_merges_1_fi0_ENQ),
						    .DEQ(lower_upper_merges_1_fi0_DEQ),
						    .CLR(lower_upper_merges_1_fi0_CLR),
						    .D_OUT(lower_upper_merges_1_fi0_D_OUT),
						    .FULL_N(lower_upper_merges_1_fi0_FULL_N),
						    .EMPTY_N(lower_upper_merges_1_fi0_EMPTY_N));

  // submodule lower_upper_merges_1_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_upper_merges_1_fi1(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(lower_upper_merges_1_fi1_D_IN),
						    .ENQ(lower_upper_merges_1_fi1_ENQ),
						    .DEQ(lower_upper_merges_1_fi1_DEQ),
						    .CLR(lower_upper_merges_1_fi1_CLR),
						    .D_OUT(lower_upper_merges_1_fi1_D_OUT),
						    .FULL_N(lower_upper_merges_1_fi1_FULL_N),
						    .EMPTY_N(lower_upper_merges_1_fi1_EMPTY_N));

  // submodule lower_upper_merges_1_fo
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_upper_merges_1_fo(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(lower_upper_merges_1_fo_D_IN),
						   .ENQ(lower_upper_merges_1_fo_ENQ),
						   .DEQ(lower_upper_merges_1_fo_DEQ),
						   .CLR(lower_upper_merges_1_fo_CLR),
						   .D_OUT(lower_upper_merges_1_fo_D_OUT),
						   .FULL_N(lower_upper_merges_1_fo_FULL_N),
						   .EMPTY_N(lower_upper_merges_1_fo_EMPTY_N));

  // submodule lower_upper_merges_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_upper_merges_fi0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(lower_upper_merges_fi0_D_IN),
						  .ENQ(lower_upper_merges_fi0_ENQ),
						  .DEQ(lower_upper_merges_fi0_DEQ),
						  .CLR(lower_upper_merges_fi0_CLR),
						  .D_OUT(lower_upper_merges_fi0_D_OUT),
						  .FULL_N(lower_upper_merges_fi0_FULL_N),
						  .EMPTY_N(lower_upper_merges_fi0_EMPTY_N));

  // submodule lower_upper_merges_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) lower_upper_merges_fi1(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(lower_upper_merges_fi1_D_IN),
						  .ENQ(lower_upper_merges_fi1_ENQ),
						  .DEQ(lower_upper_merges_fi1_DEQ),
						  .CLR(lower_upper_merges_fi1_CLR),
						  .D_OUT(lower_upper_merges_fi1_D_OUT),
						  .FULL_N(lower_upper_merges_fi1_FULL_N),
						  .EMPTY_N(lower_upper_merges_fi1_EMPTY_N));

  // submodule lower_upper_merges_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_upper_merges_fo(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(lower_upper_merges_fo_D_IN),
								  .ENQ(lower_upper_merges_fo_ENQ),
								  .DEQ(lower_upper_merges_fo_DEQ),
								  .CLR(lower_upper_merges_fo_CLR),
								  .D_OUT(lower_upper_merges_fo_D_OUT),
								  .FULL_N(lower_upper_merges_fo_FULL_N),
								  .EMPTY_N(lower_upper_merges_fo_EMPTY_N));

  // submodule lower_upper_upper_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) lower_upper_upper_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(lower_upper_upper_f_D_IN),
								.ENQ(lower_upper_upper_f_ENQ),
								.DEQ(lower_upper_upper_f_DEQ),
								.CLR(lower_upper_upper_f_CLR),
								.D_OUT(lower_upper_upper_f_D_OUT),
								.FULL_N(lower_upper_upper_f_FULL_N),
								.EMPTY_N(lower_upper_upper_f_EMPTY_N));

  // submodule merges_1_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_1_fi0(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_1_fi0_D_IN),
							 .ENQ(merges_1_fi0_ENQ),
							 .DEQ(merges_1_fi0_DEQ),
							 .CLR(merges_1_fi0_CLR),
							 .D_OUT(merges_1_fi0_D_OUT),
							 .FULL_N(merges_1_fi0_FULL_N),
							 .EMPTY_N(merges_1_fi0_EMPTY_N));

  // submodule merges_1_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_1_fi1(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_1_fi1_D_IN),
							 .ENQ(merges_1_fi1_ENQ),
							 .DEQ(merges_1_fi1_DEQ),
							 .CLR(merges_1_fi1_CLR),
							 .D_OUT(merges_1_fi1_D_OUT),
							 .FULL_N(merges_1_fi1_FULL_N),
							 .EMPTY_N(merges_1_fi1_EMPTY_N));

  // submodule merges_1_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_1_fo(.RST(RST_N),
							.CLK(CLK),
							.D_IN(merges_1_fo_D_IN),
							.ENQ(merges_1_fo_ENQ),
							.DEQ(merges_1_fo_DEQ),
							.CLR(merges_1_fo_CLR),
							.D_OUT(merges_1_fo_D_OUT),
							.FULL_N(merges_1_fo_FULL_N),
							.EMPTY_N(merges_1_fo_EMPTY_N));

  // submodule merges_2_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_2_fi0(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_2_fi0_D_IN),
							 .ENQ(merges_2_fi0_ENQ),
							 .DEQ(merges_2_fi0_DEQ),
							 .CLR(merges_2_fi0_CLR),
							 .D_OUT(merges_2_fi0_D_OUT),
							 .FULL_N(merges_2_fi0_FULL_N),
							 .EMPTY_N(merges_2_fi0_EMPTY_N));

  // submodule merges_2_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_2_fi1(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_2_fi1_D_IN),
							 .ENQ(merges_2_fi1_ENQ),
							 .DEQ(merges_2_fi1_DEQ),
							 .CLR(merges_2_fi1_CLR),
							 .D_OUT(merges_2_fi1_D_OUT),
							 .FULL_N(merges_2_fi1_FULL_N),
							 .EMPTY_N(merges_2_fi1_EMPTY_N));

  // submodule merges_2_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_2_fo(.RST(RST_N),
							.CLK(CLK),
							.D_IN(merges_2_fo_D_IN),
							.ENQ(merges_2_fo_ENQ),
							.DEQ(merges_2_fo_DEQ),
							.CLR(merges_2_fo_CLR),
							.D_OUT(merges_2_fo_D_OUT),
							.FULL_N(merges_2_fo_FULL_N),
							.EMPTY_N(merges_2_fo_EMPTY_N));

  // submodule merges_3_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_3_fi0(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_3_fi0_D_IN),
							 .ENQ(merges_3_fi0_ENQ),
							 .DEQ(merges_3_fi0_DEQ),
							 .CLR(merges_3_fi0_CLR),
							 .D_OUT(merges_3_fi0_D_OUT),
							 .FULL_N(merges_3_fi0_FULL_N),
							 .EMPTY_N(merges_3_fi0_EMPTY_N));

  // submodule merges_3_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_3_fi1(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_3_fi1_D_IN),
							 .ENQ(merges_3_fi1_ENQ),
							 .DEQ(merges_3_fi1_DEQ),
							 .CLR(merges_3_fi1_CLR),
							 .D_OUT(merges_3_fi1_D_OUT),
							 .FULL_N(merges_3_fi1_FULL_N),
							 .EMPTY_N(merges_3_fi1_EMPTY_N));

  // submodule merges_3_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_3_fo(.RST(RST_N),
							.CLK(CLK),
							.D_IN(merges_3_fo_D_IN),
							.ENQ(merges_3_fo_ENQ),
							.DEQ(merges_3_fo_DEQ),
							.CLR(merges_3_fo_CLR),
							.D_OUT(merges_3_fo_D_OUT),
							.FULL_N(merges_3_fo_FULL_N),
							.EMPTY_N(merges_3_fo_EMPTY_N));

  // submodule merges_4_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_4_fi0(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_4_fi0_D_IN),
							 .ENQ(merges_4_fi0_ENQ),
							 .DEQ(merges_4_fi0_DEQ),
							 .CLR(merges_4_fi0_CLR),
							 .D_OUT(merges_4_fi0_D_OUT),
							 .FULL_N(merges_4_fi0_FULL_N),
							 .EMPTY_N(merges_4_fi0_EMPTY_N));

  // submodule merges_4_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_4_fi1(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_4_fi1_D_IN),
							 .ENQ(merges_4_fi1_ENQ),
							 .DEQ(merges_4_fi1_DEQ),
							 .CLR(merges_4_fi1_CLR),
							 .D_OUT(merges_4_fi1_D_OUT),
							 .FULL_N(merges_4_fi1_FULL_N),
							 .EMPTY_N(merges_4_fi1_EMPTY_N));

  // submodule merges_4_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_4_fo(.RST(RST_N),
							.CLK(CLK),
							.D_IN(merges_4_fo_D_IN),
							.ENQ(merges_4_fo_ENQ),
							.DEQ(merges_4_fo_DEQ),
							.CLR(merges_4_fo_CLR),
							.D_OUT(merges_4_fo_D_OUT),
							.FULL_N(merges_4_fo_FULL_N),
							.EMPTY_N(merges_4_fo_EMPTY_N));

  // submodule merges_5_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_5_fi0(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_5_fi0_D_IN),
							 .ENQ(merges_5_fi0_ENQ),
							 .DEQ(merges_5_fi0_DEQ),
							 .CLR(merges_5_fi0_CLR),
							 .D_OUT(merges_5_fi0_D_OUT),
							 .FULL_N(merges_5_fi0_FULL_N),
							 .EMPTY_N(merges_5_fi0_EMPTY_N));

  // submodule merges_5_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_5_fi1(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_5_fi1_D_IN),
							 .ENQ(merges_5_fi1_ENQ),
							 .DEQ(merges_5_fi1_DEQ),
							 .CLR(merges_5_fi1_CLR),
							 .D_OUT(merges_5_fi1_D_OUT),
							 .FULL_N(merges_5_fi1_FULL_N),
							 .EMPTY_N(merges_5_fi1_EMPTY_N));

  // submodule merges_5_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_5_fo(.RST(RST_N),
							.CLK(CLK),
							.D_IN(merges_5_fo_D_IN),
							.ENQ(merges_5_fo_ENQ),
							.DEQ(merges_5_fo_DEQ),
							.CLR(merges_5_fo_CLR),
							.D_OUT(merges_5_fo_D_OUT),
							.FULL_N(merges_5_fo_FULL_N),
							.EMPTY_N(merges_5_fo_EMPTY_N));

  // submodule merges_6_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_6_fi0(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_6_fi0_D_IN),
							 .ENQ(merges_6_fi0_ENQ),
							 .DEQ(merges_6_fi0_DEQ),
							 .CLR(merges_6_fi0_CLR),
							 .D_OUT(merges_6_fi0_D_OUT),
							 .FULL_N(merges_6_fi0_FULL_N),
							 .EMPTY_N(merges_6_fi0_EMPTY_N));

  // submodule merges_6_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_6_fi1(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_6_fi1_D_IN),
							 .ENQ(merges_6_fi1_ENQ),
							 .DEQ(merges_6_fi1_DEQ),
							 .CLR(merges_6_fi1_CLR),
							 .D_OUT(merges_6_fi1_D_OUT),
							 .FULL_N(merges_6_fi1_FULL_N),
							 .EMPTY_N(merges_6_fi1_EMPTY_N));

  // submodule merges_6_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_6_fo(.RST(RST_N),
							.CLK(CLK),
							.D_IN(merges_6_fo_D_IN),
							.ENQ(merges_6_fo_ENQ),
							.DEQ(merges_6_fo_DEQ),
							.CLR(merges_6_fo_CLR),
							.D_OUT(merges_6_fo_D_OUT),
							.FULL_N(merges_6_fo_FULL_N),
							.EMPTY_N(merges_6_fo_EMPTY_N));

  // submodule merges_7_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_7_fi0(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_7_fi0_D_IN),
							 .ENQ(merges_7_fi0_ENQ),
							 .DEQ(merges_7_fi0_DEQ),
							 .CLR(merges_7_fi0_CLR),
							 .D_OUT(merges_7_fi0_D_OUT),
							 .FULL_N(merges_7_fi0_FULL_N),
							 .EMPTY_N(merges_7_fi0_EMPTY_N));

  // submodule merges_7_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_7_fi1(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(merges_7_fi1_D_IN),
							 .ENQ(merges_7_fi1_ENQ),
							 .DEQ(merges_7_fi1_DEQ),
							 .CLR(merges_7_fi1_CLR),
							 .D_OUT(merges_7_fi1_D_OUT),
							 .FULL_N(merges_7_fi1_FULL_N),
							 .EMPTY_N(merges_7_fi1_EMPTY_N));

  // submodule merges_7_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_7_fo(.RST(RST_N),
							.CLK(CLK),
							.D_IN(merges_7_fo_D_IN),
							.ENQ(merges_7_fo_ENQ),
							.DEQ(merges_7_fo_DEQ),
							.CLR(merges_7_fo_CLR),
							.D_OUT(merges_7_fo_D_OUT),
							.FULL_N(merges_7_fo_FULL_N),
							.EMPTY_N(merges_7_fo_EMPTY_N));

  // submodule merges_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_fi0(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(merges_fi0_D_IN),
						       .ENQ(merges_fi0_ENQ),
						       .DEQ(merges_fi0_DEQ),
						       .CLR(merges_fi0_CLR),
						       .D_OUT(merges_fi0_D_OUT),
						       .FULL_N(merges_fi0_FULL_N),
						       .EMPTY_N(merges_fi0_EMPTY_N));

  // submodule merges_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_fi1(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(merges_fi1_D_IN),
						       .ENQ(merges_fi1_ENQ),
						       .DEQ(merges_fi1_DEQ),
						       .CLR(merges_fi1_CLR),
						       .D_OUT(merges_fi1_D_OUT),
						       .FULL_N(merges_fi1_FULL_N),
						       .EMPTY_N(merges_fi1_EMPTY_N));

  // submodule merges_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) merges_fo(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(merges_fo_D_IN),
						      .ENQ(merges_fo_ENQ),
						      .DEQ(merges_fo_DEQ),
						      .CLR(merges_fo_CLR),
						      .D_OUT(merges_fo_D_OUT),
						      .FULL_N(merges_fo_FULL_N),
						      .EMPTY_N(merges_fo_EMPTY_N));

  // submodule upper_lower_lower_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_lower_lower_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(upper_lower_lower_f_D_IN),
								.ENQ(upper_lower_lower_f_ENQ),
								.DEQ(upper_lower_lower_f_DEQ),
								.CLR(upper_lower_lower_f_CLR),
								.D_OUT(upper_lower_lower_f_D_OUT),
								.FULL_N(upper_lower_lower_f_FULL_N),
								.EMPTY_N(upper_lower_lower_f_EMPTY_N));

  // submodule upper_lower_merges_1_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_lower_merges_1_fi0(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(upper_lower_merges_1_fi0_D_IN),
						    .ENQ(upper_lower_merges_1_fi0_ENQ),
						    .DEQ(upper_lower_merges_1_fi0_DEQ),
						    .CLR(upper_lower_merges_1_fi0_CLR),
						    .D_OUT(upper_lower_merges_1_fi0_D_OUT),
						    .FULL_N(upper_lower_merges_1_fi0_FULL_N),
						    .EMPTY_N(upper_lower_merges_1_fi0_EMPTY_N));

  // submodule upper_lower_merges_1_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_lower_merges_1_fi1(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(upper_lower_merges_1_fi1_D_IN),
						    .ENQ(upper_lower_merges_1_fi1_ENQ),
						    .DEQ(upper_lower_merges_1_fi1_DEQ),
						    .CLR(upper_lower_merges_1_fi1_CLR),
						    .D_OUT(upper_lower_merges_1_fi1_D_OUT),
						    .FULL_N(upper_lower_merges_1_fi1_FULL_N),
						    .EMPTY_N(upper_lower_merges_1_fi1_EMPTY_N));

  // submodule upper_lower_merges_1_fo
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_lower_merges_1_fo(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(upper_lower_merges_1_fo_D_IN),
						   .ENQ(upper_lower_merges_1_fo_ENQ),
						   .DEQ(upper_lower_merges_1_fo_DEQ),
						   .CLR(upper_lower_merges_1_fo_CLR),
						   .D_OUT(upper_lower_merges_1_fo_D_OUT),
						   .FULL_N(upper_lower_merges_1_fo_FULL_N),
						   .EMPTY_N(upper_lower_merges_1_fo_EMPTY_N));

  // submodule upper_lower_merges_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_lower_merges_fi0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(upper_lower_merges_fi0_D_IN),
						  .ENQ(upper_lower_merges_fi0_ENQ),
						  .DEQ(upper_lower_merges_fi0_DEQ),
						  .CLR(upper_lower_merges_fi0_CLR),
						  .D_OUT(upper_lower_merges_fi0_D_OUT),
						  .FULL_N(upper_lower_merges_fi0_FULL_N),
						  .EMPTY_N(upper_lower_merges_fi0_EMPTY_N));

  // submodule upper_lower_merges_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_lower_merges_fi1(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(upper_lower_merges_fi1_D_IN),
						  .ENQ(upper_lower_merges_fi1_ENQ),
						  .DEQ(upper_lower_merges_fi1_DEQ),
						  .CLR(upper_lower_merges_fi1_CLR),
						  .D_OUT(upper_lower_merges_fi1_D_OUT),
						  .FULL_N(upper_lower_merges_fi1_FULL_N),
						  .EMPTY_N(upper_lower_merges_fi1_EMPTY_N));

  // submodule upper_lower_merges_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_lower_merges_fo(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(upper_lower_merges_fo_D_IN),
								  .ENQ(upper_lower_merges_fo_ENQ),
								  .DEQ(upper_lower_merges_fo_DEQ),
								  .CLR(upper_lower_merges_fo_CLR),
								  .D_OUT(upper_lower_merges_fo_D_OUT),
								  .FULL_N(upper_lower_merges_fo_FULL_N),
								  .EMPTY_N(upper_lower_merges_fo_EMPTY_N));

  // submodule upper_lower_upper_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_lower_upper_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(upper_lower_upper_f_D_IN),
								.ENQ(upper_lower_upper_f_ENQ),
								.DEQ(upper_lower_upper_f_DEQ),
								.CLR(upper_lower_upper_f_CLR),
								.D_OUT(upper_lower_upper_f_D_OUT),
								.FULL_N(upper_lower_upper_f_FULL_N),
								.EMPTY_N(upper_lower_upper_f_EMPTY_N));

  // submodule upper_merges_1_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_1_fi0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(upper_merges_1_fi0_D_IN),
							       .ENQ(upper_merges_1_fi0_ENQ),
							       .DEQ(upper_merges_1_fi0_DEQ),
							       .CLR(upper_merges_1_fi0_CLR),
							       .D_OUT(upper_merges_1_fi0_D_OUT),
							       .FULL_N(upper_merges_1_fi0_FULL_N),
							       .EMPTY_N(upper_merges_1_fi0_EMPTY_N));

  // submodule upper_merges_1_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_1_fi1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(upper_merges_1_fi1_D_IN),
							       .ENQ(upper_merges_1_fi1_ENQ),
							       .DEQ(upper_merges_1_fi1_DEQ),
							       .CLR(upper_merges_1_fi1_CLR),
							       .D_OUT(upper_merges_1_fi1_D_OUT),
							       .FULL_N(upper_merges_1_fi1_FULL_N),
							       .EMPTY_N(upper_merges_1_fi1_EMPTY_N));

  // submodule upper_merges_1_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_1_fo(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(upper_merges_1_fo_D_IN),
							      .ENQ(upper_merges_1_fo_ENQ),
							      .DEQ(upper_merges_1_fo_DEQ),
							      .CLR(upper_merges_1_fo_CLR),
							      .D_OUT(upper_merges_1_fo_D_OUT),
							      .FULL_N(upper_merges_1_fo_FULL_N),
							      .EMPTY_N(upper_merges_1_fo_EMPTY_N));

  // submodule upper_merges_2_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_2_fi0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(upper_merges_2_fi0_D_IN),
							       .ENQ(upper_merges_2_fi0_ENQ),
							       .DEQ(upper_merges_2_fi0_DEQ),
							       .CLR(upper_merges_2_fi0_CLR),
							       .D_OUT(upper_merges_2_fi0_D_OUT),
							       .FULL_N(upper_merges_2_fi0_FULL_N),
							       .EMPTY_N(upper_merges_2_fi0_EMPTY_N));

  // submodule upper_merges_2_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_2_fi1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(upper_merges_2_fi1_D_IN),
							       .ENQ(upper_merges_2_fi1_ENQ),
							       .DEQ(upper_merges_2_fi1_DEQ),
							       .CLR(upper_merges_2_fi1_CLR),
							       .D_OUT(upper_merges_2_fi1_D_OUT),
							       .FULL_N(upper_merges_2_fi1_FULL_N),
							       .EMPTY_N(upper_merges_2_fi1_EMPTY_N));

  // submodule upper_merges_2_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_2_fo(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(upper_merges_2_fo_D_IN),
							      .ENQ(upper_merges_2_fo_ENQ),
							      .DEQ(upper_merges_2_fo_DEQ),
							      .CLR(upper_merges_2_fo_CLR),
							      .D_OUT(upper_merges_2_fo_D_OUT),
							      .FULL_N(upper_merges_2_fo_FULL_N),
							      .EMPTY_N(upper_merges_2_fo_EMPTY_N));

  // submodule upper_merges_3_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_3_fi0(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(upper_merges_3_fi0_D_IN),
							       .ENQ(upper_merges_3_fi0_ENQ),
							       .DEQ(upper_merges_3_fi0_DEQ),
							       .CLR(upper_merges_3_fi0_CLR),
							       .D_OUT(upper_merges_3_fi0_D_OUT),
							       .FULL_N(upper_merges_3_fi0_FULL_N),
							       .EMPTY_N(upper_merges_3_fi0_EMPTY_N));

  // submodule upper_merges_3_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_3_fi1(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(upper_merges_3_fi1_D_IN),
							       .ENQ(upper_merges_3_fi1_ENQ),
							       .DEQ(upper_merges_3_fi1_DEQ),
							       .CLR(upper_merges_3_fi1_CLR),
							       .D_OUT(upper_merges_3_fi1_D_OUT),
							       .FULL_N(upper_merges_3_fi1_FULL_N),
							       .EMPTY_N(upper_merges_3_fi1_EMPTY_N));

  // submodule upper_merges_3_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_3_fo(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(upper_merges_3_fo_D_IN),
							      .ENQ(upper_merges_3_fo_ENQ),
							      .DEQ(upper_merges_3_fo_DEQ),
							      .CLR(upper_merges_3_fo_CLR),
							      .D_OUT(upper_merges_3_fo_D_OUT),
							      .FULL_N(upper_merges_3_fo_FULL_N),
							      .EMPTY_N(upper_merges_3_fo_EMPTY_N));

  // submodule upper_merges_fi0
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_fi0(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(upper_merges_fi0_D_IN),
							     .ENQ(upper_merges_fi0_ENQ),
							     .DEQ(upper_merges_fi0_DEQ),
							     .CLR(upper_merges_fi0_CLR),
							     .D_OUT(upper_merges_fi0_D_OUT),
							     .FULL_N(upper_merges_fi0_FULL_N),
							     .EMPTY_N(upper_merges_fi0_EMPTY_N));

  // submodule upper_merges_fi1
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_fi1(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(upper_merges_fi1_D_IN),
							     .ENQ(upper_merges_fi1_ENQ),
							     .DEQ(upper_merges_fi1_DEQ),
							     .CLR(upper_merges_fi1_CLR),
							     .D_OUT(upper_merges_fi1_D_OUT),
							     .FULL_N(upper_merges_fi1_FULL_N),
							     .EMPTY_N(upper_merges_fi1_EMPTY_N));

  // submodule upper_merges_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_merges_fo(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(upper_merges_fo_D_IN),
							    .ENQ(upper_merges_fo_ENQ),
							    .DEQ(upper_merges_fo_DEQ),
							    .CLR(upper_merges_fo_CLR),
							    .D_OUT(upper_merges_fo_D_OUT),
							    .FULL_N(upper_merges_fo_FULL_N),
							    .EMPTY_N(upper_merges_fo_EMPTY_N));

  // submodule upper_upper_lower_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_upper_lower_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(upper_upper_lower_f_D_IN),
								.ENQ(upper_upper_lower_f_ENQ),
								.DEQ(upper_upper_lower_f_DEQ),
								.CLR(upper_upper_lower_f_CLR),
								.D_OUT(upper_upper_lower_f_D_OUT),
								.FULL_N(upper_upper_lower_f_FULL_N),
								.EMPTY_N(upper_upper_lower_f_EMPTY_N));

  // submodule upper_upper_merges_1_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_upper_merges_1_fi0(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(upper_upper_merges_1_fi0_D_IN),
						    .ENQ(upper_upper_merges_1_fi0_ENQ),
						    .DEQ(upper_upper_merges_1_fi0_DEQ),
						    .CLR(upper_upper_merges_1_fi0_CLR),
						    .D_OUT(upper_upper_merges_1_fi0_D_OUT),
						    .FULL_N(upper_upper_merges_1_fi0_FULL_N),
						    .EMPTY_N(upper_upper_merges_1_fi0_EMPTY_N));

  // submodule upper_upper_merges_1_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_upper_merges_1_fi1(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(upper_upper_merges_1_fi1_D_IN),
						    .ENQ(upper_upper_merges_1_fi1_ENQ),
						    .DEQ(upper_upper_merges_1_fi1_DEQ),
						    .CLR(upper_upper_merges_1_fi1_CLR),
						    .D_OUT(upper_upper_merges_1_fi1_D_OUT),
						    .FULL_N(upper_upper_merges_1_fi1_FULL_N),
						    .EMPTY_N(upper_upper_merges_1_fi1_EMPTY_N));

  // submodule upper_upper_merges_1_fo
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_upper_merges_1_fo(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(upper_upper_merges_1_fo_D_IN),
						   .ENQ(upper_upper_merges_1_fo_ENQ),
						   .DEQ(upper_upper_merges_1_fo_DEQ),
						   .CLR(upper_upper_merges_1_fo_CLR),
						   .D_OUT(upper_upper_merges_1_fo_D_OUT),
						   .FULL_N(upper_upper_merges_1_fo_FULL_N),
						   .EMPTY_N(upper_upper_merges_1_fo_EMPTY_N));

  // submodule upper_upper_merges_fi0
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_upper_merges_fi0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(upper_upper_merges_fi0_D_IN),
						  .ENQ(upper_upper_merges_fi0_ENQ),
						  .DEQ(upper_upper_merges_fi0_DEQ),
						  .CLR(upper_upper_merges_fi0_CLR),
						  .D_OUT(upper_upper_merges_fi0_D_OUT),
						  .FULL_N(upper_upper_merges_fi0_FULL_N),
						  .EMPTY_N(upper_upper_merges_fi0_EMPTY_N));

  // submodule upper_upper_merges_fi1
  FIFO2 #(.width(32'd610),
	  .guarded(32'd1)) upper_upper_merges_fi1(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(upper_upper_merges_fi1_D_IN),
						  .ENQ(upper_upper_merges_fi1_ENQ),
						  .DEQ(upper_upper_merges_fi1_DEQ),
						  .CLR(upper_upper_merges_fi1_CLR),
						  .D_OUT(upper_upper_merges_fi1_D_OUT),
						  .FULL_N(upper_upper_merges_fi1_FULL_N),
						  .EMPTY_N(upper_upper_merges_fi1_EMPTY_N));

  // submodule upper_upper_merges_fo
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_upper_merges_fo(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(upper_upper_merges_fo_D_IN),
								  .ENQ(upper_upper_merges_fo_ENQ),
								  .DEQ(upper_upper_merges_fo_DEQ),
								  .CLR(upper_upper_merges_fo_CLR),
								  .D_OUT(upper_upper_merges_fo_D_OUT),
								  .FULL_N(upper_upper_merges_fo_FULL_N),
								  .EMPTY_N(upper_upper_merges_fo_EMPTY_N));

  // submodule upper_upper_upper_f
  FIFO2 #(.width(32'd610), .guarded(32'd1)) upper_upper_upper_f(.RST(RST_N),
								.CLK(CLK),
								.D_IN(upper_upper_upper_f_D_IN),
								.ENQ(upper_upper_upper_f_ENQ),
								.DEQ(upper_upper_upper_f_DEQ),
								.CLR(upper_upper_upper_f_CLR),
								.D_OUT(upper_upper_upper_f_D_OUT),
								.FULL_N(upper_upper_upper_f_FULL_N),
								.EMPTY_N(upper_upper_upper_f_EMPTY_N));

  // rule RL_upper_upper_merges_fi0_is_empty
  assign WILL_FIRE_RL_upper_upper_merges_fi0_is_empty =
	     upper_upper_merges_fi1_EMPTY_N && upper_upper_merges_fo_FULL_N &&
	     !upper_upper_merges_fi0_EMPTY_N ;

  // rule RL_upper_upper_merges_fi1_is_empty
  assign WILL_FIRE_RL_upper_upper_merges_fi1_is_empty =
	     upper_upper_merges_fo_FULL_N && upper_upper_merges_fi0_EMPTY_N &&
	     !upper_upper_merges_fi1_EMPTY_N ;

  // rule RL_upper_upper_merges_both_have_data
  assign WILL_FIRE_RL_upper_upper_merges_both_have_data =
	     (upper_upper_merges_routeFrom[1] ?
		upper_upper_merges_fo_i_notFull_AND_IF_upper_u_ETC___d18 :
		IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d27) &&
	     upper_upper_merges_fi0_EMPTY_N &&
	     upper_upper_merges_fi1_EMPTY_N ;

  // rule RL_upper_upper_merges_1_fi0_is_empty
  assign WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty =
	     upper_upper_merges_1_fi1_EMPTY_N &&
	     upper_upper_merges_1_fo_FULL_N &&
	     !upper_upper_merges_1_fi0_EMPTY_N ;

  // rule RL_upper_upper_merges_1_fi1_is_empty
  assign WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty =
	     upper_upper_merges_1_fo_FULL_N &&
	     upper_upper_merges_1_fi0_EMPTY_N &&
	     !upper_upper_merges_1_fi1_EMPTY_N ;

  // rule RL_upper_upper_merges_1_both_have_data
  assign WILL_FIRE_RL_upper_upper_merges_1_both_have_data =
	     (upper_upper_merges_1_routeFrom[1] ?
		upper_upper_merges_1_fo_i_notFull__7_AND_IF_up_ETC___d93 :
		IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d102) &&
	     upper_upper_merges_1_fi0_EMPTY_N &&
	     upper_upper_merges_1_fi1_EMPTY_N ;

  // rule RL_upper_upper_route
  assign WILL_FIRE_RL_upper_upper_route =
	     upper_upper_upper_f_EMPTY_N &&
	     (upper_upper_upper_f_D_OUT[578] ?
		upper_upper_merges_1_fi1_FULL_N :
		upper_upper_merges_fi0_FULL_N) ;

  // rule RL_upper_upper_route_1
  assign WILL_FIRE_RL_upper_upper_route_1 =
	     upper_upper_lower_f_EMPTY_N &&
	     (upper_upper_lower_f_D_OUT[578] ?
		upper_upper_merges_1_fi0_FULL_N :
		upper_upper_merges_fi1_FULL_N) ;

  // rule RL_upper_lower_merges_fi0_is_empty
  assign WILL_FIRE_RL_upper_lower_merges_fi0_is_empty =
	     upper_lower_merges_fi1_EMPTY_N && upper_lower_merges_fo_FULL_N &&
	     !upper_lower_merges_fi0_EMPTY_N ;

  // rule RL_upper_lower_merges_fi1_is_empty
  assign WILL_FIRE_RL_upper_lower_merges_fi1_is_empty =
	     upper_lower_merges_fo_FULL_N && upper_lower_merges_fi0_EMPTY_N &&
	     !upper_lower_merges_fi1_EMPTY_N ;

  // rule RL_upper_lower_merges_both_have_data
  assign WILL_FIRE_RL_upper_lower_merges_both_have_data =
	     (upper_lower_merges_routeFrom[1] ?
		upper_lower_merges_fo_i_notFull__76_AND_IF_upp_ETC___d192 :
		IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d201) &&
	     upper_lower_merges_fi0_EMPTY_N &&
	     upper_lower_merges_fi1_EMPTY_N ;

  // rule RL_upper_lower_merges_1_fi0_is_empty
  assign WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty =
	     upper_lower_merges_1_fi1_EMPTY_N &&
	     upper_lower_merges_1_fo_FULL_N &&
	     !upper_lower_merges_1_fi0_EMPTY_N ;

  // rule RL_upper_lower_merges_1_fi1_is_empty
  assign WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty =
	     upper_lower_merges_1_fo_FULL_N &&
	     upper_lower_merges_1_fi0_EMPTY_N &&
	     !upper_lower_merges_1_fi1_EMPTY_N ;

  // rule RL_upper_lower_merges_1_both_have_data
  assign WILL_FIRE_RL_upper_lower_merges_1_both_have_data =
	     (upper_lower_merges_1_routeFrom[1] ?
		upper_lower_merges_1_fo_i_notFull__51_AND_IF_u_ETC___d267 :
		IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d276) &&
	     upper_lower_merges_1_fi0_EMPTY_N &&
	     upper_lower_merges_1_fi1_EMPTY_N ;

  // rule RL_upper_lower_route
  assign WILL_FIRE_RL_upper_lower_route =
	     upper_lower_upper_f_EMPTY_N &&
	     (upper_lower_upper_f_D_OUT[578] ?
		upper_lower_merges_1_fi1_FULL_N :
		upper_lower_merges_fi0_FULL_N) ;

  // rule RL_upper_lower_route_1
  assign WILL_FIRE_RL_upper_lower_route_1 =
	     upper_lower_lower_f_EMPTY_N &&
	     (upper_lower_lower_f_D_OUT[578] ?
		upper_lower_merges_1_fi0_FULL_N :
		upper_lower_merges_fi1_FULL_N) ;

  // rule RL_upper_merges_fi0_is_empty
  assign WILL_FIRE_RL_upper_merges_fi0_is_empty =
	     upper_merges_fi1_EMPTY_N && upper_merges_fo_FULL_N &&
	     !upper_merges_fi0_EMPTY_N ;

  // rule RL_upper_merges_fi1_is_empty
  assign WILL_FIRE_RL_upper_merges_fi1_is_empty =
	     upper_merges_fo_FULL_N && upper_merges_fi0_EMPTY_N &&
	     !upper_merges_fi1_EMPTY_N ;

  // rule RL_upper_merges_both_have_data
  assign WILL_FIRE_RL_upper_merges_both_have_data =
	     (upper_merges_routeFrom[1] ?
		upper_merges_fo_i_notFull__48_AND_IF_upper_mer_ETC___d364 :
		IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d373) &&
	     upper_merges_fi0_EMPTY_N &&
	     upper_merges_fi1_EMPTY_N ;

  // rule RL_upper_merges_1_fi0_is_empty
  assign WILL_FIRE_RL_upper_merges_1_fi0_is_empty =
	     upper_merges_1_fi1_EMPTY_N && upper_merges_1_fo_FULL_N &&
	     !upper_merges_1_fi0_EMPTY_N ;

  // rule RL_upper_merges_1_fi1_is_empty
  assign WILL_FIRE_RL_upper_merges_1_fi1_is_empty =
	     upper_merges_1_fo_FULL_N && upper_merges_1_fi0_EMPTY_N &&
	     !upper_merges_1_fi1_EMPTY_N ;

  // rule RL_upper_merges_1_both_have_data
  assign WILL_FIRE_RL_upper_merges_1_both_have_data =
	     (upper_merges_1_routeFrom[1] ?
		upper_merges_1_fo_i_notFull__23_AND_IF_upper_m_ETC___d439 :
		IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d448) &&
	     upper_merges_1_fi0_EMPTY_N &&
	     upper_merges_1_fi1_EMPTY_N ;

  // rule RL_upper_merges_2_fi0_is_empty
  assign WILL_FIRE_RL_upper_merges_2_fi0_is_empty =
	     upper_merges_2_fi1_EMPTY_N && upper_merges_2_fo_FULL_N &&
	     !upper_merges_2_fi0_EMPTY_N ;

  // rule RL_upper_merges_2_fi1_is_empty
  assign WILL_FIRE_RL_upper_merges_2_fi1_is_empty =
	     upper_merges_2_fo_FULL_N && upper_merges_2_fi0_EMPTY_N &&
	     !upper_merges_2_fi1_EMPTY_N ;

  // rule RL_upper_merges_2_both_have_data
  assign WILL_FIRE_RL_upper_merges_2_both_have_data =
	     (upper_merges_2_routeFrom[1] ?
		upper_merges_2_fo_i_notFull__98_AND_IF_upper_m_ETC___d514 :
		IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d523) &&
	     upper_merges_2_fi0_EMPTY_N &&
	     upper_merges_2_fi1_EMPTY_N ;

  // rule RL_upper_route
  assign WILL_FIRE_RL_upper_route =
	     upper_upper_merges_fo_EMPTY_N &&
	     (upper_upper_merges_fo_D_OUT[579] ?
		upper_merges_2_fi1_FULL_N :
		upper_merges_fi0_FULL_N) ;

  // rule RL_upper_route_2
  assign WILL_FIRE_RL_upper_route_2 =
	     upper_lower_merges_fo_EMPTY_N &&
	     (upper_lower_merges_fo_D_OUT[579] ?
		upper_merges_2_fi0_FULL_N :
		upper_merges_fi1_FULL_N) ;

  // rule RL_upper_merges_3_fi0_is_empty
  assign WILL_FIRE_RL_upper_merges_3_fi0_is_empty =
	     upper_merges_3_fi1_EMPTY_N && upper_merges_3_fo_FULL_N &&
	     !upper_merges_3_fi0_EMPTY_N ;

  // rule RL_upper_merges_3_fi1_is_empty
  assign WILL_FIRE_RL_upper_merges_3_fi1_is_empty =
	     upper_merges_3_fo_FULL_N && upper_merges_3_fi0_EMPTY_N &&
	     !upper_merges_3_fi1_EMPTY_N ;

  // rule RL_upper_merges_3_both_have_data
  assign WILL_FIRE_RL_upper_merges_3_both_have_data =
	     (upper_merges_3_routeFrom[1] ?
		upper_merges_3_fo_i_notFull__73_AND_IF_upper_m_ETC___d589 :
		IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d598) &&
	     upper_merges_3_fi0_EMPTY_N &&
	     upper_merges_3_fi1_EMPTY_N ;

  // rule RL_upper_route_1
  assign WILL_FIRE_RL_upper_route_1 =
	     upper_upper_merges_1_fo_EMPTY_N &&
	     (upper_upper_merges_1_fo_D_OUT[579] ?
		upper_merges_3_fi1_FULL_N :
		upper_merges_1_fi0_FULL_N) ;

  // rule RL_upper_route_3
  assign WILL_FIRE_RL_upper_route_3 =
	     upper_lower_merges_1_fo_EMPTY_N &&
	     (upper_lower_merges_1_fo_D_OUT[579] ?
		upper_merges_3_fi0_FULL_N :
		upper_merges_1_fi1_FULL_N) ;

  // rule RL_lower_upper_merges_fi0_is_empty
  assign WILL_FIRE_RL_lower_upper_merges_fi0_is_empty =
	     lower_upper_merges_fi1_EMPTY_N && lower_upper_merges_fo_FULL_N &&
	     !lower_upper_merges_fi0_EMPTY_N ;

  // rule RL_lower_upper_merges_fi1_is_empty
  assign WILL_FIRE_RL_lower_upper_merges_fi1_is_empty =
	     lower_upper_merges_fo_FULL_N && lower_upper_merges_fi0_EMPTY_N &&
	     !lower_upper_merges_fi1_EMPTY_N ;

  // rule RL_lower_upper_merges_both_have_data
  assign WILL_FIRE_RL_lower_upper_merges_both_have_data =
	     (lower_upper_merges_routeFrom[1] ?
		lower_upper_merges_fo_i_notFull__94_AND_IF_low_ETC___d710 :
		IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d719) &&
	     lower_upper_merges_fi0_EMPTY_N &&
	     lower_upper_merges_fi1_EMPTY_N ;

  // rule RL_lower_upper_merges_1_fi0_is_empty
  assign WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty =
	     lower_upper_merges_1_fi1_EMPTY_N &&
	     lower_upper_merges_1_fo_FULL_N &&
	     !lower_upper_merges_1_fi0_EMPTY_N ;

  // rule RL_lower_upper_merges_1_fi1_is_empty
  assign WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty =
	     lower_upper_merges_1_fo_FULL_N &&
	     lower_upper_merges_1_fi0_EMPTY_N &&
	     !lower_upper_merges_1_fi1_EMPTY_N ;

  // rule RL_lower_upper_merges_1_both_have_data
  assign WILL_FIRE_RL_lower_upper_merges_1_both_have_data =
	     (lower_upper_merges_1_routeFrom[1] ?
		lower_upper_merges_1_fo_i_notFull__69_AND_IF_l_ETC___d785 :
		IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d794) &&
	     lower_upper_merges_1_fi0_EMPTY_N &&
	     lower_upper_merges_1_fi1_EMPTY_N ;

  // rule RL_lower_upper_route
  assign WILL_FIRE_RL_lower_upper_route =
	     lower_upper_upper_f_EMPTY_N &&
	     (lower_upper_upper_f_D_OUT[578] ?
		lower_upper_merges_1_fi1_FULL_N :
		lower_upper_merges_fi0_FULL_N) ;

  // rule RL_lower_upper_route_1
  assign WILL_FIRE_RL_lower_upper_route_1 =
	     lower_upper_lower_f_EMPTY_N &&
	     (lower_upper_lower_f_D_OUT[578] ?
		lower_upper_merges_1_fi0_FULL_N :
		lower_upper_merges_fi1_FULL_N) ;

  // rule RL_lower_lower_merges_fi0_is_empty
  assign WILL_FIRE_RL_lower_lower_merges_fi0_is_empty =
	     lower_lower_merges_fi1_EMPTY_N && lower_lower_merges_fo_FULL_N &&
	     !lower_lower_merges_fi0_EMPTY_N ;

  // rule RL_lower_lower_merges_fi1_is_empty
  assign WILL_FIRE_RL_lower_lower_merges_fi1_is_empty =
	     lower_lower_merges_fo_FULL_N && lower_lower_merges_fi0_EMPTY_N &&
	     !lower_lower_merges_fi1_EMPTY_N ;

  // rule RL_lower_lower_merges_both_have_data
  assign WILL_FIRE_RL_lower_lower_merges_both_have_data =
	     (lower_lower_merges_routeFrom[1] ?
		lower_lower_merges_fo_i_notFull__66_AND_IF_low_ETC___d882 :
		IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d891) &&
	     lower_lower_merges_fi0_EMPTY_N &&
	     lower_lower_merges_fi1_EMPTY_N ;

  // rule RL_lower_lower_merges_1_fi0_is_empty
  assign WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty =
	     lower_lower_merges_1_fi1_EMPTY_N &&
	     lower_lower_merges_1_fo_FULL_N &&
	     !lower_lower_merges_1_fi0_EMPTY_N ;

  // rule RL_lower_lower_merges_1_fi1_is_empty
  assign WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty =
	     lower_lower_merges_1_fo_FULL_N &&
	     lower_lower_merges_1_fi0_EMPTY_N &&
	     !lower_lower_merges_1_fi1_EMPTY_N ;

  // rule RL_lower_lower_merges_1_both_have_data
  assign WILL_FIRE_RL_lower_lower_merges_1_both_have_data =
	     (lower_lower_merges_1_routeFrom[1] ?
		lower_lower_merges_1_fo_i_notFull__41_AND_IF_l_ETC___d957 :
		IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d966) &&
	     lower_lower_merges_1_fi0_EMPTY_N &&
	     lower_lower_merges_1_fi1_EMPTY_N ;

  // rule RL_lower_lower_route
  assign WILL_FIRE_RL_lower_lower_route =
	     lower_lower_upper_f_EMPTY_N &&
	     (lower_lower_upper_f_D_OUT[578] ?
		lower_lower_merges_1_fi1_FULL_N :
		lower_lower_merges_fi0_FULL_N) ;

  // rule RL_lower_lower_route_1
  assign WILL_FIRE_RL_lower_lower_route_1 =
	     lower_lower_lower_f_EMPTY_N &&
	     (lower_lower_lower_f_D_OUT[578] ?
		lower_lower_merges_1_fi0_FULL_N :
		lower_lower_merges_fi1_FULL_N) ;

  // rule RL_lower_merges_fi0_is_empty
  assign WILL_FIRE_RL_lower_merges_fi0_is_empty =
	     lower_merges_fi1_EMPTY_N && lower_merges_fo_FULL_N &&
	     !lower_merges_fi0_EMPTY_N ;

  // rule RL_lower_merges_fi1_is_empty
  assign WILL_FIRE_RL_lower_merges_fi1_is_empty =
	     lower_merges_fo_FULL_N && lower_merges_fi0_EMPTY_N &&
	     !lower_merges_fi1_EMPTY_N ;

  // rule RL_lower_merges_both_have_data
  assign WILL_FIRE_RL_lower_merges_both_have_data =
	     (lower_merges_routeFrom[1] ?
		lower_merges_fo_i_notFull__038_AND_IF_lower_me_ETC___d1054 :
		IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1063) &&
	     lower_merges_fi0_EMPTY_N &&
	     lower_merges_fi1_EMPTY_N ;

  // rule RL_lower_merges_1_fi0_is_empty
  assign WILL_FIRE_RL_lower_merges_1_fi0_is_empty =
	     lower_merges_1_fi1_EMPTY_N && lower_merges_1_fo_FULL_N &&
	     !lower_merges_1_fi0_EMPTY_N ;

  // rule RL_lower_merges_1_fi1_is_empty
  assign WILL_FIRE_RL_lower_merges_1_fi1_is_empty =
	     lower_merges_1_fo_FULL_N && lower_merges_1_fi0_EMPTY_N &&
	     !lower_merges_1_fi1_EMPTY_N ;

  // rule RL_lower_merges_1_both_have_data
  assign WILL_FIRE_RL_lower_merges_1_both_have_data =
	     (lower_merges_1_routeFrom[1] ?
		lower_merges_1_fo_i_notFull__113_AND_IF_lower__ETC___d1129 :
		IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1138) &&
	     lower_merges_1_fi0_EMPTY_N &&
	     lower_merges_1_fi1_EMPTY_N ;

  // rule RL_lower_merges_2_fi0_is_empty
  assign WILL_FIRE_RL_lower_merges_2_fi0_is_empty =
	     lower_merges_2_fi1_EMPTY_N && lower_merges_2_fo_FULL_N &&
	     !lower_merges_2_fi0_EMPTY_N ;

  // rule RL_lower_merges_2_fi1_is_empty
  assign WILL_FIRE_RL_lower_merges_2_fi1_is_empty =
	     lower_merges_2_fo_FULL_N && lower_merges_2_fi0_EMPTY_N &&
	     !lower_merges_2_fi1_EMPTY_N ;

  // rule RL_lower_merges_2_both_have_data
  assign WILL_FIRE_RL_lower_merges_2_both_have_data =
	     (lower_merges_2_routeFrom[1] ?
		lower_merges_2_fo_i_notFull__188_AND_IF_lower__ETC___d1204 :
		IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1213) &&
	     lower_merges_2_fi0_EMPTY_N &&
	     lower_merges_2_fi1_EMPTY_N ;

  // rule RL_lower_route
  assign WILL_FIRE_RL_lower_route =
	     lower_upper_merges_fo_EMPTY_N &&
	     (lower_upper_merges_fo_D_OUT[579] ?
		lower_merges_2_fi1_FULL_N :
		lower_merges_fi0_FULL_N) ;

  // rule RL_lower_route_2
  assign WILL_FIRE_RL_lower_route_2 =
	     lower_lower_merges_fo_EMPTY_N &&
	     (lower_lower_merges_fo_D_OUT[579] ?
		lower_merges_2_fi0_FULL_N :
		lower_merges_fi1_FULL_N) ;

  // rule RL_lower_merges_3_fi0_is_empty
  assign WILL_FIRE_RL_lower_merges_3_fi0_is_empty =
	     lower_merges_3_fi1_EMPTY_N && lower_merges_3_fo_FULL_N &&
	     !lower_merges_3_fi0_EMPTY_N ;

  // rule RL_lower_merges_3_fi1_is_empty
  assign WILL_FIRE_RL_lower_merges_3_fi1_is_empty =
	     lower_merges_3_fo_FULL_N && lower_merges_3_fi0_EMPTY_N &&
	     !lower_merges_3_fi1_EMPTY_N ;

  // rule RL_lower_merges_3_both_have_data
  assign WILL_FIRE_RL_lower_merges_3_both_have_data =
	     (lower_merges_3_routeFrom[1] ?
		lower_merges_3_fo_i_notFull__263_AND_IF_lower__ETC___d1279 :
		IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1288) &&
	     lower_merges_3_fi0_EMPTY_N &&
	     lower_merges_3_fi1_EMPTY_N ;

  // rule RL_lower_route_1
  assign WILL_FIRE_RL_lower_route_1 =
	     lower_upper_merges_1_fo_EMPTY_N &&
	     (lower_upper_merges_1_fo_D_OUT[579] ?
		lower_merges_3_fi1_FULL_N :
		lower_merges_1_fi0_FULL_N) ;

  // rule RL_lower_route_3
  assign WILL_FIRE_RL_lower_route_3 =
	     lower_lower_merges_1_fo_EMPTY_N &&
	     (lower_lower_merges_1_fo_D_OUT[579] ?
		lower_merges_3_fi0_FULL_N :
		lower_merges_1_fi1_FULL_N) ;

  // rule RL_merges_fi0_is_empty
  assign WILL_FIRE_RL_merges_fi0_is_empty =
	     merges_fi1_EMPTY_N && merges_fo_FULL_N && !merges_fi0_EMPTY_N ;

  // rule RL_merges_fi1_is_empty
  assign WILL_FIRE_RL_merges_fi1_is_empty =
	     merges_fo_FULL_N && merges_fi0_EMPTY_N && !merges_fi1_EMPTY_N ;

  // rule RL_merges_both_have_data
  assign WILL_FIRE_RL_merges_both_have_data =
	     (merges_routeFrom[1] ?
		merges_fo_i_notFull__382_AND_IF_merges_routeFr_ETC___d1398 :
		IF_merges_fi0HasPrio_399_THEN_merges_fi0_i_not_ETC___d1407) &&
	     merges_fi0_EMPTY_N &&
	     merges_fi1_EMPTY_N ;

  // rule RL_merges_1_fi0_is_empty
  assign WILL_FIRE_RL_merges_1_fi0_is_empty =
	     merges_1_fi1_EMPTY_N && merges_1_fo_FULL_N &&
	     !merges_1_fi0_EMPTY_N ;

  // rule RL_merges_1_fi1_is_empty
  assign WILL_FIRE_RL_merges_1_fi1_is_empty =
	     merges_1_fo_FULL_N && merges_1_fi0_EMPTY_N &&
	     !merges_1_fi1_EMPTY_N ;

  // rule RL_merges_1_both_have_data
  assign WILL_FIRE_RL_merges_1_both_have_data =
	     (merges_1_routeFrom[1] ?
		merges_1_fo_i_notFull__457_AND_IF_merges_1_rou_ETC___d1473 :
		IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_i_ETC___d1482) &&
	     merges_1_fi0_EMPTY_N &&
	     merges_1_fi1_EMPTY_N ;

  // rule RL_merges_2_fi0_is_empty
  assign WILL_FIRE_RL_merges_2_fi0_is_empty =
	     merges_2_fi1_EMPTY_N && merges_2_fo_FULL_N &&
	     !merges_2_fi0_EMPTY_N ;

  // rule RL_merges_2_fi1_is_empty
  assign WILL_FIRE_RL_merges_2_fi1_is_empty =
	     merges_2_fo_FULL_N && merges_2_fi0_EMPTY_N &&
	     !merges_2_fi1_EMPTY_N ;

  // rule RL_merges_2_both_have_data
  assign WILL_FIRE_RL_merges_2_both_have_data =
	     (merges_2_routeFrom[1] ?
		merges_2_fo_i_notFull__532_AND_IF_merges_2_rou_ETC___d1548 :
		IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_i_ETC___d1557) &&
	     merges_2_fi0_EMPTY_N &&
	     merges_2_fi1_EMPTY_N ;

  // rule RL_merges_3_fi0_is_empty
  assign WILL_FIRE_RL_merges_3_fi0_is_empty =
	     merges_3_fi1_EMPTY_N && merges_3_fo_FULL_N &&
	     !merges_3_fi0_EMPTY_N ;

  // rule RL_merges_3_fi1_is_empty
  assign WILL_FIRE_RL_merges_3_fi1_is_empty =
	     merges_3_fo_FULL_N && merges_3_fi0_EMPTY_N &&
	     !merges_3_fi1_EMPTY_N ;

  // rule RL_merges_3_both_have_data
  assign WILL_FIRE_RL_merges_3_both_have_data =
	     (merges_3_routeFrom[1] ?
		merges_3_fo_i_notFull__607_AND_IF_merges_3_rou_ETC___d1623 :
		IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_i_ETC___d1632) &&
	     merges_3_fi0_EMPTY_N &&
	     merges_3_fi1_EMPTY_N ;

  // rule RL_merges_4_fi0_is_empty
  assign WILL_FIRE_RL_merges_4_fi0_is_empty =
	     merges_4_fi1_EMPTY_N && merges_4_fo_FULL_N &&
	     !merges_4_fi0_EMPTY_N ;

  // rule RL_merges_4_fi1_is_empty
  assign WILL_FIRE_RL_merges_4_fi1_is_empty =
	     merges_4_fo_FULL_N && merges_4_fi0_EMPTY_N &&
	     !merges_4_fi1_EMPTY_N ;

  // rule RL_merges_4_both_have_data
  assign WILL_FIRE_RL_merges_4_both_have_data =
	     (merges_4_routeFrom[1] ?
		merges_4_fo_i_notFull__682_AND_IF_merges_4_rou_ETC___d1698 :
		IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_i_ETC___d1707) &&
	     merges_4_fi0_EMPTY_N &&
	     merges_4_fi1_EMPTY_N ;

  // rule RL_route
  assign WILL_FIRE_RL_route =
	     upper_merges_fo_EMPTY_N &&
	     (upper_merges_fo_D_OUT[580] ?
		merges_4_fi1_FULL_N :
		merges_fi0_FULL_N) ;

  // rule RL_route_4
  assign WILL_FIRE_RL_route_4 =
	     lower_merges_fo_EMPTY_N &&
	     (lower_merges_fo_D_OUT[580] ?
		merges_4_fi0_FULL_N :
		merges_fi1_FULL_N) ;

  // rule RL_merges_5_fi0_is_empty
  assign WILL_FIRE_RL_merges_5_fi0_is_empty =
	     merges_5_fi1_EMPTY_N && merges_5_fo_FULL_N &&
	     !merges_5_fi0_EMPTY_N ;

  // rule RL_merges_5_fi1_is_empty
  assign WILL_FIRE_RL_merges_5_fi1_is_empty =
	     merges_5_fo_FULL_N && merges_5_fi0_EMPTY_N &&
	     !merges_5_fi1_EMPTY_N ;

  // rule RL_merges_5_both_have_data
  assign WILL_FIRE_RL_merges_5_both_have_data =
	     (merges_5_routeFrom[1] ?
		merges_5_fo_i_notFull__757_AND_IF_merges_5_rou_ETC___d1773 :
		IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_i_ETC___d1782) &&
	     merges_5_fi0_EMPTY_N &&
	     merges_5_fi1_EMPTY_N ;

  // rule RL_route_1
  assign WILL_FIRE_RL_route_1 =
	     upper_merges_1_fo_EMPTY_N &&
	     (upper_merges_1_fo_D_OUT[580] ?
		merges_5_fi1_FULL_N :
		merges_1_fi0_FULL_N) ;

  // rule RL_route_5
  assign WILL_FIRE_RL_route_5 =
	     lower_merges_1_fo_EMPTY_N &&
	     (lower_merges_1_fo_D_OUT[580] ?
		merges_5_fi0_FULL_N :
		merges_1_fi1_FULL_N) ;

  // rule RL_merges_6_fi0_is_empty
  assign WILL_FIRE_RL_merges_6_fi0_is_empty =
	     merges_6_fi1_EMPTY_N && merges_6_fo_FULL_N &&
	     !merges_6_fi0_EMPTY_N ;

  // rule RL_merges_6_fi1_is_empty
  assign WILL_FIRE_RL_merges_6_fi1_is_empty =
	     merges_6_fo_FULL_N && merges_6_fi0_EMPTY_N &&
	     !merges_6_fi1_EMPTY_N ;

  // rule RL_merges_6_both_have_data
  assign WILL_FIRE_RL_merges_6_both_have_data =
	     (merges_6_routeFrom[1] ?
		merges_6_fo_i_notFull__832_AND_IF_merges_6_rou_ETC___d1848 :
		IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_i_ETC___d1857) &&
	     merges_6_fi0_EMPTY_N &&
	     merges_6_fi1_EMPTY_N ;

  // rule RL_route_2
  assign WILL_FIRE_RL_route_2 =
	     upper_merges_2_fo_EMPTY_N &&
	     (upper_merges_2_fo_D_OUT[580] ?
		merges_6_fi1_FULL_N :
		merges_2_fi0_FULL_N) ;

  // rule RL_route_6
  assign WILL_FIRE_RL_route_6 =
	     lower_merges_2_fo_EMPTY_N &&
	     (lower_merges_2_fo_D_OUT[580] ?
		merges_6_fi0_FULL_N :
		merges_2_fi1_FULL_N) ;

  // rule RL_merges_7_fi0_is_empty
  assign WILL_FIRE_RL_merges_7_fi0_is_empty =
	     merges_7_fi1_EMPTY_N && merges_7_fo_FULL_N &&
	     !merges_7_fi0_EMPTY_N ;

  // rule RL_merges_7_fi1_is_empty
  assign WILL_FIRE_RL_merges_7_fi1_is_empty =
	     merges_7_fo_FULL_N && merges_7_fi0_EMPTY_N &&
	     !merges_7_fi1_EMPTY_N ;

  // rule RL_merges_7_both_have_data
  assign WILL_FIRE_RL_merges_7_both_have_data =
	     (merges_7_routeFrom[1] ?
		merges_7_fo_i_notFull__907_AND_IF_merges_7_rou_ETC___d1923 :
		IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_i_ETC___d1932) &&
	     merges_7_fi0_EMPTY_N &&
	     merges_7_fi1_EMPTY_N ;

  // rule RL_route_3
  assign WILL_FIRE_RL_route_3 =
	     upper_merges_3_fo_EMPTY_N &&
	     (upper_merges_3_fo_D_OUT[580] ?
		merges_7_fi1_FULL_N :
		merges_3_fi0_FULL_N) ;

  // rule RL_route_7
  assign WILL_FIRE_RL_route_7 =
	     lower_merges_3_fo_EMPTY_N &&
	     (lower_merges_3_fo_D_OUT[580] ?
		merges_7_fi0_FULL_N :
		merges_3_fi1_FULL_N) ;

  // inputs to muxes for submodule ports
  assign MUX_lower_lower_merges_1_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	     lower_lower_merges_1_routeFrom_53_BIT_1_54_AND_ETC___d999 ;
  assign MUX_lower_lower_merges_1_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	     (lower_lower_merges_1_routeFrom[1] ||
	      IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d979) ;
  assign MUX_lower_lower_merges_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	     lower_lower_merges_routeFrom_78_BIT_1_79_AND_I_ETC___d924 ;
  assign MUX_lower_lower_merges_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	     (lower_lower_merges_routeFrom[1] ||
	      IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d904) ;
  assign MUX_lower_merges_1_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_1_both_have_data &&
	     lower_merges_1_routeFrom_125_BIT_1_126_AND_IF__ETC___d1171 ;
  assign MUX_lower_merges_1_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_1_both_have_data &&
	     (lower_merges_1_routeFrom[1] ||
	      IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1151) ;
  assign MUX_lower_merges_2_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_2_both_have_data &&
	     lower_merges_2_routeFrom_200_BIT_1_201_AND_IF__ETC___d1246 ;
  assign MUX_lower_merges_2_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_2_both_have_data &&
	     (lower_merges_2_routeFrom[1] ||
	      IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1226) ;
  assign MUX_lower_merges_3_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_3_both_have_data &&
	     lower_merges_3_routeFrom_275_BIT_1_276_AND_IF__ETC___d1321 ;
  assign MUX_lower_merges_3_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_3_both_have_data &&
	     (lower_merges_3_routeFrom[1] ||
	      IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1301) ;
  assign MUX_lower_merges_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_both_have_data &&
	     lower_merges_routeFrom_050_BIT_1_051_AND_IF_lo_ETC___d1096 ;
  assign MUX_lower_merges_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_merges_both_have_data &&
	     (lower_merges_routeFrom[1] ||
	      IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1076) ;
  assign MUX_lower_upper_merges_1_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	     lower_upper_merges_1_routeFrom_81_BIT_1_82_AND_ETC___d827 ;
  assign MUX_lower_upper_merges_1_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	     (lower_upper_merges_1_routeFrom[1] ||
	      IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d807) ;
  assign MUX_lower_upper_merges_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	     lower_upper_merges_routeFrom_06_BIT_1_07_AND_I_ETC___d752 ;
  assign MUX_lower_upper_merges_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	     (lower_upper_merges_routeFrom[1] ||
	      IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d732) ;
  assign MUX_merges_1_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_1_both_have_data &&
	     merges_1_routeFrom_469_BIT_1_470_AND_IF_merges_ETC___d1515 ;
  assign MUX_merges_1_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_1_both_have_data &&
	     (merges_1_routeFrom[1] ||
	      IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1495) ;
  assign MUX_merges_2_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_2_both_have_data &&
	     merges_2_routeFrom_544_BIT_1_545_AND_IF_merges_ETC___d1590 ;
  assign MUX_merges_2_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_2_both_have_data &&
	     (merges_2_routeFrom[1] ||
	      IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1570) ;
  assign MUX_merges_3_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_3_both_have_data &&
	     merges_3_routeFrom_619_BIT_1_620_AND_IF_merges_ETC___d1665 ;
  assign MUX_merges_3_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_3_both_have_data &&
	     (merges_3_routeFrom[1] ||
	      IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1645) ;
  assign MUX_merges_4_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_4_both_have_data &&
	     merges_4_routeFrom_694_BIT_1_695_AND_IF_merges_ETC___d1740 ;
  assign MUX_merges_4_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_4_both_have_data &&
	     (merges_4_routeFrom[1] ||
	      IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1720) ;
  assign MUX_merges_5_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_5_both_have_data &&
	     merges_5_routeFrom_769_BIT_1_770_AND_IF_merges_ETC___d1815 ;
  assign MUX_merges_5_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_5_both_have_data &&
	     (merges_5_routeFrom[1] ||
	      IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1795) ;
  assign MUX_merges_6_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_6_both_have_data &&
	     merges_6_routeFrom_844_BIT_1_845_AND_IF_merges_ETC___d1890 ;
  assign MUX_merges_6_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_6_both_have_data &&
	     (merges_6_routeFrom[1] ||
	      IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1870) ;
  assign MUX_merges_7_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_7_both_have_data &&
	     merges_7_routeFrom_919_BIT_1_920_AND_IF_merges_ETC___d1965 ;
  assign MUX_merges_7_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_7_both_have_data &&
	     (merges_7_routeFrom[1] ||
	      IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1945) ;
  assign MUX_merges_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_merges_both_have_data &&
	     merges_routeFrom_394_BIT_1_395_AND_IF_merges_r_ETC___d1440 ;
  assign MUX_merges_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_merges_both_have_data &&
	     (merges_routeFrom[1] ||
	      IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1420) ;
  assign MUX_upper_lower_merges_1_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	     upper_lower_merges_1_routeFrom_63_BIT_1_64_AND_ETC___d309 ;
  assign MUX_upper_lower_merges_1_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	     (upper_lower_merges_1_routeFrom[1] ||
	      IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d289) ;
  assign MUX_upper_lower_merges_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	     upper_lower_merges_routeFrom_88_BIT_1_89_AND_I_ETC___d234 ;
  assign MUX_upper_lower_merges_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	     (upper_lower_merges_routeFrom[1] ||
	      IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d214) ;
  assign MUX_upper_merges_1_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_1_both_have_data &&
	     upper_merges_1_routeFrom_35_BIT_1_36_AND_IF_up_ETC___d481 ;
  assign MUX_upper_merges_1_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_1_both_have_data &&
	     (upper_merges_1_routeFrom[1] ||
	      IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d461) ;
  assign MUX_upper_merges_2_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_2_both_have_data &&
	     upper_merges_2_routeFrom_10_BIT_1_11_AND_IF_up_ETC___d556 ;
  assign MUX_upper_merges_2_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_2_both_have_data &&
	     (upper_merges_2_routeFrom[1] ||
	      IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d536) ;
  assign MUX_upper_merges_3_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_3_both_have_data &&
	     upper_merges_3_routeFrom_85_BIT_1_86_AND_IF_up_ETC___d631 ;
  assign MUX_upper_merges_3_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_3_both_have_data &&
	     (upper_merges_3_routeFrom[1] ||
	      IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d611) ;
  assign MUX_upper_merges_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_both_have_data &&
	     upper_merges_routeFrom_60_BIT_1_61_AND_IF_uppe_ETC___d406 ;
  assign MUX_upper_merges_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_merges_both_have_data &&
	     (upper_merges_routeFrom[1] ||
	      IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d386) ;
  assign MUX_upper_upper_merges_1_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	     upper_upper_merges_1_routeFrom_9_BIT_1_0_AND_I_ETC___d135 ;
  assign MUX_upper_upper_merges_1_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	     (upper_upper_merges_1_routeFrom[1] ||
	      IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d115) ;
  assign MUX_upper_upper_merges_fi0HasPrio_write_1__SEL_1 =
	     WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	     upper_upper_merges_routeFrom_4_BIT_1_5_AND_IF__ETC___d60 ;
  assign MUX_upper_upper_merges_fo_enq_1__SEL_1 =
	     WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	     (upper_upper_merges_routeFrom[1] ||
	      IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d40) ;
  assign MUX_lower_lower_merges_1_fo_enq_1__VAL_1 =
	     lower_lower_merges_1_routeFrom[1] ?
	       (lower_lower_merges_1_routeFrom[0] ?
		  lower_lower_merges_1_fi1_D_OUT :
		  lower_lower_merges_1_fi0_D_OUT) :
	       (lower_lower_merges_1_fi0HasPrio ?
		  lower_lower_merges_1_fi0_D_OUT :
		  lower_lower_merges_1_fi1_D_OUT) ;
  assign MUX_lower_lower_merges_fo_enq_1__VAL_1 =
	     lower_lower_merges_routeFrom[1] ?
	       (lower_lower_merges_routeFrom[0] ?
		  lower_lower_merges_fi1_D_OUT :
		  lower_lower_merges_fi0_D_OUT) :
	       (lower_lower_merges_fi0HasPrio ?
		  lower_lower_merges_fi0_D_OUT :
		  lower_lower_merges_fi1_D_OUT) ;
  assign MUX_lower_merges_1_fo_enq_1__VAL_1 =
	     lower_merges_1_routeFrom[1] ?
	       (lower_merges_1_routeFrom[0] ?
		  lower_merges_1_fi1_D_OUT :
		  lower_merges_1_fi0_D_OUT) :
	       (lower_merges_1_fi0HasPrio ?
		  lower_merges_1_fi0_D_OUT :
		  lower_merges_1_fi1_D_OUT) ;
  assign MUX_lower_merges_2_fo_enq_1__VAL_1 =
	     lower_merges_2_routeFrom[1] ?
	       (lower_merges_2_routeFrom[0] ?
		  lower_merges_2_fi1_D_OUT :
		  lower_merges_2_fi0_D_OUT) :
	       (lower_merges_2_fi0HasPrio ?
		  lower_merges_2_fi0_D_OUT :
		  lower_merges_2_fi1_D_OUT) ;
  assign MUX_lower_merges_3_fo_enq_1__VAL_1 =
	     lower_merges_3_routeFrom[1] ?
	       (lower_merges_3_routeFrom[0] ?
		  lower_merges_3_fi1_D_OUT :
		  lower_merges_3_fi0_D_OUT) :
	       (lower_merges_3_fi0HasPrio ?
		  lower_merges_3_fi0_D_OUT :
		  lower_merges_3_fi1_D_OUT) ;
  assign MUX_lower_merges_fo_enq_1__VAL_1 =
	     lower_merges_routeFrom[1] ?
	       (lower_merges_routeFrom[0] ?
		  lower_merges_fi1_D_OUT :
		  lower_merges_fi0_D_OUT) :
	       (lower_merges_fi0HasPrio ?
		  lower_merges_fi0_D_OUT :
		  lower_merges_fi1_D_OUT) ;
  assign MUX_lower_upper_merges_1_fo_enq_1__VAL_1 =
	     lower_upper_merges_1_routeFrom[1] ?
	       (lower_upper_merges_1_routeFrom[0] ?
		  lower_upper_merges_1_fi1_D_OUT :
		  lower_upper_merges_1_fi0_D_OUT) :
	       (lower_upper_merges_1_fi0HasPrio ?
		  lower_upper_merges_1_fi0_D_OUT :
		  lower_upper_merges_1_fi1_D_OUT) ;
  assign MUX_lower_upper_merges_fo_enq_1__VAL_1 =
	     lower_upper_merges_routeFrom[1] ?
	       (lower_upper_merges_routeFrom[0] ?
		  lower_upper_merges_fi1_D_OUT :
		  lower_upper_merges_fi0_D_OUT) :
	       (lower_upper_merges_fi0HasPrio ?
		  lower_upper_merges_fi0_D_OUT :
		  lower_upper_merges_fi1_D_OUT) ;
  assign MUX_merges_1_fo_enq_1__VAL_1 =
	     merges_1_routeFrom[1] ?
	       (merges_1_routeFrom[0] ?
		  merges_1_fi1_D_OUT :
		  merges_1_fi0_D_OUT) :
	       (merges_1_fi0HasPrio ?
		  merges_1_fi0_D_OUT :
		  merges_1_fi1_D_OUT) ;
  assign MUX_merges_2_fo_enq_1__VAL_1 =
	     merges_2_routeFrom[1] ?
	       (merges_2_routeFrom[0] ?
		  merges_2_fi1_D_OUT :
		  merges_2_fi0_D_OUT) :
	       (merges_2_fi0HasPrio ?
		  merges_2_fi0_D_OUT :
		  merges_2_fi1_D_OUT) ;
  assign MUX_merges_3_fo_enq_1__VAL_1 =
	     merges_3_routeFrom[1] ?
	       (merges_3_routeFrom[0] ?
		  merges_3_fi1_D_OUT :
		  merges_3_fi0_D_OUT) :
	       (merges_3_fi0HasPrio ?
		  merges_3_fi0_D_OUT :
		  merges_3_fi1_D_OUT) ;
  assign MUX_merges_4_fo_enq_1__VAL_1 =
	     merges_4_routeFrom[1] ?
	       (merges_4_routeFrom[0] ?
		  merges_4_fi1_D_OUT :
		  merges_4_fi0_D_OUT) :
	       (merges_4_fi0HasPrio ?
		  merges_4_fi0_D_OUT :
		  merges_4_fi1_D_OUT) ;
  assign MUX_merges_5_fo_enq_1__VAL_1 =
	     merges_5_routeFrom[1] ?
	       (merges_5_routeFrom[0] ?
		  merges_5_fi1_D_OUT :
		  merges_5_fi0_D_OUT) :
	       (merges_5_fi0HasPrio ?
		  merges_5_fi0_D_OUT :
		  merges_5_fi1_D_OUT) ;
  assign MUX_merges_6_fo_enq_1__VAL_1 =
	     merges_6_routeFrom[1] ?
	       (merges_6_routeFrom[0] ?
		  merges_6_fi1_D_OUT :
		  merges_6_fi0_D_OUT) :
	       (merges_6_fi0HasPrio ?
		  merges_6_fi0_D_OUT :
		  merges_6_fi1_D_OUT) ;
  assign MUX_merges_7_fo_enq_1__VAL_1 =
	     merges_7_routeFrom[1] ?
	       (merges_7_routeFrom[0] ?
		  merges_7_fi1_D_OUT :
		  merges_7_fi0_D_OUT) :
	       (merges_7_fi0HasPrio ?
		  merges_7_fi0_D_OUT :
		  merges_7_fi1_D_OUT) ;
  assign MUX_merges_fo_enq_1__VAL_1 =
	     merges_routeFrom[1] ?
	       (merges_routeFrom[0] ? merges_fi1_D_OUT : merges_fi0_D_OUT) :
	       (merges_fi0HasPrio ? merges_fi0_D_OUT : merges_fi1_D_OUT) ;
  assign MUX_upper_lower_merges_1_fo_enq_1__VAL_1 =
	     upper_lower_merges_1_routeFrom[1] ?
	       (upper_lower_merges_1_routeFrom[0] ?
		  upper_lower_merges_1_fi1_D_OUT :
		  upper_lower_merges_1_fi0_D_OUT) :
	       (upper_lower_merges_1_fi0HasPrio ?
		  upper_lower_merges_1_fi0_D_OUT :
		  upper_lower_merges_1_fi1_D_OUT) ;
  assign MUX_upper_lower_merges_fo_enq_1__VAL_1 =
	     upper_lower_merges_routeFrom[1] ?
	       (upper_lower_merges_routeFrom[0] ?
		  upper_lower_merges_fi1_D_OUT :
		  upper_lower_merges_fi0_D_OUT) :
	       (upper_lower_merges_fi0HasPrio ?
		  upper_lower_merges_fi0_D_OUT :
		  upper_lower_merges_fi1_D_OUT) ;
  assign MUX_upper_merges_1_fo_enq_1__VAL_1 =
	     upper_merges_1_routeFrom[1] ?
	       (upper_merges_1_routeFrom[0] ?
		  upper_merges_1_fi1_D_OUT :
		  upper_merges_1_fi0_D_OUT) :
	       (upper_merges_1_fi0HasPrio ?
		  upper_merges_1_fi0_D_OUT :
		  upper_merges_1_fi1_D_OUT) ;
  assign MUX_upper_merges_2_fo_enq_1__VAL_1 =
	     upper_merges_2_routeFrom[1] ?
	       (upper_merges_2_routeFrom[0] ?
		  upper_merges_2_fi1_D_OUT :
		  upper_merges_2_fi0_D_OUT) :
	       (upper_merges_2_fi0HasPrio ?
		  upper_merges_2_fi0_D_OUT :
		  upper_merges_2_fi1_D_OUT) ;
  assign MUX_upper_merges_3_fo_enq_1__VAL_1 =
	     upper_merges_3_routeFrom[1] ?
	       (upper_merges_3_routeFrom[0] ?
		  upper_merges_3_fi1_D_OUT :
		  upper_merges_3_fi0_D_OUT) :
	       (upper_merges_3_fi0HasPrio ?
		  upper_merges_3_fi0_D_OUT :
		  upper_merges_3_fi1_D_OUT) ;
  assign MUX_upper_merges_fo_enq_1__VAL_1 =
	     upper_merges_routeFrom[1] ?
	       (upper_merges_routeFrom[0] ?
		  upper_merges_fi1_D_OUT :
		  upper_merges_fi0_D_OUT) :
	       (upper_merges_fi0HasPrio ?
		  upper_merges_fi0_D_OUT :
		  upper_merges_fi1_D_OUT) ;
  assign MUX_upper_upper_merges_1_fo_enq_1__VAL_1 =
	     upper_upper_merges_1_routeFrom[1] ?
	       (upper_upper_merges_1_routeFrom[0] ?
		  upper_upper_merges_1_fi1_D_OUT :
		  upper_upper_merges_1_fi0_D_OUT) :
	       (upper_upper_merges_1_fi0HasPrio ?
		  upper_upper_merges_1_fi0_D_OUT :
		  upper_upper_merges_1_fi1_D_OUT) ;
  assign MUX_upper_upper_merges_fo_enq_1__VAL_1 =
	     upper_upper_merges_routeFrom[1] ?
	       (upper_upper_merges_routeFrom[0] ?
		  upper_upper_merges_fi1_D_OUT :
		  upper_upper_merges_fi0_D_OUT) :
	       (upper_upper_merges_fi0HasPrio ?
		  upper_upper_merges_fi0_D_OUT :
		  upper_upper_merges_fi1_D_OUT) ;

  // register lower_lower_merges_1_fi0HasPrio
  always@(MUX_lower_lower_merges_1_fi0HasPrio_write_1__SEL_1 or
	  lower_lower_merges_1_fi0HasPrio or
	  WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty or
	  WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_lower_merges_1_fi0HasPrio_write_1__SEL_1:
	  lower_lower_merges_1_fi0HasPrio_D_IN =
	      !lower_lower_merges_1_fi0HasPrio;
      WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty:
	  lower_lower_merges_1_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty:
	  lower_lower_merges_1_fi0HasPrio_D_IN = 1'd1;
      default: lower_lower_merges_1_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_lower_merges_1_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	     lower_lower_merges_1_routeFrom_53_BIT_1_54_AND_ETC___d999 ||
	     WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty ;

  // register lower_lower_merges_1_routeFrom
  assign lower_lower_merges_1_routeFrom_D_IN =
	     { !lower_lower_merges_1_routeFrom[1],
	       !lower_lower_merges_1_fi0HasPrio } ;
  assign lower_lower_merges_1_routeFrom_EN =
	     WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	     (lower_lower_merges_1_routeFrom[1] &&
	      IF_lower_lower_merges_1_routeFrom_53_BIT_0_55__ETC___d986 ||
	      !lower_lower_merges_1_routeFrom[1] &&
	      IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d991) ;

  // register lower_lower_merges_fi0HasPrio
  always@(MUX_lower_lower_merges_fi0HasPrio_write_1__SEL_1 or
	  lower_lower_merges_fi0HasPrio or
	  WILL_FIRE_RL_lower_lower_merges_fi1_is_empty or
	  WILL_FIRE_RL_lower_lower_merges_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_lower_merges_fi0HasPrio_write_1__SEL_1:
	  lower_lower_merges_fi0HasPrio_D_IN = !lower_lower_merges_fi0HasPrio;
      WILL_FIRE_RL_lower_lower_merges_fi1_is_empty:
	  lower_lower_merges_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_lower_merges_fi0_is_empty:
	  lower_lower_merges_fi0HasPrio_D_IN = 1'd1;
      default: lower_lower_merges_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_lower_merges_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	     lower_lower_merges_routeFrom_78_BIT_1_79_AND_I_ETC___d924 ||
	     WILL_FIRE_RL_lower_lower_merges_fi1_is_empty ||
	     WILL_FIRE_RL_lower_lower_merges_fi0_is_empty ;

  // register lower_lower_merges_routeFrom
  assign lower_lower_merges_routeFrom_D_IN =
	     { !lower_lower_merges_routeFrom[1],
	       !lower_lower_merges_fi0HasPrio } ;
  assign lower_lower_merges_routeFrom_EN =
	     WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	     (lower_lower_merges_routeFrom[1] &&
	      IF_lower_lower_merges_routeFrom_78_BIT_0_80_TH_ETC___d911 ||
	      !lower_lower_merges_routeFrom[1] &&
	      IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d916) ;

  // register lower_merges_1_fi0HasPrio
  always@(MUX_lower_merges_1_fi0HasPrio_write_1__SEL_1 or
	  lower_merges_1_fi0HasPrio or
	  WILL_FIRE_RL_lower_merges_1_fi1_is_empty or
	  WILL_FIRE_RL_lower_merges_1_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_1_fi0HasPrio_write_1__SEL_1:
	  lower_merges_1_fi0HasPrio_D_IN = !lower_merges_1_fi0HasPrio;
      WILL_FIRE_RL_lower_merges_1_fi1_is_empty:
	  lower_merges_1_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_merges_1_fi0_is_empty:
	  lower_merges_1_fi0HasPrio_D_IN = 1'd1;
      default: lower_merges_1_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_merges_1_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_merges_1_both_have_data &&
	     lower_merges_1_routeFrom_125_BIT_1_126_AND_IF__ETC___d1171 ||
	     WILL_FIRE_RL_lower_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_1_fi0_is_empty ;

  // register lower_merges_1_routeFrom
  assign lower_merges_1_routeFrom_D_IN =
	     { !lower_merges_1_routeFrom[1], !lower_merges_1_fi0HasPrio } ;
  assign lower_merges_1_routeFrom_EN =
	     WILL_FIRE_RL_lower_merges_1_both_have_data &&
	     (lower_merges_1_routeFrom[1] &&
	      IF_lower_merges_1_routeFrom_125_BIT_0_127_THEN_ETC___d1158 ||
	      !lower_merges_1_routeFrom[1] &&
	      IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1163) ;

  // register lower_merges_2_fi0HasPrio
  always@(MUX_lower_merges_2_fi0HasPrio_write_1__SEL_1 or
	  lower_merges_2_fi0HasPrio or
	  WILL_FIRE_RL_lower_merges_2_fi1_is_empty or
	  WILL_FIRE_RL_lower_merges_2_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_2_fi0HasPrio_write_1__SEL_1:
	  lower_merges_2_fi0HasPrio_D_IN = !lower_merges_2_fi0HasPrio;
      WILL_FIRE_RL_lower_merges_2_fi1_is_empty:
	  lower_merges_2_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_merges_2_fi0_is_empty:
	  lower_merges_2_fi0HasPrio_D_IN = 1'd1;
      default: lower_merges_2_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_merges_2_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_merges_2_both_have_data &&
	     lower_merges_2_routeFrom_200_BIT_1_201_AND_IF__ETC___d1246 ||
	     WILL_FIRE_RL_lower_merges_2_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_2_fi0_is_empty ;

  // register lower_merges_2_routeFrom
  assign lower_merges_2_routeFrom_D_IN =
	     { !lower_merges_2_routeFrom[1], !lower_merges_2_fi0HasPrio } ;
  assign lower_merges_2_routeFrom_EN =
	     WILL_FIRE_RL_lower_merges_2_both_have_data &&
	     (lower_merges_2_routeFrom[1] &&
	      IF_lower_merges_2_routeFrom_200_BIT_0_202_THEN_ETC___d1233 ||
	      !lower_merges_2_routeFrom[1] &&
	      IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1238) ;

  // register lower_merges_3_fi0HasPrio
  always@(MUX_lower_merges_3_fi0HasPrio_write_1__SEL_1 or
	  lower_merges_3_fi0HasPrio or
	  WILL_FIRE_RL_lower_merges_3_fi1_is_empty or
	  WILL_FIRE_RL_lower_merges_3_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_3_fi0HasPrio_write_1__SEL_1:
	  lower_merges_3_fi0HasPrio_D_IN = !lower_merges_3_fi0HasPrio;
      WILL_FIRE_RL_lower_merges_3_fi1_is_empty:
	  lower_merges_3_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_merges_3_fi0_is_empty:
	  lower_merges_3_fi0HasPrio_D_IN = 1'd1;
      default: lower_merges_3_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_merges_3_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_merges_3_both_have_data &&
	     lower_merges_3_routeFrom_275_BIT_1_276_AND_IF__ETC___d1321 ||
	     WILL_FIRE_RL_lower_merges_3_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_3_fi0_is_empty ;

  // register lower_merges_3_routeFrom
  assign lower_merges_3_routeFrom_D_IN =
	     { !lower_merges_3_routeFrom[1], !lower_merges_3_fi0HasPrio } ;
  assign lower_merges_3_routeFrom_EN =
	     WILL_FIRE_RL_lower_merges_3_both_have_data &&
	     (lower_merges_3_routeFrom[1] &&
	      IF_lower_merges_3_routeFrom_275_BIT_0_277_THEN_ETC___d1308 ||
	      !lower_merges_3_routeFrom[1] &&
	      IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1313) ;

  // register lower_merges_fi0HasPrio
  always@(MUX_lower_merges_fi0HasPrio_write_1__SEL_1 or
	  lower_merges_fi0HasPrio or
	  WILL_FIRE_RL_lower_merges_fi1_is_empty or
	  WILL_FIRE_RL_lower_merges_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_fi0HasPrio_write_1__SEL_1:
	  lower_merges_fi0HasPrio_D_IN = !lower_merges_fi0HasPrio;
      WILL_FIRE_RL_lower_merges_fi1_is_empty:
	  lower_merges_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_merges_fi0_is_empty:
	  lower_merges_fi0HasPrio_D_IN = 1'd1;
      default: lower_merges_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_merges_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_merges_both_have_data &&
	     lower_merges_routeFrom_050_BIT_1_051_AND_IF_lo_ETC___d1096 ||
	     WILL_FIRE_RL_lower_merges_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_fi0_is_empty ;

  // register lower_merges_routeFrom
  assign lower_merges_routeFrom_D_IN =
	     { !lower_merges_routeFrom[1], !lower_merges_fi0HasPrio } ;
  assign lower_merges_routeFrom_EN =
	     WILL_FIRE_RL_lower_merges_both_have_data &&
	     (lower_merges_routeFrom[1] &&
	      IF_lower_merges_routeFrom_050_BIT_0_052_THEN_l_ETC___d1083 ||
	      !lower_merges_routeFrom[1] &&
	      IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1088) ;

  // register lower_upper_merges_1_fi0HasPrio
  always@(MUX_lower_upper_merges_1_fi0HasPrio_write_1__SEL_1 or
	  lower_upper_merges_1_fi0HasPrio or
	  WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty or
	  WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_upper_merges_1_fi0HasPrio_write_1__SEL_1:
	  lower_upper_merges_1_fi0HasPrio_D_IN =
	      !lower_upper_merges_1_fi0HasPrio;
      WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty:
	  lower_upper_merges_1_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty:
	  lower_upper_merges_1_fi0HasPrio_D_IN = 1'd1;
      default: lower_upper_merges_1_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_upper_merges_1_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	     lower_upper_merges_1_routeFrom_81_BIT_1_82_AND_ETC___d827 ||
	     WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty ;

  // register lower_upper_merges_1_routeFrom
  assign lower_upper_merges_1_routeFrom_D_IN =
	     { !lower_upper_merges_1_routeFrom[1],
	       !lower_upper_merges_1_fi0HasPrio } ;
  assign lower_upper_merges_1_routeFrom_EN =
	     WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	     (lower_upper_merges_1_routeFrom[1] &&
	      IF_lower_upper_merges_1_routeFrom_81_BIT_0_83__ETC___d814 ||
	      !lower_upper_merges_1_routeFrom[1] &&
	      IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d819) ;

  // register lower_upper_merges_fi0HasPrio
  always@(MUX_lower_upper_merges_fi0HasPrio_write_1__SEL_1 or
	  lower_upper_merges_fi0HasPrio or
	  WILL_FIRE_RL_lower_upper_merges_fi1_is_empty or
	  WILL_FIRE_RL_lower_upper_merges_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_upper_merges_fi0HasPrio_write_1__SEL_1:
	  lower_upper_merges_fi0HasPrio_D_IN = !lower_upper_merges_fi0HasPrio;
      WILL_FIRE_RL_lower_upper_merges_fi1_is_empty:
	  lower_upper_merges_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_lower_upper_merges_fi0_is_empty:
	  lower_upper_merges_fi0HasPrio_D_IN = 1'd1;
      default: lower_upper_merges_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign lower_upper_merges_fi0HasPrio_EN =
	     WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	     lower_upper_merges_routeFrom_06_BIT_1_07_AND_I_ETC___d752 ||
	     WILL_FIRE_RL_lower_upper_merges_fi1_is_empty ||
	     WILL_FIRE_RL_lower_upper_merges_fi0_is_empty ;

  // register lower_upper_merges_routeFrom
  assign lower_upper_merges_routeFrom_D_IN =
	     { !lower_upper_merges_routeFrom[1],
	       !lower_upper_merges_fi0HasPrio } ;
  assign lower_upper_merges_routeFrom_EN =
	     WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	     (lower_upper_merges_routeFrom[1] &&
	      IF_lower_upper_merges_routeFrom_06_BIT_0_08_TH_ETC___d739 ||
	      !lower_upper_merges_routeFrom[1] &&
	      IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d744) ;

  // register merges_1_fi0HasPrio
  always@(MUX_merges_1_fi0HasPrio_write_1__SEL_1 or
	  merges_1_fi0HasPrio or
	  WILL_FIRE_RL_merges_1_fi1_is_empty or
	  WILL_FIRE_RL_merges_1_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_1_fi0HasPrio_write_1__SEL_1:
	  merges_1_fi0HasPrio_D_IN = !merges_1_fi0HasPrio;
      WILL_FIRE_RL_merges_1_fi1_is_empty: merges_1_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_1_fi0_is_empty: merges_1_fi0HasPrio_D_IN = 1'd1;
      default: merges_1_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_1_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_1_both_have_data &&
	     merges_1_routeFrom_469_BIT_1_470_AND_IF_merges_ETC___d1515 ||
	     WILL_FIRE_RL_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_merges_1_fi0_is_empty ;

  // register merges_1_routeFrom
  assign merges_1_routeFrom_D_IN =
	     { !merges_1_routeFrom[1], !merges_1_fi0HasPrio } ;
  assign merges_1_routeFrom_EN =
	     WILL_FIRE_RL_merges_1_both_have_data &&
	     (merges_1_routeFrom[1] &&
	      IF_merges_1_routeFrom_469_BIT_0_471_THEN_merge_ETC___d1502 ||
	      !merges_1_routeFrom[1] &&
	      IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1507) ;

  // register merges_2_fi0HasPrio
  always@(MUX_merges_2_fi0HasPrio_write_1__SEL_1 or
	  merges_2_fi0HasPrio or
	  WILL_FIRE_RL_merges_2_fi1_is_empty or
	  WILL_FIRE_RL_merges_2_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_2_fi0HasPrio_write_1__SEL_1:
	  merges_2_fi0HasPrio_D_IN = !merges_2_fi0HasPrio;
      WILL_FIRE_RL_merges_2_fi1_is_empty: merges_2_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_2_fi0_is_empty: merges_2_fi0HasPrio_D_IN = 1'd1;
      default: merges_2_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_2_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_2_both_have_data &&
	     merges_2_routeFrom_544_BIT_1_545_AND_IF_merges_ETC___d1590 ||
	     WILL_FIRE_RL_merges_2_fi1_is_empty ||
	     WILL_FIRE_RL_merges_2_fi0_is_empty ;

  // register merges_2_routeFrom
  assign merges_2_routeFrom_D_IN =
	     { !merges_2_routeFrom[1], !merges_2_fi0HasPrio } ;
  assign merges_2_routeFrom_EN =
	     WILL_FIRE_RL_merges_2_both_have_data &&
	     (merges_2_routeFrom[1] &&
	      IF_merges_2_routeFrom_544_BIT_0_546_THEN_merge_ETC___d1577 ||
	      !merges_2_routeFrom[1] &&
	      IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1582) ;

  // register merges_3_fi0HasPrio
  always@(MUX_merges_3_fi0HasPrio_write_1__SEL_1 or
	  merges_3_fi0HasPrio or
	  WILL_FIRE_RL_merges_3_fi1_is_empty or
	  WILL_FIRE_RL_merges_3_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_3_fi0HasPrio_write_1__SEL_1:
	  merges_3_fi0HasPrio_D_IN = !merges_3_fi0HasPrio;
      WILL_FIRE_RL_merges_3_fi1_is_empty: merges_3_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_3_fi0_is_empty: merges_3_fi0HasPrio_D_IN = 1'd1;
      default: merges_3_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_3_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_3_both_have_data &&
	     merges_3_routeFrom_619_BIT_1_620_AND_IF_merges_ETC___d1665 ||
	     WILL_FIRE_RL_merges_3_fi1_is_empty ||
	     WILL_FIRE_RL_merges_3_fi0_is_empty ;

  // register merges_3_routeFrom
  assign merges_3_routeFrom_D_IN =
	     { !merges_3_routeFrom[1], !merges_3_fi0HasPrio } ;
  assign merges_3_routeFrom_EN =
	     WILL_FIRE_RL_merges_3_both_have_data &&
	     (merges_3_routeFrom[1] &&
	      IF_merges_3_routeFrom_619_BIT_0_621_THEN_merge_ETC___d1652 ||
	      !merges_3_routeFrom[1] &&
	      IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1657) ;

  // register merges_4_fi0HasPrio
  always@(MUX_merges_4_fi0HasPrio_write_1__SEL_1 or
	  merges_4_fi0HasPrio or
	  WILL_FIRE_RL_merges_4_fi1_is_empty or
	  WILL_FIRE_RL_merges_4_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_4_fi0HasPrio_write_1__SEL_1:
	  merges_4_fi0HasPrio_D_IN = !merges_4_fi0HasPrio;
      WILL_FIRE_RL_merges_4_fi1_is_empty: merges_4_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_4_fi0_is_empty: merges_4_fi0HasPrio_D_IN = 1'd1;
      default: merges_4_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_4_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_4_both_have_data &&
	     merges_4_routeFrom_694_BIT_1_695_AND_IF_merges_ETC___d1740 ||
	     WILL_FIRE_RL_merges_4_fi1_is_empty ||
	     WILL_FIRE_RL_merges_4_fi0_is_empty ;

  // register merges_4_routeFrom
  assign merges_4_routeFrom_D_IN =
	     { !merges_4_routeFrom[1], !merges_4_fi0HasPrio } ;
  assign merges_4_routeFrom_EN =
	     WILL_FIRE_RL_merges_4_both_have_data &&
	     (merges_4_routeFrom[1] &&
	      IF_merges_4_routeFrom_694_BIT_0_696_THEN_merge_ETC___d1727 ||
	      !merges_4_routeFrom[1] &&
	      IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1732) ;

  // register merges_5_fi0HasPrio
  always@(MUX_merges_5_fi0HasPrio_write_1__SEL_1 or
	  merges_5_fi0HasPrio or
	  WILL_FIRE_RL_merges_5_fi1_is_empty or
	  WILL_FIRE_RL_merges_5_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_5_fi0HasPrio_write_1__SEL_1:
	  merges_5_fi0HasPrio_D_IN = !merges_5_fi0HasPrio;
      WILL_FIRE_RL_merges_5_fi1_is_empty: merges_5_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_5_fi0_is_empty: merges_5_fi0HasPrio_D_IN = 1'd1;
      default: merges_5_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_5_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_5_both_have_data &&
	     merges_5_routeFrom_769_BIT_1_770_AND_IF_merges_ETC___d1815 ||
	     WILL_FIRE_RL_merges_5_fi1_is_empty ||
	     WILL_FIRE_RL_merges_5_fi0_is_empty ;

  // register merges_5_routeFrom
  assign merges_5_routeFrom_D_IN =
	     { !merges_5_routeFrom[1], !merges_5_fi0HasPrio } ;
  assign merges_5_routeFrom_EN =
	     WILL_FIRE_RL_merges_5_both_have_data &&
	     (merges_5_routeFrom[1] &&
	      IF_merges_5_routeFrom_769_BIT_0_771_THEN_merge_ETC___d1802 ||
	      !merges_5_routeFrom[1] &&
	      IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1807) ;

  // register merges_6_fi0HasPrio
  always@(MUX_merges_6_fi0HasPrio_write_1__SEL_1 or
	  merges_6_fi0HasPrio or
	  WILL_FIRE_RL_merges_6_fi1_is_empty or
	  WILL_FIRE_RL_merges_6_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_6_fi0HasPrio_write_1__SEL_1:
	  merges_6_fi0HasPrio_D_IN = !merges_6_fi0HasPrio;
      WILL_FIRE_RL_merges_6_fi1_is_empty: merges_6_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_6_fi0_is_empty: merges_6_fi0HasPrio_D_IN = 1'd1;
      default: merges_6_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_6_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_6_both_have_data &&
	     merges_6_routeFrom_844_BIT_1_845_AND_IF_merges_ETC___d1890 ||
	     WILL_FIRE_RL_merges_6_fi1_is_empty ||
	     WILL_FIRE_RL_merges_6_fi0_is_empty ;

  // register merges_6_routeFrom
  assign merges_6_routeFrom_D_IN =
	     { !merges_6_routeFrom[1], !merges_6_fi0HasPrio } ;
  assign merges_6_routeFrom_EN =
	     WILL_FIRE_RL_merges_6_both_have_data &&
	     (merges_6_routeFrom[1] &&
	      IF_merges_6_routeFrom_844_BIT_0_846_THEN_merge_ETC___d1877 ||
	      !merges_6_routeFrom[1] &&
	      IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1882) ;

  // register merges_7_fi0HasPrio
  always@(MUX_merges_7_fi0HasPrio_write_1__SEL_1 or
	  merges_7_fi0HasPrio or
	  WILL_FIRE_RL_merges_7_fi1_is_empty or
	  WILL_FIRE_RL_merges_7_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_7_fi0HasPrio_write_1__SEL_1:
	  merges_7_fi0HasPrio_D_IN = !merges_7_fi0HasPrio;
      WILL_FIRE_RL_merges_7_fi1_is_empty: merges_7_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_7_fi0_is_empty: merges_7_fi0HasPrio_D_IN = 1'd1;
      default: merges_7_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_7_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_7_both_have_data &&
	     merges_7_routeFrom_919_BIT_1_920_AND_IF_merges_ETC___d1965 ||
	     WILL_FIRE_RL_merges_7_fi1_is_empty ||
	     WILL_FIRE_RL_merges_7_fi0_is_empty ;

  // register merges_7_routeFrom
  assign merges_7_routeFrom_D_IN =
	     { !merges_7_routeFrom[1], !merges_7_fi0HasPrio } ;
  assign merges_7_routeFrom_EN =
	     WILL_FIRE_RL_merges_7_both_have_data &&
	     (merges_7_routeFrom[1] &&
	      IF_merges_7_routeFrom_919_BIT_0_921_THEN_merge_ETC___d1952 ||
	      !merges_7_routeFrom[1] &&
	      IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1957) ;

  // register merges_fi0HasPrio
  always@(MUX_merges_fi0HasPrio_write_1__SEL_1 or
	  merges_fi0HasPrio or
	  WILL_FIRE_RL_merges_fi1_is_empty or
	  WILL_FIRE_RL_merges_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_fi0HasPrio_write_1__SEL_1:
	  merges_fi0HasPrio_D_IN = !merges_fi0HasPrio;
      WILL_FIRE_RL_merges_fi1_is_empty: merges_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_merges_fi0_is_empty: merges_fi0HasPrio_D_IN = 1'd1;
      default: merges_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign merges_fi0HasPrio_EN =
	     WILL_FIRE_RL_merges_both_have_data &&
	     merges_routeFrom_394_BIT_1_395_AND_IF_merges_r_ETC___d1440 ||
	     WILL_FIRE_RL_merges_fi1_is_empty ||
	     WILL_FIRE_RL_merges_fi0_is_empty ;

  // register merges_routeFrom
  assign merges_routeFrom_D_IN =
	     { !merges_routeFrom[1], !merges_fi0HasPrio } ;
  assign merges_routeFrom_EN =
	     WILL_FIRE_RL_merges_both_have_data &&
	     (merges_routeFrom[1] &&
	      IF_merges_routeFrom_394_BIT_0_396_THEN_merges__ETC___d1427 ||
	      !merges_routeFrom[1] &&
	      IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1432) ;

  // register upper_lower_merges_1_fi0HasPrio
  always@(MUX_upper_lower_merges_1_fi0HasPrio_write_1__SEL_1 or
	  upper_lower_merges_1_fi0HasPrio or
	  WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty or
	  WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_lower_merges_1_fi0HasPrio_write_1__SEL_1:
	  upper_lower_merges_1_fi0HasPrio_D_IN =
	      !upper_lower_merges_1_fi0HasPrio;
      WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty:
	  upper_lower_merges_1_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty:
	  upper_lower_merges_1_fi0HasPrio_D_IN = 1'd1;
      default: upper_lower_merges_1_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_lower_merges_1_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	     upper_lower_merges_1_routeFrom_63_BIT_1_64_AND_ETC___d309 ||
	     WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty ;

  // register upper_lower_merges_1_routeFrom
  assign upper_lower_merges_1_routeFrom_D_IN =
	     { !upper_lower_merges_1_routeFrom[1],
	       !upper_lower_merges_1_fi0HasPrio } ;
  assign upper_lower_merges_1_routeFrom_EN =
	     WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	     (upper_lower_merges_1_routeFrom[1] &&
	      IF_upper_lower_merges_1_routeFrom_63_BIT_0_65__ETC___d296 ||
	      !upper_lower_merges_1_routeFrom[1] &&
	      IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d301) ;

  // register upper_lower_merges_fi0HasPrio
  always@(MUX_upper_lower_merges_fi0HasPrio_write_1__SEL_1 or
	  upper_lower_merges_fi0HasPrio or
	  WILL_FIRE_RL_upper_lower_merges_fi1_is_empty or
	  WILL_FIRE_RL_upper_lower_merges_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_lower_merges_fi0HasPrio_write_1__SEL_1:
	  upper_lower_merges_fi0HasPrio_D_IN = !upper_lower_merges_fi0HasPrio;
      WILL_FIRE_RL_upper_lower_merges_fi1_is_empty:
	  upper_lower_merges_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_lower_merges_fi0_is_empty:
	  upper_lower_merges_fi0HasPrio_D_IN = 1'd1;
      default: upper_lower_merges_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_lower_merges_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	     upper_lower_merges_routeFrom_88_BIT_1_89_AND_I_ETC___d234 ||
	     WILL_FIRE_RL_upper_lower_merges_fi1_is_empty ||
	     WILL_FIRE_RL_upper_lower_merges_fi0_is_empty ;

  // register upper_lower_merges_routeFrom
  assign upper_lower_merges_routeFrom_D_IN =
	     { !upper_lower_merges_routeFrom[1],
	       !upper_lower_merges_fi0HasPrio } ;
  assign upper_lower_merges_routeFrom_EN =
	     WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	     (upper_lower_merges_routeFrom[1] &&
	      IF_upper_lower_merges_routeFrom_88_BIT_0_90_TH_ETC___d221 ||
	      !upper_lower_merges_routeFrom[1] &&
	      IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d226) ;

  // register upper_merges_1_fi0HasPrio
  always@(MUX_upper_merges_1_fi0HasPrio_write_1__SEL_1 or
	  upper_merges_1_fi0HasPrio or
	  WILL_FIRE_RL_upper_merges_1_fi1_is_empty or
	  WILL_FIRE_RL_upper_merges_1_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_1_fi0HasPrio_write_1__SEL_1:
	  upper_merges_1_fi0HasPrio_D_IN = !upper_merges_1_fi0HasPrio;
      WILL_FIRE_RL_upper_merges_1_fi1_is_empty:
	  upper_merges_1_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_merges_1_fi0_is_empty:
	  upper_merges_1_fi0HasPrio_D_IN = 1'd1;
      default: upper_merges_1_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_merges_1_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_merges_1_both_have_data &&
	     upper_merges_1_routeFrom_35_BIT_1_36_AND_IF_up_ETC___d481 ||
	     WILL_FIRE_RL_upper_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_1_fi0_is_empty ;

  // register upper_merges_1_routeFrom
  assign upper_merges_1_routeFrom_D_IN =
	     { !upper_merges_1_routeFrom[1], !upper_merges_1_fi0HasPrio } ;
  assign upper_merges_1_routeFrom_EN =
	     WILL_FIRE_RL_upper_merges_1_both_have_data &&
	     (upper_merges_1_routeFrom[1] &&
	      IF_upper_merges_1_routeFrom_35_BIT_0_37_THEN_u_ETC___d468 ||
	      !upper_merges_1_routeFrom[1] &&
	      IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d473) ;

  // register upper_merges_2_fi0HasPrio
  always@(MUX_upper_merges_2_fi0HasPrio_write_1__SEL_1 or
	  upper_merges_2_fi0HasPrio or
	  WILL_FIRE_RL_upper_merges_2_fi1_is_empty or
	  WILL_FIRE_RL_upper_merges_2_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_2_fi0HasPrio_write_1__SEL_1:
	  upper_merges_2_fi0HasPrio_D_IN = !upper_merges_2_fi0HasPrio;
      WILL_FIRE_RL_upper_merges_2_fi1_is_empty:
	  upper_merges_2_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_merges_2_fi0_is_empty:
	  upper_merges_2_fi0HasPrio_D_IN = 1'd1;
      default: upper_merges_2_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_merges_2_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_merges_2_both_have_data &&
	     upper_merges_2_routeFrom_10_BIT_1_11_AND_IF_up_ETC___d556 ||
	     WILL_FIRE_RL_upper_merges_2_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_2_fi0_is_empty ;

  // register upper_merges_2_routeFrom
  assign upper_merges_2_routeFrom_D_IN =
	     { !upper_merges_2_routeFrom[1], !upper_merges_2_fi0HasPrio } ;
  assign upper_merges_2_routeFrom_EN =
	     WILL_FIRE_RL_upper_merges_2_both_have_data &&
	     (upper_merges_2_routeFrom[1] &&
	      IF_upper_merges_2_routeFrom_10_BIT_0_12_THEN_u_ETC___d543 ||
	      !upper_merges_2_routeFrom[1] &&
	      IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d548) ;

  // register upper_merges_3_fi0HasPrio
  always@(MUX_upper_merges_3_fi0HasPrio_write_1__SEL_1 or
	  upper_merges_3_fi0HasPrio or
	  WILL_FIRE_RL_upper_merges_3_fi1_is_empty or
	  WILL_FIRE_RL_upper_merges_3_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_3_fi0HasPrio_write_1__SEL_1:
	  upper_merges_3_fi0HasPrio_D_IN = !upper_merges_3_fi0HasPrio;
      WILL_FIRE_RL_upper_merges_3_fi1_is_empty:
	  upper_merges_3_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_merges_3_fi0_is_empty:
	  upper_merges_3_fi0HasPrio_D_IN = 1'd1;
      default: upper_merges_3_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_merges_3_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_merges_3_both_have_data &&
	     upper_merges_3_routeFrom_85_BIT_1_86_AND_IF_up_ETC___d631 ||
	     WILL_FIRE_RL_upper_merges_3_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_3_fi0_is_empty ;

  // register upper_merges_3_routeFrom
  assign upper_merges_3_routeFrom_D_IN =
	     { !upper_merges_3_routeFrom[1], !upper_merges_3_fi0HasPrio } ;
  assign upper_merges_3_routeFrom_EN =
	     WILL_FIRE_RL_upper_merges_3_both_have_data &&
	     (upper_merges_3_routeFrom[1] &&
	      IF_upper_merges_3_routeFrom_85_BIT_0_87_THEN_u_ETC___d618 ||
	      !upper_merges_3_routeFrom[1] &&
	      IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d623) ;

  // register upper_merges_fi0HasPrio
  always@(MUX_upper_merges_fi0HasPrio_write_1__SEL_1 or
	  upper_merges_fi0HasPrio or
	  WILL_FIRE_RL_upper_merges_fi1_is_empty or
	  WILL_FIRE_RL_upper_merges_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_fi0HasPrio_write_1__SEL_1:
	  upper_merges_fi0HasPrio_D_IN = !upper_merges_fi0HasPrio;
      WILL_FIRE_RL_upper_merges_fi1_is_empty:
	  upper_merges_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_merges_fi0_is_empty:
	  upper_merges_fi0HasPrio_D_IN = 1'd1;
      default: upper_merges_fi0HasPrio_D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_merges_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_merges_both_have_data &&
	     upper_merges_routeFrom_60_BIT_1_61_AND_IF_uppe_ETC___d406 ||
	     WILL_FIRE_RL_upper_merges_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_fi0_is_empty ;

  // register upper_merges_routeFrom
  assign upper_merges_routeFrom_D_IN =
	     { !upper_merges_routeFrom[1], !upper_merges_fi0HasPrio } ;
  assign upper_merges_routeFrom_EN =
	     WILL_FIRE_RL_upper_merges_both_have_data &&
	     (upper_merges_routeFrom[1] &&
	      IF_upper_merges_routeFrom_60_BIT_0_62_THEN_upp_ETC___d393 ||
	      !upper_merges_routeFrom[1] &&
	      IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d398) ;

  // register upper_upper_merges_1_fi0HasPrio
  always@(MUX_upper_upper_merges_1_fi0HasPrio_write_1__SEL_1 or
	  upper_upper_merges_1_fi0HasPrio or
	  WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty or
	  WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_upper_merges_1_fi0HasPrio_write_1__SEL_1:
	  upper_upper_merges_1_fi0HasPrio_D_IN =
	      !upper_upper_merges_1_fi0HasPrio;
      WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty:
	  upper_upper_merges_1_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty:
	  upper_upper_merges_1_fi0HasPrio_D_IN = 1'd1;
      default: upper_upper_merges_1_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_upper_merges_1_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	     upper_upper_merges_1_routeFrom_9_BIT_1_0_AND_I_ETC___d135 ||
	     WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty ;

  // register upper_upper_merges_1_routeFrom
  assign upper_upper_merges_1_routeFrom_D_IN =
	     { !upper_upper_merges_1_routeFrom[1],
	       !upper_upper_merges_1_fi0HasPrio } ;
  assign upper_upper_merges_1_routeFrom_EN =
	     WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	     (upper_upper_merges_1_routeFrom[1] &&
	      IF_upper_upper_merges_1_routeFrom_9_BIT_0_1_TH_ETC___d122 ||
	      !upper_upper_merges_1_routeFrom[1] &&
	      IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d127) ;

  // register upper_upper_merges_fi0HasPrio
  always@(MUX_upper_upper_merges_fi0HasPrio_write_1__SEL_1 or
	  upper_upper_merges_fi0HasPrio or
	  WILL_FIRE_RL_upper_upper_merges_fi1_is_empty or
	  WILL_FIRE_RL_upper_upper_merges_fi0_is_empty)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_upper_merges_fi0HasPrio_write_1__SEL_1:
	  upper_upper_merges_fi0HasPrio_D_IN = !upper_upper_merges_fi0HasPrio;
      WILL_FIRE_RL_upper_upper_merges_fi1_is_empty:
	  upper_upper_merges_fi0HasPrio_D_IN = 1'd0;
      WILL_FIRE_RL_upper_upper_merges_fi0_is_empty:
	  upper_upper_merges_fi0HasPrio_D_IN = 1'd1;
      default: upper_upper_merges_fi0HasPrio_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign upper_upper_merges_fi0HasPrio_EN =
	     WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	     upper_upper_merges_routeFrom_4_BIT_1_5_AND_IF__ETC___d60 ||
	     WILL_FIRE_RL_upper_upper_merges_fi1_is_empty ||
	     WILL_FIRE_RL_upper_upper_merges_fi0_is_empty ;

  // register upper_upper_merges_routeFrom
  assign upper_upper_merges_routeFrom_D_IN =
	     { !upper_upper_merges_routeFrom[1],
	       !upper_upper_merges_fi0HasPrio } ;
  assign upper_upper_merges_routeFrom_EN =
	     WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	     (upper_upper_merges_routeFrom[1] &&
	      IF_upper_upper_merges_routeFrom_4_BIT_0_6_THEN_ETC___d47 ||
	      !upper_upper_merges_routeFrom[1] &&
	      IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d52) ;

  // submodule lower_lower_lower_f
  assign lower_lower_lower_f_D_IN = input_ports_7_put ;
  assign lower_lower_lower_f_ENQ = EN_input_ports_7_put ;
  assign lower_lower_lower_f_DEQ = WILL_FIRE_RL_lower_lower_route_1 ;
  assign lower_lower_lower_f_CLR = 1'b0 ;

  // submodule lower_lower_merges_1_fi0
  assign lower_lower_merges_1_fi0_D_IN = lower_lower_lower_f_D_OUT ;
  assign lower_lower_merges_1_fi0_ENQ =
	     WILL_FIRE_RL_lower_lower_route_1 &&
	     lower_lower_lower_f_D_OUT[578] ;
  assign lower_lower_merges_1_fi0_DEQ =
	     WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	     (lower_lower_merges_1_routeFrom[1] &&
	      !lower_lower_merges_1_routeFrom[0] ||
	      !lower_lower_merges_1_routeFrom[1] &&
	      lower_lower_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty ;
  assign lower_lower_merges_1_fi0_CLR = 1'b0 ;

  // submodule lower_lower_merges_1_fi1
  assign lower_lower_merges_1_fi1_D_IN = lower_lower_upper_f_D_OUT ;
  assign lower_lower_merges_1_fi1_ENQ =
	     WILL_FIRE_RL_lower_lower_route &&
	     lower_lower_upper_f_D_OUT[578] ;
  assign lower_lower_merges_1_fi1_DEQ =
	     WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	     (lower_lower_merges_1_routeFrom[1] &&
	      lower_lower_merges_1_routeFrom[0] ||
	      !lower_lower_merges_1_routeFrom[1] &&
	      !lower_lower_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty ;
  assign lower_lower_merges_1_fi1_CLR = 1'b0 ;

  // submodule lower_lower_merges_1_fo
  always@(MUX_lower_lower_merges_1_fo_enq_1__SEL_1 or
	  MUX_lower_lower_merges_1_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty or
	  lower_lower_merges_1_fi0_D_OUT or
	  WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty or
	  lower_lower_merges_1_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_lower_merges_1_fo_enq_1__SEL_1:
	  lower_lower_merges_1_fo_D_IN =
	      MUX_lower_lower_merges_1_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty:
	  lower_lower_merges_1_fo_D_IN = lower_lower_merges_1_fi0_D_OUT;
      WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty:
	  lower_lower_merges_1_fo_D_IN = lower_lower_merges_1_fi1_D_OUT;
      default: lower_lower_merges_1_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_lower_merges_1_fo_ENQ =
	     WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	     (lower_lower_merges_1_routeFrom[1] ||
	      IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d979) ||
	     WILL_FIRE_RL_lower_lower_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_lower_lower_merges_1_fi0_is_empty ;
  assign lower_lower_merges_1_fo_DEQ = WILL_FIRE_RL_lower_route_3 ;
  assign lower_lower_merges_1_fo_CLR = 1'b0 ;

  // submodule lower_lower_merges_fi0
  assign lower_lower_merges_fi0_D_IN = lower_lower_upper_f_D_OUT ;
  assign lower_lower_merges_fi0_ENQ =
	     WILL_FIRE_RL_lower_lower_route &&
	     !lower_lower_upper_f_D_OUT[578] ;
  assign lower_lower_merges_fi0_DEQ =
	     WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	     (lower_lower_merges_routeFrom[1] &&
	      !lower_lower_merges_routeFrom[0] ||
	      !lower_lower_merges_routeFrom[1] &&
	      lower_lower_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_lower_merges_fi1_is_empty ;
  assign lower_lower_merges_fi0_CLR = 1'b0 ;

  // submodule lower_lower_merges_fi1
  assign lower_lower_merges_fi1_D_IN = lower_lower_lower_f_D_OUT ;
  assign lower_lower_merges_fi1_ENQ =
	     WILL_FIRE_RL_lower_lower_route_1 &&
	     !lower_lower_lower_f_D_OUT[578] ;
  assign lower_lower_merges_fi1_DEQ =
	     WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	     (lower_lower_merges_routeFrom[1] &&
	      lower_lower_merges_routeFrom[0] ||
	      !lower_lower_merges_routeFrom[1] &&
	      !lower_lower_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_lower_merges_fi0_is_empty ;
  assign lower_lower_merges_fi1_CLR = 1'b0 ;

  // submodule lower_lower_merges_fo
  always@(MUX_lower_lower_merges_fo_enq_1__SEL_1 or
	  MUX_lower_lower_merges_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_lower_merges_fi1_is_empty or
	  lower_lower_merges_fi0_D_OUT or
	  WILL_FIRE_RL_lower_lower_merges_fi0_is_empty or
	  lower_lower_merges_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_lower_merges_fo_enq_1__SEL_1:
	  lower_lower_merges_fo_D_IN = MUX_lower_lower_merges_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_lower_merges_fi1_is_empty:
	  lower_lower_merges_fo_D_IN = lower_lower_merges_fi0_D_OUT;
      WILL_FIRE_RL_lower_lower_merges_fi0_is_empty:
	  lower_lower_merges_fo_D_IN = lower_lower_merges_fi1_D_OUT;
      default: lower_lower_merges_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_lower_merges_fo_ENQ =
	     WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	     (lower_lower_merges_routeFrom[1] ||
	      IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d904) ||
	     WILL_FIRE_RL_lower_lower_merges_fi1_is_empty ||
	     WILL_FIRE_RL_lower_lower_merges_fi0_is_empty ;
  assign lower_lower_merges_fo_DEQ = WILL_FIRE_RL_lower_route_2 ;
  assign lower_lower_merges_fo_CLR = 1'b0 ;

  // submodule lower_lower_upper_f
  assign lower_lower_upper_f_D_IN = input_ports_6_put ;
  assign lower_lower_upper_f_ENQ = EN_input_ports_6_put ;
  assign lower_lower_upper_f_DEQ = WILL_FIRE_RL_lower_lower_route ;
  assign lower_lower_upper_f_CLR = 1'b0 ;

  // submodule lower_merges_1_fi0
  assign lower_merges_1_fi0_D_IN = lower_upper_merges_1_fo_D_OUT ;
  assign lower_merges_1_fi0_ENQ =
	     WILL_FIRE_RL_lower_route_1 &&
	     !lower_upper_merges_1_fo_D_OUT[579] ;
  assign lower_merges_1_fi0_DEQ =
	     WILL_FIRE_RL_lower_merges_1_both_have_data &&
	     (lower_merges_1_routeFrom[1] && !lower_merges_1_routeFrom[0] ||
	      !lower_merges_1_routeFrom[1] && lower_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_1_fi1_is_empty ;
  assign lower_merges_1_fi0_CLR = 1'b0 ;

  // submodule lower_merges_1_fi1
  assign lower_merges_1_fi1_D_IN = lower_lower_merges_1_fo_D_OUT ;
  assign lower_merges_1_fi1_ENQ =
	     WILL_FIRE_RL_lower_route_3 &&
	     !lower_lower_merges_1_fo_D_OUT[579] ;
  assign lower_merges_1_fi1_DEQ =
	     WILL_FIRE_RL_lower_merges_1_both_have_data &&
	     (lower_merges_1_routeFrom[1] && lower_merges_1_routeFrom[0] ||
	      !lower_merges_1_routeFrom[1] && !lower_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_1_fi0_is_empty ;
  assign lower_merges_1_fi1_CLR = 1'b0 ;

  // submodule lower_merges_1_fo
  always@(MUX_lower_merges_1_fo_enq_1__SEL_1 or
	  MUX_lower_merges_1_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_merges_1_fi1_is_empty or
	  lower_merges_1_fi0_D_OUT or
	  WILL_FIRE_RL_lower_merges_1_fi0_is_empty or
	  lower_merges_1_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_1_fo_enq_1__SEL_1:
	  lower_merges_1_fo_D_IN = MUX_lower_merges_1_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_merges_1_fi1_is_empty:
	  lower_merges_1_fo_D_IN = lower_merges_1_fi0_D_OUT;
      WILL_FIRE_RL_lower_merges_1_fi0_is_empty:
	  lower_merges_1_fo_D_IN = lower_merges_1_fi1_D_OUT;
      default: lower_merges_1_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_merges_1_fo_ENQ =
	     WILL_FIRE_RL_lower_merges_1_both_have_data &&
	     (lower_merges_1_routeFrom[1] ||
	      IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1151) ||
	     WILL_FIRE_RL_lower_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_1_fi0_is_empty ;
  assign lower_merges_1_fo_DEQ = WILL_FIRE_RL_route_5 ;
  assign lower_merges_1_fo_CLR = 1'b0 ;

  // submodule lower_merges_2_fi0
  assign lower_merges_2_fi0_D_IN = lower_lower_merges_fo_D_OUT ;
  assign lower_merges_2_fi0_ENQ =
	     WILL_FIRE_RL_lower_route_2 && lower_lower_merges_fo_D_OUT[579] ;
  assign lower_merges_2_fi0_DEQ =
	     WILL_FIRE_RL_lower_merges_2_both_have_data &&
	     (lower_merges_2_routeFrom[1] && !lower_merges_2_routeFrom[0] ||
	      !lower_merges_2_routeFrom[1] && lower_merges_2_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_2_fi1_is_empty ;
  assign lower_merges_2_fi0_CLR = 1'b0 ;

  // submodule lower_merges_2_fi1
  assign lower_merges_2_fi1_D_IN = lower_upper_merges_fo_D_OUT ;
  assign lower_merges_2_fi1_ENQ =
	     WILL_FIRE_RL_lower_route && lower_upper_merges_fo_D_OUT[579] ;
  assign lower_merges_2_fi1_DEQ =
	     WILL_FIRE_RL_lower_merges_2_both_have_data &&
	     (lower_merges_2_routeFrom[1] && lower_merges_2_routeFrom[0] ||
	      !lower_merges_2_routeFrom[1] && !lower_merges_2_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_2_fi0_is_empty ;
  assign lower_merges_2_fi1_CLR = 1'b0 ;

  // submodule lower_merges_2_fo
  always@(MUX_lower_merges_2_fo_enq_1__SEL_1 or
	  MUX_lower_merges_2_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_merges_2_fi1_is_empty or
	  lower_merges_2_fi0_D_OUT or
	  WILL_FIRE_RL_lower_merges_2_fi0_is_empty or
	  lower_merges_2_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_2_fo_enq_1__SEL_1:
	  lower_merges_2_fo_D_IN = MUX_lower_merges_2_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_merges_2_fi1_is_empty:
	  lower_merges_2_fo_D_IN = lower_merges_2_fi0_D_OUT;
      WILL_FIRE_RL_lower_merges_2_fi0_is_empty:
	  lower_merges_2_fo_D_IN = lower_merges_2_fi1_D_OUT;
      default: lower_merges_2_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_merges_2_fo_ENQ =
	     WILL_FIRE_RL_lower_merges_2_both_have_data &&
	     (lower_merges_2_routeFrom[1] ||
	      IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1226) ||
	     WILL_FIRE_RL_lower_merges_2_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_2_fi0_is_empty ;
  assign lower_merges_2_fo_DEQ = WILL_FIRE_RL_route_6 ;
  assign lower_merges_2_fo_CLR = 1'b0 ;

  // submodule lower_merges_3_fi0
  assign lower_merges_3_fi0_D_IN = lower_lower_merges_1_fo_D_OUT ;
  assign lower_merges_3_fi0_ENQ =
	     WILL_FIRE_RL_lower_route_3 &&
	     lower_lower_merges_1_fo_D_OUT[579] ;
  assign lower_merges_3_fi0_DEQ =
	     WILL_FIRE_RL_lower_merges_3_both_have_data &&
	     (lower_merges_3_routeFrom[1] && !lower_merges_3_routeFrom[0] ||
	      !lower_merges_3_routeFrom[1] && lower_merges_3_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_3_fi1_is_empty ;
  assign lower_merges_3_fi0_CLR = 1'b0 ;

  // submodule lower_merges_3_fi1
  assign lower_merges_3_fi1_D_IN = lower_upper_merges_1_fo_D_OUT ;
  assign lower_merges_3_fi1_ENQ =
	     WILL_FIRE_RL_lower_route_1 &&
	     lower_upper_merges_1_fo_D_OUT[579] ;
  assign lower_merges_3_fi1_DEQ =
	     WILL_FIRE_RL_lower_merges_3_both_have_data &&
	     (lower_merges_3_routeFrom[1] && lower_merges_3_routeFrom[0] ||
	      !lower_merges_3_routeFrom[1] && !lower_merges_3_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_3_fi0_is_empty ;
  assign lower_merges_3_fi1_CLR = 1'b0 ;

  // submodule lower_merges_3_fo
  always@(MUX_lower_merges_3_fo_enq_1__SEL_1 or
	  MUX_lower_merges_3_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_merges_3_fi1_is_empty or
	  lower_merges_3_fi0_D_OUT or
	  WILL_FIRE_RL_lower_merges_3_fi0_is_empty or
	  lower_merges_3_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_3_fo_enq_1__SEL_1:
	  lower_merges_3_fo_D_IN = MUX_lower_merges_3_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_merges_3_fi1_is_empty:
	  lower_merges_3_fo_D_IN = lower_merges_3_fi0_D_OUT;
      WILL_FIRE_RL_lower_merges_3_fi0_is_empty:
	  lower_merges_3_fo_D_IN = lower_merges_3_fi1_D_OUT;
      default: lower_merges_3_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_merges_3_fo_ENQ =
	     WILL_FIRE_RL_lower_merges_3_both_have_data &&
	     (lower_merges_3_routeFrom[1] ||
	      IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1301) ||
	     WILL_FIRE_RL_lower_merges_3_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_3_fi0_is_empty ;
  assign lower_merges_3_fo_DEQ = WILL_FIRE_RL_route_7 ;
  assign lower_merges_3_fo_CLR = 1'b0 ;

  // submodule lower_merges_fi0
  assign lower_merges_fi0_D_IN = lower_upper_merges_fo_D_OUT ;
  assign lower_merges_fi0_ENQ =
	     WILL_FIRE_RL_lower_route && !lower_upper_merges_fo_D_OUT[579] ;
  assign lower_merges_fi0_DEQ =
	     WILL_FIRE_RL_lower_merges_both_have_data &&
	     (lower_merges_routeFrom[1] && !lower_merges_routeFrom[0] ||
	      !lower_merges_routeFrom[1] && lower_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_fi1_is_empty ;
  assign lower_merges_fi0_CLR = 1'b0 ;

  // submodule lower_merges_fi1
  assign lower_merges_fi1_D_IN = lower_lower_merges_fo_D_OUT ;
  assign lower_merges_fi1_ENQ =
	     WILL_FIRE_RL_lower_route_2 && !lower_lower_merges_fo_D_OUT[579] ;
  assign lower_merges_fi1_DEQ =
	     WILL_FIRE_RL_lower_merges_both_have_data &&
	     (lower_merges_routeFrom[1] && lower_merges_routeFrom[0] ||
	      !lower_merges_routeFrom[1] && !lower_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_merges_fi0_is_empty ;
  assign lower_merges_fi1_CLR = 1'b0 ;

  // submodule lower_merges_fo
  always@(MUX_lower_merges_fo_enq_1__SEL_1 or
	  MUX_lower_merges_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_merges_fi1_is_empty or
	  lower_merges_fi0_D_OUT or
	  WILL_FIRE_RL_lower_merges_fi0_is_empty or lower_merges_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_merges_fo_enq_1__SEL_1:
	  lower_merges_fo_D_IN = MUX_lower_merges_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_merges_fi1_is_empty:
	  lower_merges_fo_D_IN = lower_merges_fi0_D_OUT;
      WILL_FIRE_RL_lower_merges_fi0_is_empty:
	  lower_merges_fo_D_IN = lower_merges_fi1_D_OUT;
      default: lower_merges_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_merges_fo_ENQ =
	     WILL_FIRE_RL_lower_merges_both_have_data &&
	     (lower_merges_routeFrom[1] ||
	      IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1076) ||
	     WILL_FIRE_RL_lower_merges_fi1_is_empty ||
	     WILL_FIRE_RL_lower_merges_fi0_is_empty ;
  assign lower_merges_fo_DEQ = WILL_FIRE_RL_route_4 ;
  assign lower_merges_fo_CLR = 1'b0 ;

  // submodule lower_upper_lower_f
  assign lower_upper_lower_f_D_IN = input_ports_5_put ;
  assign lower_upper_lower_f_ENQ = EN_input_ports_5_put ;
  assign lower_upper_lower_f_DEQ = WILL_FIRE_RL_lower_upper_route_1 ;
  assign lower_upper_lower_f_CLR = 1'b0 ;

  // submodule lower_upper_merges_1_fi0
  assign lower_upper_merges_1_fi0_D_IN = lower_upper_lower_f_D_OUT ;
  assign lower_upper_merges_1_fi0_ENQ =
	     WILL_FIRE_RL_lower_upper_route_1 &&
	     lower_upper_lower_f_D_OUT[578] ;
  assign lower_upper_merges_1_fi0_DEQ =
	     WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	     (lower_upper_merges_1_routeFrom[1] &&
	      !lower_upper_merges_1_routeFrom[0] ||
	      !lower_upper_merges_1_routeFrom[1] &&
	      lower_upper_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty ;
  assign lower_upper_merges_1_fi0_CLR = 1'b0 ;

  // submodule lower_upper_merges_1_fi1
  assign lower_upper_merges_1_fi1_D_IN = lower_upper_upper_f_D_OUT ;
  assign lower_upper_merges_1_fi1_ENQ =
	     WILL_FIRE_RL_lower_upper_route &&
	     lower_upper_upper_f_D_OUT[578] ;
  assign lower_upper_merges_1_fi1_DEQ =
	     WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	     (lower_upper_merges_1_routeFrom[1] &&
	      lower_upper_merges_1_routeFrom[0] ||
	      !lower_upper_merges_1_routeFrom[1] &&
	      !lower_upper_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty ;
  assign lower_upper_merges_1_fi1_CLR = 1'b0 ;

  // submodule lower_upper_merges_1_fo
  always@(MUX_lower_upper_merges_1_fo_enq_1__SEL_1 or
	  MUX_lower_upper_merges_1_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty or
	  lower_upper_merges_1_fi0_D_OUT or
	  WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty or
	  lower_upper_merges_1_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_upper_merges_1_fo_enq_1__SEL_1:
	  lower_upper_merges_1_fo_D_IN =
	      MUX_lower_upper_merges_1_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty:
	  lower_upper_merges_1_fo_D_IN = lower_upper_merges_1_fi0_D_OUT;
      WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty:
	  lower_upper_merges_1_fo_D_IN = lower_upper_merges_1_fi1_D_OUT;
      default: lower_upper_merges_1_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_upper_merges_1_fo_ENQ =
	     WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	     (lower_upper_merges_1_routeFrom[1] ||
	      IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d807) ||
	     WILL_FIRE_RL_lower_upper_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_lower_upper_merges_1_fi0_is_empty ;
  assign lower_upper_merges_1_fo_DEQ = WILL_FIRE_RL_lower_route_1 ;
  assign lower_upper_merges_1_fo_CLR = 1'b0 ;

  // submodule lower_upper_merges_fi0
  assign lower_upper_merges_fi0_D_IN = lower_upper_upper_f_D_OUT ;
  assign lower_upper_merges_fi0_ENQ =
	     WILL_FIRE_RL_lower_upper_route &&
	     !lower_upper_upper_f_D_OUT[578] ;
  assign lower_upper_merges_fi0_DEQ =
	     WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	     (lower_upper_merges_routeFrom[1] &&
	      !lower_upper_merges_routeFrom[0] ||
	      !lower_upper_merges_routeFrom[1] &&
	      lower_upper_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_upper_merges_fi1_is_empty ;
  assign lower_upper_merges_fi0_CLR = 1'b0 ;

  // submodule lower_upper_merges_fi1
  assign lower_upper_merges_fi1_D_IN = lower_upper_lower_f_D_OUT ;
  assign lower_upper_merges_fi1_ENQ =
	     WILL_FIRE_RL_lower_upper_route_1 &&
	     !lower_upper_lower_f_D_OUT[578] ;
  assign lower_upper_merges_fi1_DEQ =
	     WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	     (lower_upper_merges_routeFrom[1] &&
	      lower_upper_merges_routeFrom[0] ||
	      !lower_upper_merges_routeFrom[1] &&
	      !lower_upper_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_lower_upper_merges_fi0_is_empty ;
  assign lower_upper_merges_fi1_CLR = 1'b0 ;

  // submodule lower_upper_merges_fo
  always@(MUX_lower_upper_merges_fo_enq_1__SEL_1 or
	  MUX_lower_upper_merges_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_lower_upper_merges_fi1_is_empty or
	  lower_upper_merges_fi0_D_OUT or
	  WILL_FIRE_RL_lower_upper_merges_fi0_is_empty or
	  lower_upper_merges_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lower_upper_merges_fo_enq_1__SEL_1:
	  lower_upper_merges_fo_D_IN = MUX_lower_upper_merges_fo_enq_1__VAL_1;
      WILL_FIRE_RL_lower_upper_merges_fi1_is_empty:
	  lower_upper_merges_fo_D_IN = lower_upper_merges_fi0_D_OUT;
      WILL_FIRE_RL_lower_upper_merges_fi0_is_empty:
	  lower_upper_merges_fo_D_IN = lower_upper_merges_fi1_D_OUT;
      default: lower_upper_merges_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lower_upper_merges_fo_ENQ =
	     WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	     (lower_upper_merges_routeFrom[1] ||
	      IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d732) ||
	     WILL_FIRE_RL_lower_upper_merges_fi1_is_empty ||
	     WILL_FIRE_RL_lower_upper_merges_fi0_is_empty ;
  assign lower_upper_merges_fo_DEQ = WILL_FIRE_RL_lower_route ;
  assign lower_upper_merges_fo_CLR = 1'b0 ;

  // submodule lower_upper_upper_f
  assign lower_upper_upper_f_D_IN = input_ports_4_put ;
  assign lower_upper_upper_f_ENQ = EN_input_ports_4_put ;
  assign lower_upper_upper_f_DEQ = WILL_FIRE_RL_lower_upper_route ;
  assign lower_upper_upper_f_CLR = 1'b0 ;

  // submodule merges_1_fi0
  assign merges_1_fi0_D_IN = upper_merges_1_fo_D_OUT ;
  assign merges_1_fi0_ENQ =
	     WILL_FIRE_RL_route_1 && !upper_merges_1_fo_D_OUT[580] ;
  assign merges_1_fi0_DEQ =
	     WILL_FIRE_RL_merges_1_both_have_data &&
	     (merges_1_routeFrom[1] && !merges_1_routeFrom[0] ||
	      !merges_1_routeFrom[1] && merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_1_fi1_is_empty ;
  assign merges_1_fi0_CLR = 1'b0 ;

  // submodule merges_1_fi1
  assign merges_1_fi1_D_IN = lower_merges_1_fo_D_OUT ;
  assign merges_1_fi1_ENQ =
	     WILL_FIRE_RL_route_5 && !lower_merges_1_fo_D_OUT[580] ;
  assign merges_1_fi1_DEQ =
	     WILL_FIRE_RL_merges_1_both_have_data &&
	     (merges_1_routeFrom[1] && merges_1_routeFrom[0] ||
	      !merges_1_routeFrom[1] && !merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_1_fi0_is_empty ;
  assign merges_1_fi1_CLR = 1'b0 ;

  // submodule merges_1_fo
  always@(MUX_merges_1_fo_enq_1__SEL_1 or
	  MUX_merges_1_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_1_fi1_is_empty or
	  merges_1_fi0_D_OUT or
	  WILL_FIRE_RL_merges_1_fi0_is_empty or merges_1_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_1_fo_enq_1__SEL_1:
	  merges_1_fo_D_IN = MUX_merges_1_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_1_fi1_is_empty:
	  merges_1_fo_D_IN = merges_1_fi0_D_OUT;
      WILL_FIRE_RL_merges_1_fi0_is_empty:
	  merges_1_fo_D_IN = merges_1_fi1_D_OUT;
      default: merges_1_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_1_fo_ENQ =
	     WILL_FIRE_RL_merges_1_both_have_data &&
	     (merges_1_routeFrom[1] ||
	      IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1495) ||
	     WILL_FIRE_RL_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_merges_1_fi0_is_empty ;
  assign merges_1_fo_DEQ = EN_output_ports_1_get ;
  assign merges_1_fo_CLR = 1'b0 ;

  // submodule merges_2_fi0
  assign merges_2_fi0_D_IN = upper_merges_2_fo_D_OUT ;
  assign merges_2_fi0_ENQ =
	     WILL_FIRE_RL_route_2 && !upper_merges_2_fo_D_OUT[580] ;
  assign merges_2_fi0_DEQ =
	     WILL_FIRE_RL_merges_2_both_have_data &&
	     (merges_2_routeFrom[1] && !merges_2_routeFrom[0] ||
	      !merges_2_routeFrom[1] && merges_2_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_2_fi1_is_empty ;
  assign merges_2_fi0_CLR = 1'b0 ;

  // submodule merges_2_fi1
  assign merges_2_fi1_D_IN = lower_merges_2_fo_D_OUT ;
  assign merges_2_fi1_ENQ =
	     WILL_FIRE_RL_route_6 && !lower_merges_2_fo_D_OUT[580] ;
  assign merges_2_fi1_DEQ =
	     WILL_FIRE_RL_merges_2_both_have_data &&
	     (merges_2_routeFrom[1] && merges_2_routeFrom[0] ||
	      !merges_2_routeFrom[1] && !merges_2_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_2_fi0_is_empty ;
  assign merges_2_fi1_CLR = 1'b0 ;

  // submodule merges_2_fo
  always@(MUX_merges_2_fo_enq_1__SEL_1 or
	  MUX_merges_2_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_2_fi1_is_empty or
	  merges_2_fi0_D_OUT or
	  WILL_FIRE_RL_merges_2_fi0_is_empty or merges_2_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_2_fo_enq_1__SEL_1:
	  merges_2_fo_D_IN = MUX_merges_2_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_2_fi1_is_empty:
	  merges_2_fo_D_IN = merges_2_fi0_D_OUT;
      WILL_FIRE_RL_merges_2_fi0_is_empty:
	  merges_2_fo_D_IN = merges_2_fi1_D_OUT;
      default: merges_2_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_2_fo_ENQ =
	     WILL_FIRE_RL_merges_2_both_have_data &&
	     (merges_2_routeFrom[1] ||
	      IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1570) ||
	     WILL_FIRE_RL_merges_2_fi1_is_empty ||
	     WILL_FIRE_RL_merges_2_fi0_is_empty ;
  assign merges_2_fo_DEQ = EN_output_ports_2_get ;
  assign merges_2_fo_CLR = 1'b0 ;

  // submodule merges_3_fi0
  assign merges_3_fi0_D_IN = upper_merges_3_fo_D_OUT ;
  assign merges_3_fi0_ENQ =
	     WILL_FIRE_RL_route_3 && !upper_merges_3_fo_D_OUT[580] ;
  assign merges_3_fi0_DEQ =
	     WILL_FIRE_RL_merges_3_both_have_data &&
	     (merges_3_routeFrom[1] && !merges_3_routeFrom[0] ||
	      !merges_3_routeFrom[1] && merges_3_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_3_fi1_is_empty ;
  assign merges_3_fi0_CLR = 1'b0 ;

  // submodule merges_3_fi1
  assign merges_3_fi1_D_IN = lower_merges_3_fo_D_OUT ;
  assign merges_3_fi1_ENQ =
	     WILL_FIRE_RL_route_7 && !lower_merges_3_fo_D_OUT[580] ;
  assign merges_3_fi1_DEQ =
	     WILL_FIRE_RL_merges_3_both_have_data &&
	     (merges_3_routeFrom[1] && merges_3_routeFrom[0] ||
	      !merges_3_routeFrom[1] && !merges_3_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_3_fi0_is_empty ;
  assign merges_3_fi1_CLR = 1'b0 ;

  // submodule merges_3_fo
  always@(MUX_merges_3_fo_enq_1__SEL_1 or
	  MUX_merges_3_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_3_fi1_is_empty or
	  merges_3_fi0_D_OUT or
	  WILL_FIRE_RL_merges_3_fi0_is_empty or merges_3_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_3_fo_enq_1__SEL_1:
	  merges_3_fo_D_IN = MUX_merges_3_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_3_fi1_is_empty:
	  merges_3_fo_D_IN = merges_3_fi0_D_OUT;
      WILL_FIRE_RL_merges_3_fi0_is_empty:
	  merges_3_fo_D_IN = merges_3_fi1_D_OUT;
      default: merges_3_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_3_fo_ENQ =
	     WILL_FIRE_RL_merges_3_both_have_data &&
	     (merges_3_routeFrom[1] ||
	      IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1645) ||
	     WILL_FIRE_RL_merges_3_fi1_is_empty ||
	     WILL_FIRE_RL_merges_3_fi0_is_empty ;
  assign merges_3_fo_DEQ = EN_output_ports_3_get ;
  assign merges_3_fo_CLR = 1'b0 ;

  // submodule merges_4_fi0
  assign merges_4_fi0_D_IN = lower_merges_fo_D_OUT ;
  assign merges_4_fi0_ENQ =
	     WILL_FIRE_RL_route_4 && lower_merges_fo_D_OUT[580] ;
  assign merges_4_fi0_DEQ =
	     WILL_FIRE_RL_merges_4_both_have_data &&
	     (merges_4_routeFrom[1] && !merges_4_routeFrom[0] ||
	      !merges_4_routeFrom[1] && merges_4_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_4_fi1_is_empty ;
  assign merges_4_fi0_CLR = 1'b0 ;

  // submodule merges_4_fi1
  assign merges_4_fi1_D_IN = upper_merges_fo_D_OUT ;
  assign merges_4_fi1_ENQ = WILL_FIRE_RL_route && upper_merges_fo_D_OUT[580] ;
  assign merges_4_fi1_DEQ =
	     WILL_FIRE_RL_merges_4_both_have_data &&
	     (merges_4_routeFrom[1] && merges_4_routeFrom[0] ||
	      !merges_4_routeFrom[1] && !merges_4_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_4_fi0_is_empty ;
  assign merges_4_fi1_CLR = 1'b0 ;

  // submodule merges_4_fo
  always@(MUX_merges_4_fo_enq_1__SEL_1 or
	  MUX_merges_4_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_4_fi1_is_empty or
	  merges_4_fi0_D_OUT or
	  WILL_FIRE_RL_merges_4_fi0_is_empty or merges_4_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_4_fo_enq_1__SEL_1:
	  merges_4_fo_D_IN = MUX_merges_4_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_4_fi1_is_empty:
	  merges_4_fo_D_IN = merges_4_fi0_D_OUT;
      WILL_FIRE_RL_merges_4_fi0_is_empty:
	  merges_4_fo_D_IN = merges_4_fi1_D_OUT;
      default: merges_4_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_4_fo_ENQ =
	     WILL_FIRE_RL_merges_4_both_have_data &&
	     (merges_4_routeFrom[1] ||
	      IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1720) ||
	     WILL_FIRE_RL_merges_4_fi1_is_empty ||
	     WILL_FIRE_RL_merges_4_fi0_is_empty ;
  assign merges_4_fo_DEQ = EN_output_ports_4_get ;
  assign merges_4_fo_CLR = 1'b0 ;

  // submodule merges_5_fi0
  assign merges_5_fi0_D_IN = lower_merges_1_fo_D_OUT ;
  assign merges_5_fi0_ENQ =
	     WILL_FIRE_RL_route_5 && lower_merges_1_fo_D_OUT[580] ;
  assign merges_5_fi0_DEQ =
	     WILL_FIRE_RL_merges_5_both_have_data &&
	     (merges_5_routeFrom[1] && !merges_5_routeFrom[0] ||
	      !merges_5_routeFrom[1] && merges_5_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_5_fi1_is_empty ;
  assign merges_5_fi0_CLR = 1'b0 ;

  // submodule merges_5_fi1
  assign merges_5_fi1_D_IN = upper_merges_1_fo_D_OUT ;
  assign merges_5_fi1_ENQ =
	     WILL_FIRE_RL_route_1 && upper_merges_1_fo_D_OUT[580] ;
  assign merges_5_fi1_DEQ =
	     WILL_FIRE_RL_merges_5_both_have_data &&
	     (merges_5_routeFrom[1] && merges_5_routeFrom[0] ||
	      !merges_5_routeFrom[1] && !merges_5_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_5_fi0_is_empty ;
  assign merges_5_fi1_CLR = 1'b0 ;

  // submodule merges_5_fo
  always@(MUX_merges_5_fo_enq_1__SEL_1 or
	  MUX_merges_5_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_5_fi1_is_empty or
	  merges_5_fi0_D_OUT or
	  WILL_FIRE_RL_merges_5_fi0_is_empty or merges_5_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_5_fo_enq_1__SEL_1:
	  merges_5_fo_D_IN = MUX_merges_5_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_5_fi1_is_empty:
	  merges_5_fo_D_IN = merges_5_fi0_D_OUT;
      WILL_FIRE_RL_merges_5_fi0_is_empty:
	  merges_5_fo_D_IN = merges_5_fi1_D_OUT;
      default: merges_5_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_5_fo_ENQ =
	     WILL_FIRE_RL_merges_5_both_have_data &&
	     (merges_5_routeFrom[1] ||
	      IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1795) ||
	     WILL_FIRE_RL_merges_5_fi1_is_empty ||
	     WILL_FIRE_RL_merges_5_fi0_is_empty ;
  assign merges_5_fo_DEQ = EN_output_ports_5_get ;
  assign merges_5_fo_CLR = 1'b0 ;

  // submodule merges_6_fi0
  assign merges_6_fi0_D_IN = lower_merges_2_fo_D_OUT ;
  assign merges_6_fi0_ENQ =
	     WILL_FIRE_RL_route_6 && lower_merges_2_fo_D_OUT[580] ;
  assign merges_6_fi0_DEQ =
	     WILL_FIRE_RL_merges_6_both_have_data &&
	     (merges_6_routeFrom[1] && !merges_6_routeFrom[0] ||
	      !merges_6_routeFrom[1] && merges_6_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_6_fi1_is_empty ;
  assign merges_6_fi0_CLR = 1'b0 ;

  // submodule merges_6_fi1
  assign merges_6_fi1_D_IN = upper_merges_2_fo_D_OUT ;
  assign merges_6_fi1_ENQ =
	     WILL_FIRE_RL_route_2 && upper_merges_2_fo_D_OUT[580] ;
  assign merges_6_fi1_DEQ =
	     WILL_FIRE_RL_merges_6_both_have_data &&
	     (merges_6_routeFrom[1] && merges_6_routeFrom[0] ||
	      !merges_6_routeFrom[1] && !merges_6_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_6_fi0_is_empty ;
  assign merges_6_fi1_CLR = 1'b0 ;

  // submodule merges_6_fo
  always@(MUX_merges_6_fo_enq_1__SEL_1 or
	  MUX_merges_6_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_6_fi1_is_empty or
	  merges_6_fi0_D_OUT or
	  WILL_FIRE_RL_merges_6_fi0_is_empty or merges_6_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_6_fo_enq_1__SEL_1:
	  merges_6_fo_D_IN = MUX_merges_6_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_6_fi1_is_empty:
	  merges_6_fo_D_IN = merges_6_fi0_D_OUT;
      WILL_FIRE_RL_merges_6_fi0_is_empty:
	  merges_6_fo_D_IN = merges_6_fi1_D_OUT;
      default: merges_6_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_6_fo_ENQ =
	     WILL_FIRE_RL_merges_6_both_have_data &&
	     (merges_6_routeFrom[1] ||
	      IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1870) ||
	     WILL_FIRE_RL_merges_6_fi1_is_empty ||
	     WILL_FIRE_RL_merges_6_fi0_is_empty ;
  assign merges_6_fo_DEQ = EN_output_ports_6_get ;
  assign merges_6_fo_CLR = 1'b0 ;

  // submodule merges_7_fi0
  assign merges_7_fi0_D_IN = lower_merges_3_fo_D_OUT ;
  assign merges_7_fi0_ENQ =
	     WILL_FIRE_RL_route_7 && lower_merges_3_fo_D_OUT[580] ;
  assign merges_7_fi0_DEQ =
	     WILL_FIRE_RL_merges_7_both_have_data &&
	     (merges_7_routeFrom[1] && !merges_7_routeFrom[0] ||
	      !merges_7_routeFrom[1] && merges_7_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_7_fi1_is_empty ;
  assign merges_7_fi0_CLR = 1'b0 ;

  // submodule merges_7_fi1
  assign merges_7_fi1_D_IN = upper_merges_3_fo_D_OUT ;
  assign merges_7_fi1_ENQ =
	     WILL_FIRE_RL_route_3 && upper_merges_3_fo_D_OUT[580] ;
  assign merges_7_fi1_DEQ =
	     WILL_FIRE_RL_merges_7_both_have_data &&
	     (merges_7_routeFrom[1] && merges_7_routeFrom[0] ||
	      !merges_7_routeFrom[1] && !merges_7_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_7_fi0_is_empty ;
  assign merges_7_fi1_CLR = 1'b0 ;

  // submodule merges_7_fo
  always@(MUX_merges_7_fo_enq_1__SEL_1 or
	  MUX_merges_7_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_7_fi1_is_empty or
	  merges_7_fi0_D_OUT or
	  WILL_FIRE_RL_merges_7_fi0_is_empty or merges_7_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_7_fo_enq_1__SEL_1:
	  merges_7_fo_D_IN = MUX_merges_7_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_7_fi1_is_empty:
	  merges_7_fo_D_IN = merges_7_fi0_D_OUT;
      WILL_FIRE_RL_merges_7_fi0_is_empty:
	  merges_7_fo_D_IN = merges_7_fi1_D_OUT;
      default: merges_7_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_7_fo_ENQ =
	     WILL_FIRE_RL_merges_7_both_have_data &&
	     (merges_7_routeFrom[1] ||
	      IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1945) ||
	     WILL_FIRE_RL_merges_7_fi1_is_empty ||
	     WILL_FIRE_RL_merges_7_fi0_is_empty ;
  assign merges_7_fo_DEQ = EN_output_ports_7_get ;
  assign merges_7_fo_CLR = 1'b0 ;

  // submodule merges_fi0
  assign merges_fi0_D_IN = upper_merges_fo_D_OUT ;
  assign merges_fi0_ENQ = WILL_FIRE_RL_route && !upper_merges_fo_D_OUT[580] ;
  assign merges_fi0_DEQ =
	     WILL_FIRE_RL_merges_both_have_data &&
	     (merges_routeFrom[1] && !merges_routeFrom[0] ||
	      !merges_routeFrom[1] && merges_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_fi1_is_empty ;
  assign merges_fi0_CLR = 1'b0 ;

  // submodule merges_fi1
  assign merges_fi1_D_IN = lower_merges_fo_D_OUT ;
  assign merges_fi1_ENQ =
	     WILL_FIRE_RL_route_4 && !lower_merges_fo_D_OUT[580] ;
  assign merges_fi1_DEQ =
	     WILL_FIRE_RL_merges_both_have_data &&
	     (merges_routeFrom[1] && merges_routeFrom[0] ||
	      !merges_routeFrom[1] && !merges_fi0HasPrio) ||
	     WILL_FIRE_RL_merges_fi0_is_empty ;
  assign merges_fi1_CLR = 1'b0 ;

  // submodule merges_fo
  always@(MUX_merges_fo_enq_1__SEL_1 or
	  MUX_merges_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_merges_fi1_is_empty or
	  merges_fi0_D_OUT or
	  WILL_FIRE_RL_merges_fi0_is_empty or merges_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_merges_fo_enq_1__SEL_1: merges_fo_D_IN = MUX_merges_fo_enq_1__VAL_1;
      WILL_FIRE_RL_merges_fi1_is_empty: merges_fo_D_IN = merges_fi0_D_OUT;
      WILL_FIRE_RL_merges_fi0_is_empty: merges_fo_D_IN = merges_fi1_D_OUT;
      default: merges_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign merges_fo_ENQ =
	     WILL_FIRE_RL_merges_both_have_data &&
	     (merges_routeFrom[1] ||
	      IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1420) ||
	     WILL_FIRE_RL_merges_fi1_is_empty ||
	     WILL_FIRE_RL_merges_fi0_is_empty ;
  assign merges_fo_DEQ = EN_output_ports_0_get ;
  assign merges_fo_CLR = 1'b0 ;

  // submodule upper_lower_lower_f
  assign upper_lower_lower_f_D_IN = input_ports_3_put ;
  assign upper_lower_lower_f_ENQ = EN_input_ports_3_put ;
  assign upper_lower_lower_f_DEQ = WILL_FIRE_RL_upper_lower_route_1 ;
  assign upper_lower_lower_f_CLR = 1'b0 ;

  // submodule upper_lower_merges_1_fi0
  assign upper_lower_merges_1_fi0_D_IN = upper_lower_lower_f_D_OUT ;
  assign upper_lower_merges_1_fi0_ENQ =
	     WILL_FIRE_RL_upper_lower_route_1 &&
	     upper_lower_lower_f_D_OUT[578] ;
  assign upper_lower_merges_1_fi0_DEQ =
	     WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	     (upper_lower_merges_1_routeFrom[1] &&
	      !upper_lower_merges_1_routeFrom[0] ||
	      !upper_lower_merges_1_routeFrom[1] &&
	      upper_lower_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty ;
  assign upper_lower_merges_1_fi0_CLR = 1'b0 ;

  // submodule upper_lower_merges_1_fi1
  assign upper_lower_merges_1_fi1_D_IN = upper_lower_upper_f_D_OUT ;
  assign upper_lower_merges_1_fi1_ENQ =
	     WILL_FIRE_RL_upper_lower_route &&
	     upper_lower_upper_f_D_OUT[578] ;
  assign upper_lower_merges_1_fi1_DEQ =
	     WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	     (upper_lower_merges_1_routeFrom[1] &&
	      upper_lower_merges_1_routeFrom[0] ||
	      !upper_lower_merges_1_routeFrom[1] &&
	      !upper_lower_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty ;
  assign upper_lower_merges_1_fi1_CLR = 1'b0 ;

  // submodule upper_lower_merges_1_fo
  always@(MUX_upper_lower_merges_1_fo_enq_1__SEL_1 or
	  MUX_upper_lower_merges_1_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty or
	  upper_lower_merges_1_fi0_D_OUT or
	  WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty or
	  upper_lower_merges_1_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_lower_merges_1_fo_enq_1__SEL_1:
	  upper_lower_merges_1_fo_D_IN =
	      MUX_upper_lower_merges_1_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty:
	  upper_lower_merges_1_fo_D_IN = upper_lower_merges_1_fi0_D_OUT;
      WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty:
	  upper_lower_merges_1_fo_D_IN = upper_lower_merges_1_fi1_D_OUT;
      default: upper_lower_merges_1_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_lower_merges_1_fo_ENQ =
	     WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	     (upper_lower_merges_1_routeFrom[1] ||
	      IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d289) ||
	     WILL_FIRE_RL_upper_lower_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_upper_lower_merges_1_fi0_is_empty ;
  assign upper_lower_merges_1_fo_DEQ = WILL_FIRE_RL_upper_route_3 ;
  assign upper_lower_merges_1_fo_CLR = 1'b0 ;

  // submodule upper_lower_merges_fi0
  assign upper_lower_merges_fi0_D_IN = upper_lower_upper_f_D_OUT ;
  assign upper_lower_merges_fi0_ENQ =
	     WILL_FIRE_RL_upper_lower_route &&
	     !upper_lower_upper_f_D_OUT[578] ;
  assign upper_lower_merges_fi0_DEQ =
	     WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	     (upper_lower_merges_routeFrom[1] &&
	      !upper_lower_merges_routeFrom[0] ||
	      !upper_lower_merges_routeFrom[1] &&
	      upper_lower_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_lower_merges_fi1_is_empty ;
  assign upper_lower_merges_fi0_CLR = 1'b0 ;

  // submodule upper_lower_merges_fi1
  assign upper_lower_merges_fi1_D_IN = upper_lower_lower_f_D_OUT ;
  assign upper_lower_merges_fi1_ENQ =
	     WILL_FIRE_RL_upper_lower_route_1 &&
	     !upper_lower_lower_f_D_OUT[578] ;
  assign upper_lower_merges_fi1_DEQ =
	     WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	     (upper_lower_merges_routeFrom[1] &&
	      upper_lower_merges_routeFrom[0] ||
	      !upper_lower_merges_routeFrom[1] &&
	      !upper_lower_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_lower_merges_fi0_is_empty ;
  assign upper_lower_merges_fi1_CLR = 1'b0 ;

  // submodule upper_lower_merges_fo
  always@(MUX_upper_lower_merges_fo_enq_1__SEL_1 or
	  MUX_upper_lower_merges_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_lower_merges_fi1_is_empty or
	  upper_lower_merges_fi0_D_OUT or
	  WILL_FIRE_RL_upper_lower_merges_fi0_is_empty or
	  upper_lower_merges_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_lower_merges_fo_enq_1__SEL_1:
	  upper_lower_merges_fo_D_IN = MUX_upper_lower_merges_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_lower_merges_fi1_is_empty:
	  upper_lower_merges_fo_D_IN = upper_lower_merges_fi0_D_OUT;
      WILL_FIRE_RL_upper_lower_merges_fi0_is_empty:
	  upper_lower_merges_fo_D_IN = upper_lower_merges_fi1_D_OUT;
      default: upper_lower_merges_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_lower_merges_fo_ENQ =
	     WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	     (upper_lower_merges_routeFrom[1] ||
	      IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d214) ||
	     WILL_FIRE_RL_upper_lower_merges_fi1_is_empty ||
	     WILL_FIRE_RL_upper_lower_merges_fi0_is_empty ;
  assign upper_lower_merges_fo_DEQ = WILL_FIRE_RL_upper_route_2 ;
  assign upper_lower_merges_fo_CLR = 1'b0 ;

  // submodule upper_lower_upper_f
  assign upper_lower_upper_f_D_IN = input_ports_2_put ;
  assign upper_lower_upper_f_ENQ = EN_input_ports_2_put ;
  assign upper_lower_upper_f_DEQ = WILL_FIRE_RL_upper_lower_route ;
  assign upper_lower_upper_f_CLR = 1'b0 ;

  // submodule upper_merges_1_fi0
  assign upper_merges_1_fi0_D_IN = upper_upper_merges_1_fo_D_OUT ;
  assign upper_merges_1_fi0_ENQ =
	     WILL_FIRE_RL_upper_route_1 &&
	     !upper_upper_merges_1_fo_D_OUT[579] ;
  assign upper_merges_1_fi0_DEQ =
	     WILL_FIRE_RL_upper_merges_1_both_have_data &&
	     (upper_merges_1_routeFrom[1] && !upper_merges_1_routeFrom[0] ||
	      !upper_merges_1_routeFrom[1] && upper_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_1_fi1_is_empty ;
  assign upper_merges_1_fi0_CLR = 1'b0 ;

  // submodule upper_merges_1_fi1
  assign upper_merges_1_fi1_D_IN = upper_lower_merges_1_fo_D_OUT ;
  assign upper_merges_1_fi1_ENQ =
	     WILL_FIRE_RL_upper_route_3 &&
	     !upper_lower_merges_1_fo_D_OUT[579] ;
  assign upper_merges_1_fi1_DEQ =
	     WILL_FIRE_RL_upper_merges_1_both_have_data &&
	     (upper_merges_1_routeFrom[1] && upper_merges_1_routeFrom[0] ||
	      !upper_merges_1_routeFrom[1] && !upper_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_1_fi0_is_empty ;
  assign upper_merges_1_fi1_CLR = 1'b0 ;

  // submodule upper_merges_1_fo
  always@(MUX_upper_merges_1_fo_enq_1__SEL_1 or
	  MUX_upper_merges_1_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_merges_1_fi1_is_empty or
	  upper_merges_1_fi0_D_OUT or
	  WILL_FIRE_RL_upper_merges_1_fi0_is_empty or
	  upper_merges_1_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_1_fo_enq_1__SEL_1:
	  upper_merges_1_fo_D_IN = MUX_upper_merges_1_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_merges_1_fi1_is_empty:
	  upper_merges_1_fo_D_IN = upper_merges_1_fi0_D_OUT;
      WILL_FIRE_RL_upper_merges_1_fi0_is_empty:
	  upper_merges_1_fo_D_IN = upper_merges_1_fi1_D_OUT;
      default: upper_merges_1_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_merges_1_fo_ENQ =
	     WILL_FIRE_RL_upper_merges_1_both_have_data &&
	     (upper_merges_1_routeFrom[1] ||
	      IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d461) ||
	     WILL_FIRE_RL_upper_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_1_fi0_is_empty ;
  assign upper_merges_1_fo_DEQ = WILL_FIRE_RL_route_1 ;
  assign upper_merges_1_fo_CLR = 1'b0 ;

  // submodule upper_merges_2_fi0
  assign upper_merges_2_fi0_D_IN = upper_lower_merges_fo_D_OUT ;
  assign upper_merges_2_fi0_ENQ =
	     WILL_FIRE_RL_upper_route_2 && upper_lower_merges_fo_D_OUT[579] ;
  assign upper_merges_2_fi0_DEQ =
	     WILL_FIRE_RL_upper_merges_2_both_have_data &&
	     (upper_merges_2_routeFrom[1] && !upper_merges_2_routeFrom[0] ||
	      !upper_merges_2_routeFrom[1] && upper_merges_2_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_2_fi1_is_empty ;
  assign upper_merges_2_fi0_CLR = 1'b0 ;

  // submodule upper_merges_2_fi1
  assign upper_merges_2_fi1_D_IN = upper_upper_merges_fo_D_OUT ;
  assign upper_merges_2_fi1_ENQ =
	     WILL_FIRE_RL_upper_route && upper_upper_merges_fo_D_OUT[579] ;
  assign upper_merges_2_fi1_DEQ =
	     WILL_FIRE_RL_upper_merges_2_both_have_data &&
	     (upper_merges_2_routeFrom[1] && upper_merges_2_routeFrom[0] ||
	      !upper_merges_2_routeFrom[1] && !upper_merges_2_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_2_fi0_is_empty ;
  assign upper_merges_2_fi1_CLR = 1'b0 ;

  // submodule upper_merges_2_fo
  always@(MUX_upper_merges_2_fo_enq_1__SEL_1 or
	  MUX_upper_merges_2_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_merges_2_fi1_is_empty or
	  upper_merges_2_fi0_D_OUT or
	  WILL_FIRE_RL_upper_merges_2_fi0_is_empty or
	  upper_merges_2_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_2_fo_enq_1__SEL_1:
	  upper_merges_2_fo_D_IN = MUX_upper_merges_2_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_merges_2_fi1_is_empty:
	  upper_merges_2_fo_D_IN = upper_merges_2_fi0_D_OUT;
      WILL_FIRE_RL_upper_merges_2_fi0_is_empty:
	  upper_merges_2_fo_D_IN = upper_merges_2_fi1_D_OUT;
      default: upper_merges_2_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_merges_2_fo_ENQ =
	     WILL_FIRE_RL_upper_merges_2_both_have_data &&
	     (upper_merges_2_routeFrom[1] ||
	      IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d536) ||
	     WILL_FIRE_RL_upper_merges_2_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_2_fi0_is_empty ;
  assign upper_merges_2_fo_DEQ = WILL_FIRE_RL_route_2 ;
  assign upper_merges_2_fo_CLR = 1'b0 ;

  // submodule upper_merges_3_fi0
  assign upper_merges_3_fi0_D_IN = upper_lower_merges_1_fo_D_OUT ;
  assign upper_merges_3_fi0_ENQ =
	     WILL_FIRE_RL_upper_route_3 &&
	     upper_lower_merges_1_fo_D_OUT[579] ;
  assign upper_merges_3_fi0_DEQ =
	     WILL_FIRE_RL_upper_merges_3_both_have_data &&
	     (upper_merges_3_routeFrom[1] && !upper_merges_3_routeFrom[0] ||
	      !upper_merges_3_routeFrom[1] && upper_merges_3_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_3_fi1_is_empty ;
  assign upper_merges_3_fi0_CLR = 1'b0 ;

  // submodule upper_merges_3_fi1
  assign upper_merges_3_fi1_D_IN = upper_upper_merges_1_fo_D_OUT ;
  assign upper_merges_3_fi1_ENQ =
	     WILL_FIRE_RL_upper_route_1 &&
	     upper_upper_merges_1_fo_D_OUT[579] ;
  assign upper_merges_3_fi1_DEQ =
	     WILL_FIRE_RL_upper_merges_3_both_have_data &&
	     (upper_merges_3_routeFrom[1] && upper_merges_3_routeFrom[0] ||
	      !upper_merges_3_routeFrom[1] && !upper_merges_3_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_3_fi0_is_empty ;
  assign upper_merges_3_fi1_CLR = 1'b0 ;

  // submodule upper_merges_3_fo
  always@(MUX_upper_merges_3_fo_enq_1__SEL_1 or
	  MUX_upper_merges_3_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_merges_3_fi1_is_empty or
	  upper_merges_3_fi0_D_OUT or
	  WILL_FIRE_RL_upper_merges_3_fi0_is_empty or
	  upper_merges_3_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_3_fo_enq_1__SEL_1:
	  upper_merges_3_fo_D_IN = MUX_upper_merges_3_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_merges_3_fi1_is_empty:
	  upper_merges_3_fo_D_IN = upper_merges_3_fi0_D_OUT;
      WILL_FIRE_RL_upper_merges_3_fi0_is_empty:
	  upper_merges_3_fo_D_IN = upper_merges_3_fi1_D_OUT;
      default: upper_merges_3_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_merges_3_fo_ENQ =
	     WILL_FIRE_RL_upper_merges_3_both_have_data &&
	     (upper_merges_3_routeFrom[1] ||
	      IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d611) ||
	     WILL_FIRE_RL_upper_merges_3_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_3_fi0_is_empty ;
  assign upper_merges_3_fo_DEQ = WILL_FIRE_RL_route_3 ;
  assign upper_merges_3_fo_CLR = 1'b0 ;

  // submodule upper_merges_fi0
  assign upper_merges_fi0_D_IN = upper_upper_merges_fo_D_OUT ;
  assign upper_merges_fi0_ENQ =
	     WILL_FIRE_RL_upper_route && !upper_upper_merges_fo_D_OUT[579] ;
  assign upper_merges_fi0_DEQ =
	     WILL_FIRE_RL_upper_merges_both_have_data &&
	     (upper_merges_routeFrom[1] && !upper_merges_routeFrom[0] ||
	      !upper_merges_routeFrom[1] && upper_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_fi1_is_empty ;
  assign upper_merges_fi0_CLR = 1'b0 ;

  // submodule upper_merges_fi1
  assign upper_merges_fi1_D_IN = upper_lower_merges_fo_D_OUT ;
  assign upper_merges_fi1_ENQ =
	     WILL_FIRE_RL_upper_route_2 && !upper_lower_merges_fo_D_OUT[579] ;
  assign upper_merges_fi1_DEQ =
	     WILL_FIRE_RL_upper_merges_both_have_data &&
	     (upper_merges_routeFrom[1] && upper_merges_routeFrom[0] ||
	      !upper_merges_routeFrom[1] && !upper_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_merges_fi0_is_empty ;
  assign upper_merges_fi1_CLR = 1'b0 ;

  // submodule upper_merges_fo
  always@(MUX_upper_merges_fo_enq_1__SEL_1 or
	  MUX_upper_merges_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_merges_fi1_is_empty or
	  upper_merges_fi0_D_OUT or
	  WILL_FIRE_RL_upper_merges_fi0_is_empty or upper_merges_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_merges_fo_enq_1__SEL_1:
	  upper_merges_fo_D_IN = MUX_upper_merges_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_merges_fi1_is_empty:
	  upper_merges_fo_D_IN = upper_merges_fi0_D_OUT;
      WILL_FIRE_RL_upper_merges_fi0_is_empty:
	  upper_merges_fo_D_IN = upper_merges_fi1_D_OUT;
      default: upper_merges_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_merges_fo_ENQ =
	     WILL_FIRE_RL_upper_merges_both_have_data &&
	     (upper_merges_routeFrom[1] ||
	      IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d386) ||
	     WILL_FIRE_RL_upper_merges_fi1_is_empty ||
	     WILL_FIRE_RL_upper_merges_fi0_is_empty ;
  assign upper_merges_fo_DEQ = WILL_FIRE_RL_route ;
  assign upper_merges_fo_CLR = 1'b0 ;

  // submodule upper_upper_lower_f
  assign upper_upper_lower_f_D_IN = input_ports_1_put ;
  assign upper_upper_lower_f_ENQ = EN_input_ports_1_put ;
  assign upper_upper_lower_f_DEQ = WILL_FIRE_RL_upper_upper_route_1 ;
  assign upper_upper_lower_f_CLR = 1'b0 ;

  // submodule upper_upper_merges_1_fi0
  assign upper_upper_merges_1_fi0_D_IN = upper_upper_lower_f_D_OUT ;
  assign upper_upper_merges_1_fi0_ENQ =
	     WILL_FIRE_RL_upper_upper_route_1 &&
	     upper_upper_lower_f_D_OUT[578] ;
  assign upper_upper_merges_1_fi0_DEQ =
	     WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	     (upper_upper_merges_1_routeFrom[1] &&
	      !upper_upper_merges_1_routeFrom[0] ||
	      !upper_upper_merges_1_routeFrom[1] &&
	      upper_upper_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty ;
  assign upper_upper_merges_1_fi0_CLR = 1'b0 ;

  // submodule upper_upper_merges_1_fi1
  assign upper_upper_merges_1_fi1_D_IN = upper_upper_upper_f_D_OUT ;
  assign upper_upper_merges_1_fi1_ENQ =
	     WILL_FIRE_RL_upper_upper_route &&
	     upper_upper_upper_f_D_OUT[578] ;
  assign upper_upper_merges_1_fi1_DEQ =
	     WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	     (upper_upper_merges_1_routeFrom[1] &&
	      upper_upper_merges_1_routeFrom[0] ||
	      !upper_upper_merges_1_routeFrom[1] &&
	      !upper_upper_merges_1_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty ;
  assign upper_upper_merges_1_fi1_CLR = 1'b0 ;

  // submodule upper_upper_merges_1_fo
  always@(MUX_upper_upper_merges_1_fo_enq_1__SEL_1 or
	  MUX_upper_upper_merges_1_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty or
	  upper_upper_merges_1_fi0_D_OUT or
	  WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty or
	  upper_upper_merges_1_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_upper_merges_1_fo_enq_1__SEL_1:
	  upper_upper_merges_1_fo_D_IN =
	      MUX_upper_upper_merges_1_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty:
	  upper_upper_merges_1_fo_D_IN = upper_upper_merges_1_fi0_D_OUT;
      WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty:
	  upper_upper_merges_1_fo_D_IN = upper_upper_merges_1_fi1_D_OUT;
      default: upper_upper_merges_1_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_upper_merges_1_fo_ENQ =
	     WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	     (upper_upper_merges_1_routeFrom[1] ||
	      IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d115) ||
	     WILL_FIRE_RL_upper_upper_merges_1_fi1_is_empty ||
	     WILL_FIRE_RL_upper_upper_merges_1_fi0_is_empty ;
  assign upper_upper_merges_1_fo_DEQ = WILL_FIRE_RL_upper_route_1 ;
  assign upper_upper_merges_1_fo_CLR = 1'b0 ;

  // submodule upper_upper_merges_fi0
  assign upper_upper_merges_fi0_D_IN = upper_upper_upper_f_D_OUT ;
  assign upper_upper_merges_fi0_ENQ =
	     WILL_FIRE_RL_upper_upper_route &&
	     !upper_upper_upper_f_D_OUT[578] ;
  assign upper_upper_merges_fi0_DEQ =
	     WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	     (upper_upper_merges_routeFrom[1] &&
	      !upper_upper_merges_routeFrom[0] ||
	      !upper_upper_merges_routeFrom[1] &&
	      upper_upper_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_upper_merges_fi1_is_empty ;
  assign upper_upper_merges_fi0_CLR = 1'b0 ;

  // submodule upper_upper_merges_fi1
  assign upper_upper_merges_fi1_D_IN = upper_upper_lower_f_D_OUT ;
  assign upper_upper_merges_fi1_ENQ =
	     WILL_FIRE_RL_upper_upper_route_1 &&
	     !upper_upper_lower_f_D_OUT[578] ;
  assign upper_upper_merges_fi1_DEQ =
	     WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	     (upper_upper_merges_routeFrom[1] &&
	      upper_upper_merges_routeFrom[0] ||
	      !upper_upper_merges_routeFrom[1] &&
	      !upper_upper_merges_fi0HasPrio) ||
	     WILL_FIRE_RL_upper_upper_merges_fi0_is_empty ;
  assign upper_upper_merges_fi1_CLR = 1'b0 ;

  // submodule upper_upper_merges_fo
  always@(MUX_upper_upper_merges_fo_enq_1__SEL_1 or
	  MUX_upper_upper_merges_fo_enq_1__VAL_1 or
	  WILL_FIRE_RL_upper_upper_merges_fi1_is_empty or
	  upper_upper_merges_fi0_D_OUT or
	  WILL_FIRE_RL_upper_upper_merges_fi0_is_empty or
	  upper_upper_merges_fi1_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_upper_upper_merges_fo_enq_1__SEL_1:
	  upper_upper_merges_fo_D_IN = MUX_upper_upper_merges_fo_enq_1__VAL_1;
      WILL_FIRE_RL_upper_upper_merges_fi1_is_empty:
	  upper_upper_merges_fo_D_IN = upper_upper_merges_fi0_D_OUT;
      WILL_FIRE_RL_upper_upper_merges_fi0_is_empty:
	  upper_upper_merges_fo_D_IN = upper_upper_merges_fi1_D_OUT;
      default: upper_upper_merges_fo_D_IN =
		   610'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign upper_upper_merges_fo_ENQ =
	     WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	     (upper_upper_merges_routeFrom[1] ||
	      IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d40) ||
	     WILL_FIRE_RL_upper_upper_merges_fi1_is_empty ||
	     WILL_FIRE_RL_upper_upper_merges_fi0_is_empty ;
  assign upper_upper_merges_fo_DEQ = WILL_FIRE_RL_upper_route ;
  assign upper_upper_merges_fo_CLR = 1'b0 ;

  // submodule upper_upper_upper_f
  assign upper_upper_upper_f_D_IN = input_ports_0_put ;
  assign upper_upper_upper_f_ENQ = EN_input_ports_0_put ;
  assign upper_upper_upper_f_DEQ = WILL_FIRE_RL_upper_upper_route ;
  assign upper_upper_upper_f_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_lower_lower_merges_1_fi0HasPrio_58_THEN_NOT_ETC___d965 =
	     (lower_lower_merges_1_fi0HasPrio ?
		!lower_lower_merges_1_fi0_D_OUT[1] :
		!lower_lower_merges_1_fi1_D_OUT[1]) ||
	     lower_lower_merges_1_fo_FULL_N ;
  assign IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d966 =
	     (lower_lower_merges_1_fi0HasPrio ?
		lower_lower_merges_1_fi0_EMPTY_N :
		lower_lower_merges_1_fi1_EMPTY_N) &&
	     IF_lower_lower_merges_1_fi0HasPrio_58_THEN_NOT_ETC___d965 ;
  assign IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d979 =
	     lower_lower_merges_1_fi0HasPrio ?
	       lower_lower_merges_1_fi0_D_OUT[1] :
	       lower_lower_merges_1_fi1_D_OUT[1] ;
  assign IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d991 =
	     IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d979 &&
	     (lower_lower_merges_1_fi0HasPrio ?
		!lower_lower_merges_1_fi0_D_OUT[0] :
		!lower_lower_merges_1_fi1_D_OUT[0]) ;
  assign IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d996 =
	     lower_lower_merges_1_fi0HasPrio ?
	       lower_lower_merges_1_fi0_D_OUT[0] :
	       lower_lower_merges_1_fi1_D_OUT[0] ;
  assign IF_lower_lower_merges_1_routeFrom_53_BIT_0_55__ETC___d986 =
	     lower_lower_merges_1_routeFrom[0] ?
	       lower_lower_merges_1_fi1_D_OUT[0] :
	       lower_lower_merges_1_fi0_D_OUT[0] ;
  assign IF_lower_lower_merges_fi0HasPrio_83_THEN_NOT_l_ETC___d890 =
	     (lower_lower_merges_fi0HasPrio ?
		!lower_lower_merges_fi0_D_OUT[1] :
		!lower_lower_merges_fi1_D_OUT[1]) ||
	     lower_lower_merges_fo_FULL_N ;
  assign IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d891 =
	     (lower_lower_merges_fi0HasPrio ?
		lower_lower_merges_fi0_EMPTY_N :
		lower_lower_merges_fi1_EMPTY_N) &&
	     IF_lower_lower_merges_fi0HasPrio_83_THEN_NOT_l_ETC___d890 ;
  assign IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d904 =
	     lower_lower_merges_fi0HasPrio ?
	       lower_lower_merges_fi0_D_OUT[1] :
	       lower_lower_merges_fi1_D_OUT[1] ;
  assign IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d916 =
	     IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d904 &&
	     (lower_lower_merges_fi0HasPrio ?
		!lower_lower_merges_fi0_D_OUT[0] :
		!lower_lower_merges_fi1_D_OUT[0]) ;
  assign IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d921 =
	     lower_lower_merges_fi0HasPrio ?
	       lower_lower_merges_fi0_D_OUT[0] :
	       lower_lower_merges_fi1_D_OUT[0] ;
  assign IF_lower_lower_merges_routeFrom_78_BIT_0_80_TH_ETC___d911 =
	     lower_lower_merges_routeFrom[0] ?
	       lower_lower_merges_fi1_D_OUT[0] :
	       lower_lower_merges_fi0_D_OUT[0] ;
  assign IF_lower_merges_1_fi0HasPrio_130_THEN_NOT_lowe_ETC___d1137 =
	     (lower_merges_1_fi0HasPrio ?
		!lower_merges_1_fi0_D_OUT[1] :
		!lower_merges_1_fi1_D_OUT[1]) ||
	     lower_merges_1_fo_FULL_N ;
  assign IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1138 =
	     (lower_merges_1_fi0HasPrio ?
		lower_merges_1_fi0_EMPTY_N :
		lower_merges_1_fi1_EMPTY_N) &&
	     IF_lower_merges_1_fi0HasPrio_130_THEN_NOT_lowe_ETC___d1137 ;
  assign IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1151 =
	     lower_merges_1_fi0HasPrio ?
	       lower_merges_1_fi0_D_OUT[1] :
	       lower_merges_1_fi1_D_OUT[1] ;
  assign IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1163 =
	     IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1151 &&
	     (lower_merges_1_fi0HasPrio ?
		!lower_merges_1_fi0_D_OUT[0] :
		!lower_merges_1_fi1_D_OUT[0]) ;
  assign IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1168 =
	     lower_merges_1_fi0HasPrio ?
	       lower_merges_1_fi0_D_OUT[0] :
	       lower_merges_1_fi1_D_OUT[0] ;
  assign IF_lower_merges_1_routeFrom_125_BIT_0_127_THEN_ETC___d1158 =
	     lower_merges_1_routeFrom[0] ?
	       lower_merges_1_fi1_D_OUT[0] :
	       lower_merges_1_fi0_D_OUT[0] ;
  assign IF_lower_merges_2_fi0HasPrio_205_THEN_NOT_lowe_ETC___d1212 =
	     (lower_merges_2_fi0HasPrio ?
		!lower_merges_2_fi0_D_OUT[1] :
		!lower_merges_2_fi1_D_OUT[1]) ||
	     lower_merges_2_fo_FULL_N ;
  assign IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1213 =
	     (lower_merges_2_fi0HasPrio ?
		lower_merges_2_fi0_EMPTY_N :
		lower_merges_2_fi1_EMPTY_N) &&
	     IF_lower_merges_2_fi0HasPrio_205_THEN_NOT_lowe_ETC___d1212 ;
  assign IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1226 =
	     lower_merges_2_fi0HasPrio ?
	       lower_merges_2_fi0_D_OUT[1] :
	       lower_merges_2_fi1_D_OUT[1] ;
  assign IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1238 =
	     IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1226 &&
	     (lower_merges_2_fi0HasPrio ?
		!lower_merges_2_fi0_D_OUT[0] :
		!lower_merges_2_fi1_D_OUT[0]) ;
  assign IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1243 =
	     lower_merges_2_fi0HasPrio ?
	       lower_merges_2_fi0_D_OUT[0] :
	       lower_merges_2_fi1_D_OUT[0] ;
  assign IF_lower_merges_2_routeFrom_200_BIT_0_202_THEN_ETC___d1233 =
	     lower_merges_2_routeFrom[0] ?
	       lower_merges_2_fi1_D_OUT[0] :
	       lower_merges_2_fi0_D_OUT[0] ;
  assign IF_lower_merges_3_fi0HasPrio_280_THEN_NOT_lowe_ETC___d1287 =
	     (lower_merges_3_fi0HasPrio ?
		!lower_merges_3_fi0_D_OUT[1] :
		!lower_merges_3_fi1_D_OUT[1]) ||
	     lower_merges_3_fo_FULL_N ;
  assign IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1288 =
	     (lower_merges_3_fi0HasPrio ?
		lower_merges_3_fi0_EMPTY_N :
		lower_merges_3_fi1_EMPTY_N) &&
	     IF_lower_merges_3_fi0HasPrio_280_THEN_NOT_lowe_ETC___d1287 ;
  assign IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1301 =
	     lower_merges_3_fi0HasPrio ?
	       lower_merges_3_fi0_D_OUT[1] :
	       lower_merges_3_fi1_D_OUT[1] ;
  assign IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1313 =
	     IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1301 &&
	     (lower_merges_3_fi0HasPrio ?
		!lower_merges_3_fi0_D_OUT[0] :
		!lower_merges_3_fi1_D_OUT[0]) ;
  assign IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1318 =
	     lower_merges_3_fi0HasPrio ?
	       lower_merges_3_fi0_D_OUT[0] :
	       lower_merges_3_fi1_D_OUT[0] ;
  assign IF_lower_merges_3_routeFrom_275_BIT_0_277_THEN_ETC___d1308 =
	     lower_merges_3_routeFrom[0] ?
	       lower_merges_3_fi1_D_OUT[0] :
	       lower_merges_3_fi0_D_OUT[0] ;
  assign IF_lower_merges_fi0HasPrio_055_THEN_NOT_lower__ETC___d1062 =
	     (lower_merges_fi0HasPrio ?
		!lower_merges_fi0_D_OUT[1] :
		!lower_merges_fi1_D_OUT[1]) ||
	     lower_merges_fo_FULL_N ;
  assign IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1063 =
	     (lower_merges_fi0HasPrio ?
		lower_merges_fi0_EMPTY_N :
		lower_merges_fi1_EMPTY_N) &&
	     IF_lower_merges_fi0HasPrio_055_THEN_NOT_lower__ETC___d1062 ;
  assign IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1076 =
	     lower_merges_fi0HasPrio ?
	       lower_merges_fi0_D_OUT[1] :
	       lower_merges_fi1_D_OUT[1] ;
  assign IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1088 =
	     IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1076 &&
	     (lower_merges_fi0HasPrio ?
		!lower_merges_fi0_D_OUT[0] :
		!lower_merges_fi1_D_OUT[0]) ;
  assign IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1093 =
	     lower_merges_fi0HasPrio ?
	       lower_merges_fi0_D_OUT[0] :
	       lower_merges_fi1_D_OUT[0] ;
  assign IF_lower_merges_routeFrom_050_BIT_0_052_THEN_l_ETC___d1083 =
	     lower_merges_routeFrom[0] ?
	       lower_merges_fi1_D_OUT[0] :
	       lower_merges_fi0_D_OUT[0] ;
  assign IF_lower_upper_merges_1_fi0HasPrio_86_THEN_NOT_ETC___d793 =
	     (lower_upper_merges_1_fi0HasPrio ?
		!lower_upper_merges_1_fi0_D_OUT[1] :
		!lower_upper_merges_1_fi1_D_OUT[1]) ||
	     lower_upper_merges_1_fo_FULL_N ;
  assign IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d794 =
	     (lower_upper_merges_1_fi0HasPrio ?
		lower_upper_merges_1_fi0_EMPTY_N :
		lower_upper_merges_1_fi1_EMPTY_N) &&
	     IF_lower_upper_merges_1_fi0HasPrio_86_THEN_NOT_ETC___d793 ;
  assign IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d807 =
	     lower_upper_merges_1_fi0HasPrio ?
	       lower_upper_merges_1_fi0_D_OUT[1] :
	       lower_upper_merges_1_fi1_D_OUT[1] ;
  assign IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d819 =
	     IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d807 &&
	     (lower_upper_merges_1_fi0HasPrio ?
		!lower_upper_merges_1_fi0_D_OUT[0] :
		!lower_upper_merges_1_fi1_D_OUT[0]) ;
  assign IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d824 =
	     lower_upper_merges_1_fi0HasPrio ?
	       lower_upper_merges_1_fi0_D_OUT[0] :
	       lower_upper_merges_1_fi1_D_OUT[0] ;
  assign IF_lower_upper_merges_1_routeFrom_81_BIT_0_83__ETC___d814 =
	     lower_upper_merges_1_routeFrom[0] ?
	       lower_upper_merges_1_fi1_D_OUT[0] :
	       lower_upper_merges_1_fi0_D_OUT[0] ;
  assign IF_lower_upper_merges_fi0HasPrio_11_THEN_NOT_l_ETC___d718 =
	     (lower_upper_merges_fi0HasPrio ?
		!lower_upper_merges_fi0_D_OUT[1] :
		!lower_upper_merges_fi1_D_OUT[1]) ||
	     lower_upper_merges_fo_FULL_N ;
  assign IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d719 =
	     (lower_upper_merges_fi0HasPrio ?
		lower_upper_merges_fi0_EMPTY_N :
		lower_upper_merges_fi1_EMPTY_N) &&
	     IF_lower_upper_merges_fi0HasPrio_11_THEN_NOT_l_ETC___d718 ;
  assign IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d732 =
	     lower_upper_merges_fi0HasPrio ?
	       lower_upper_merges_fi0_D_OUT[1] :
	       lower_upper_merges_fi1_D_OUT[1] ;
  assign IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d744 =
	     IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d732 &&
	     (lower_upper_merges_fi0HasPrio ?
		!lower_upper_merges_fi0_D_OUT[0] :
		!lower_upper_merges_fi1_D_OUT[0]) ;
  assign IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d749 =
	     lower_upper_merges_fi0HasPrio ?
	       lower_upper_merges_fi0_D_OUT[0] :
	       lower_upper_merges_fi1_D_OUT[0] ;
  assign IF_lower_upper_merges_routeFrom_06_BIT_0_08_TH_ETC___d739 =
	     lower_upper_merges_routeFrom[0] ?
	       lower_upper_merges_fi1_D_OUT[0] :
	       lower_upper_merges_fi0_D_OUT[0] ;
  assign IF_merges_1_fi0HasPrio_474_THEN_NOT_merges_1_f_ETC___d1481 =
	     (merges_1_fi0HasPrio ?
		!merges_1_fi0_D_OUT[1] :
		!merges_1_fi1_D_OUT[1]) ||
	     merges_1_fo_FULL_N ;
  assign IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1495 =
	     merges_1_fi0HasPrio ?
	       merges_1_fi0_D_OUT[1] :
	       merges_1_fi1_D_OUT[1] ;
  assign IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1507 =
	     IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1495 &&
	     (merges_1_fi0HasPrio ?
		!merges_1_fi0_D_OUT[0] :
		!merges_1_fi1_D_OUT[0]) ;
  assign IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1512 =
	     merges_1_fi0HasPrio ?
	       merges_1_fi0_D_OUT[0] :
	       merges_1_fi1_D_OUT[0] ;
  assign IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_i_ETC___d1482 =
	     (merges_1_fi0HasPrio ?
		merges_1_fi0_EMPTY_N :
		merges_1_fi1_EMPTY_N) &&
	     IF_merges_1_fi0HasPrio_474_THEN_NOT_merges_1_f_ETC___d1481 ;
  assign IF_merges_1_routeFrom_469_BIT_0_471_THEN_merge_ETC___d1502 =
	     merges_1_routeFrom[0] ?
	       merges_1_fi1_D_OUT[0] :
	       merges_1_fi0_D_OUT[0] ;
  assign IF_merges_2_fi0HasPrio_549_THEN_NOT_merges_2_f_ETC___d1556 =
	     (merges_2_fi0HasPrio ?
		!merges_2_fi0_D_OUT[1] :
		!merges_2_fi1_D_OUT[1]) ||
	     merges_2_fo_FULL_N ;
  assign IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1570 =
	     merges_2_fi0HasPrio ?
	       merges_2_fi0_D_OUT[1] :
	       merges_2_fi1_D_OUT[1] ;
  assign IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1582 =
	     IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1570 &&
	     (merges_2_fi0HasPrio ?
		!merges_2_fi0_D_OUT[0] :
		!merges_2_fi1_D_OUT[0]) ;
  assign IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1587 =
	     merges_2_fi0HasPrio ?
	       merges_2_fi0_D_OUT[0] :
	       merges_2_fi1_D_OUT[0] ;
  assign IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_i_ETC___d1557 =
	     (merges_2_fi0HasPrio ?
		merges_2_fi0_EMPTY_N :
		merges_2_fi1_EMPTY_N) &&
	     IF_merges_2_fi0HasPrio_549_THEN_NOT_merges_2_f_ETC___d1556 ;
  assign IF_merges_2_routeFrom_544_BIT_0_546_THEN_merge_ETC___d1577 =
	     merges_2_routeFrom[0] ?
	       merges_2_fi1_D_OUT[0] :
	       merges_2_fi0_D_OUT[0] ;
  assign IF_merges_3_fi0HasPrio_624_THEN_NOT_merges_3_f_ETC___d1631 =
	     (merges_3_fi0HasPrio ?
		!merges_3_fi0_D_OUT[1] :
		!merges_3_fi1_D_OUT[1]) ||
	     merges_3_fo_FULL_N ;
  assign IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1645 =
	     merges_3_fi0HasPrio ?
	       merges_3_fi0_D_OUT[1] :
	       merges_3_fi1_D_OUT[1] ;
  assign IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1657 =
	     IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1645 &&
	     (merges_3_fi0HasPrio ?
		!merges_3_fi0_D_OUT[0] :
		!merges_3_fi1_D_OUT[0]) ;
  assign IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1662 =
	     merges_3_fi0HasPrio ?
	       merges_3_fi0_D_OUT[0] :
	       merges_3_fi1_D_OUT[0] ;
  assign IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_i_ETC___d1632 =
	     (merges_3_fi0HasPrio ?
		merges_3_fi0_EMPTY_N :
		merges_3_fi1_EMPTY_N) &&
	     IF_merges_3_fi0HasPrio_624_THEN_NOT_merges_3_f_ETC___d1631 ;
  assign IF_merges_3_routeFrom_619_BIT_0_621_THEN_merge_ETC___d1652 =
	     merges_3_routeFrom[0] ?
	       merges_3_fi1_D_OUT[0] :
	       merges_3_fi0_D_OUT[0] ;
  assign IF_merges_4_fi0HasPrio_699_THEN_NOT_merges_4_f_ETC___d1706 =
	     (merges_4_fi0HasPrio ?
		!merges_4_fi0_D_OUT[1] :
		!merges_4_fi1_D_OUT[1]) ||
	     merges_4_fo_FULL_N ;
  assign IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1720 =
	     merges_4_fi0HasPrio ?
	       merges_4_fi0_D_OUT[1] :
	       merges_4_fi1_D_OUT[1] ;
  assign IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1732 =
	     IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1720 &&
	     (merges_4_fi0HasPrio ?
		!merges_4_fi0_D_OUT[0] :
		!merges_4_fi1_D_OUT[0]) ;
  assign IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1737 =
	     merges_4_fi0HasPrio ?
	       merges_4_fi0_D_OUT[0] :
	       merges_4_fi1_D_OUT[0] ;
  assign IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_i_ETC___d1707 =
	     (merges_4_fi0HasPrio ?
		merges_4_fi0_EMPTY_N :
		merges_4_fi1_EMPTY_N) &&
	     IF_merges_4_fi0HasPrio_699_THEN_NOT_merges_4_f_ETC___d1706 ;
  assign IF_merges_4_routeFrom_694_BIT_0_696_THEN_merge_ETC___d1727 =
	     merges_4_routeFrom[0] ?
	       merges_4_fi1_D_OUT[0] :
	       merges_4_fi0_D_OUT[0] ;
  assign IF_merges_5_fi0HasPrio_774_THEN_NOT_merges_5_f_ETC___d1781 =
	     (merges_5_fi0HasPrio ?
		!merges_5_fi0_D_OUT[1] :
		!merges_5_fi1_D_OUT[1]) ||
	     merges_5_fo_FULL_N ;
  assign IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1795 =
	     merges_5_fi0HasPrio ?
	       merges_5_fi0_D_OUT[1] :
	       merges_5_fi1_D_OUT[1] ;
  assign IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1807 =
	     IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1795 &&
	     (merges_5_fi0HasPrio ?
		!merges_5_fi0_D_OUT[0] :
		!merges_5_fi1_D_OUT[0]) ;
  assign IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1812 =
	     merges_5_fi0HasPrio ?
	       merges_5_fi0_D_OUT[0] :
	       merges_5_fi1_D_OUT[0] ;
  assign IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_i_ETC___d1782 =
	     (merges_5_fi0HasPrio ?
		merges_5_fi0_EMPTY_N :
		merges_5_fi1_EMPTY_N) &&
	     IF_merges_5_fi0HasPrio_774_THEN_NOT_merges_5_f_ETC___d1781 ;
  assign IF_merges_5_routeFrom_769_BIT_0_771_THEN_merge_ETC___d1802 =
	     merges_5_routeFrom[0] ?
	       merges_5_fi1_D_OUT[0] :
	       merges_5_fi0_D_OUT[0] ;
  assign IF_merges_6_fi0HasPrio_849_THEN_NOT_merges_6_f_ETC___d1856 =
	     (merges_6_fi0HasPrio ?
		!merges_6_fi0_D_OUT[1] :
		!merges_6_fi1_D_OUT[1]) ||
	     merges_6_fo_FULL_N ;
  assign IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1870 =
	     merges_6_fi0HasPrio ?
	       merges_6_fi0_D_OUT[1] :
	       merges_6_fi1_D_OUT[1] ;
  assign IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1882 =
	     IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1870 &&
	     (merges_6_fi0HasPrio ?
		!merges_6_fi0_D_OUT[0] :
		!merges_6_fi1_D_OUT[0]) ;
  assign IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1887 =
	     merges_6_fi0HasPrio ?
	       merges_6_fi0_D_OUT[0] :
	       merges_6_fi1_D_OUT[0] ;
  assign IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_i_ETC___d1857 =
	     (merges_6_fi0HasPrio ?
		merges_6_fi0_EMPTY_N :
		merges_6_fi1_EMPTY_N) &&
	     IF_merges_6_fi0HasPrio_849_THEN_NOT_merges_6_f_ETC___d1856 ;
  assign IF_merges_6_routeFrom_844_BIT_0_846_THEN_merge_ETC___d1877 =
	     merges_6_routeFrom[0] ?
	       merges_6_fi1_D_OUT[0] :
	       merges_6_fi0_D_OUT[0] ;
  assign IF_merges_7_fi0HasPrio_924_THEN_NOT_merges_7_f_ETC___d1931 =
	     (merges_7_fi0HasPrio ?
		!merges_7_fi0_D_OUT[1] :
		!merges_7_fi1_D_OUT[1]) ||
	     merges_7_fo_FULL_N ;
  assign IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1945 =
	     merges_7_fi0HasPrio ?
	       merges_7_fi0_D_OUT[1] :
	       merges_7_fi1_D_OUT[1] ;
  assign IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1957 =
	     IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1945 &&
	     (merges_7_fi0HasPrio ?
		!merges_7_fi0_D_OUT[0] :
		!merges_7_fi1_D_OUT[0]) ;
  assign IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1962 =
	     merges_7_fi0HasPrio ?
	       merges_7_fi0_D_OUT[0] :
	       merges_7_fi1_D_OUT[0] ;
  assign IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_i_ETC___d1932 =
	     (merges_7_fi0HasPrio ?
		merges_7_fi0_EMPTY_N :
		merges_7_fi1_EMPTY_N) &&
	     IF_merges_7_fi0HasPrio_924_THEN_NOT_merges_7_f_ETC___d1931 ;
  assign IF_merges_7_routeFrom_919_BIT_0_921_THEN_merge_ETC___d1952 =
	     merges_7_routeFrom[0] ?
	       merges_7_fi1_D_OUT[0] :
	       merges_7_fi0_D_OUT[0] ;
  assign IF_merges_fi0HasPrio_399_THEN_NOT_merges_fi0_f_ETC___d1406 =
	     (merges_fi0HasPrio ?
		!merges_fi0_D_OUT[1] :
		!merges_fi1_D_OUT[1]) ||
	     merges_fo_FULL_N ;
  assign IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1420 =
	     merges_fi0HasPrio ? merges_fi0_D_OUT[1] : merges_fi1_D_OUT[1] ;
  assign IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1432 =
	     IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1420 &&
	     (merges_fi0HasPrio ?
		!merges_fi0_D_OUT[0] :
		!merges_fi1_D_OUT[0]) ;
  assign IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1437 =
	     merges_fi0HasPrio ? merges_fi0_D_OUT[0] : merges_fi1_D_OUT[0] ;
  assign IF_merges_fi0HasPrio_399_THEN_merges_fi0_i_not_ETC___d1407 =
	     (merges_fi0HasPrio ? merges_fi0_EMPTY_N : merges_fi1_EMPTY_N) &&
	     IF_merges_fi0HasPrio_399_THEN_NOT_merges_fi0_f_ETC___d1406 ;
  assign IF_merges_routeFrom_394_BIT_0_396_THEN_merges__ETC___d1427 =
	     merges_routeFrom[0] ? merges_fi1_D_OUT[0] : merges_fi0_D_OUT[0] ;
  assign IF_upper_lower_merges_1_fi0HasPrio_68_THEN_NOT_ETC___d275 =
	     (upper_lower_merges_1_fi0HasPrio ?
		!upper_lower_merges_1_fi0_D_OUT[1] :
		!upper_lower_merges_1_fi1_D_OUT[1]) ||
	     upper_lower_merges_1_fo_FULL_N ;
  assign IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d276 =
	     (upper_lower_merges_1_fi0HasPrio ?
		upper_lower_merges_1_fi0_EMPTY_N :
		upper_lower_merges_1_fi1_EMPTY_N) &&
	     IF_upper_lower_merges_1_fi0HasPrio_68_THEN_NOT_ETC___d275 ;
  assign IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d289 =
	     upper_lower_merges_1_fi0HasPrio ?
	       upper_lower_merges_1_fi0_D_OUT[1] :
	       upper_lower_merges_1_fi1_D_OUT[1] ;
  assign IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d301 =
	     IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d289 &&
	     (upper_lower_merges_1_fi0HasPrio ?
		!upper_lower_merges_1_fi0_D_OUT[0] :
		!upper_lower_merges_1_fi1_D_OUT[0]) ;
  assign IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d306 =
	     upper_lower_merges_1_fi0HasPrio ?
	       upper_lower_merges_1_fi0_D_OUT[0] :
	       upper_lower_merges_1_fi1_D_OUT[0] ;
  assign IF_upper_lower_merges_1_routeFrom_63_BIT_0_65__ETC___d296 =
	     upper_lower_merges_1_routeFrom[0] ?
	       upper_lower_merges_1_fi1_D_OUT[0] :
	       upper_lower_merges_1_fi0_D_OUT[0] ;
  assign IF_upper_lower_merges_fi0HasPrio_93_THEN_NOT_u_ETC___d200 =
	     (upper_lower_merges_fi0HasPrio ?
		!upper_lower_merges_fi0_D_OUT[1] :
		!upper_lower_merges_fi1_D_OUT[1]) ||
	     upper_lower_merges_fo_FULL_N ;
  assign IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d201 =
	     (upper_lower_merges_fi0HasPrio ?
		upper_lower_merges_fi0_EMPTY_N :
		upper_lower_merges_fi1_EMPTY_N) &&
	     IF_upper_lower_merges_fi0HasPrio_93_THEN_NOT_u_ETC___d200 ;
  assign IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d214 =
	     upper_lower_merges_fi0HasPrio ?
	       upper_lower_merges_fi0_D_OUT[1] :
	       upper_lower_merges_fi1_D_OUT[1] ;
  assign IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d226 =
	     IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d214 &&
	     (upper_lower_merges_fi0HasPrio ?
		!upper_lower_merges_fi0_D_OUT[0] :
		!upper_lower_merges_fi1_D_OUT[0]) ;
  assign IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d231 =
	     upper_lower_merges_fi0HasPrio ?
	       upper_lower_merges_fi0_D_OUT[0] :
	       upper_lower_merges_fi1_D_OUT[0] ;
  assign IF_upper_lower_merges_routeFrom_88_BIT_0_90_TH_ETC___d221 =
	     upper_lower_merges_routeFrom[0] ?
	       upper_lower_merges_fi1_D_OUT[0] :
	       upper_lower_merges_fi0_D_OUT[0] ;
  assign IF_upper_merges_1_fi0HasPrio_40_THEN_NOT_upper_ETC___d447 =
	     (upper_merges_1_fi0HasPrio ?
		!upper_merges_1_fi0_D_OUT[1] :
		!upper_merges_1_fi1_D_OUT[1]) ||
	     upper_merges_1_fo_FULL_N ;
  assign IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d448 =
	     (upper_merges_1_fi0HasPrio ?
		upper_merges_1_fi0_EMPTY_N :
		upper_merges_1_fi1_EMPTY_N) &&
	     IF_upper_merges_1_fi0HasPrio_40_THEN_NOT_upper_ETC___d447 ;
  assign IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d461 =
	     upper_merges_1_fi0HasPrio ?
	       upper_merges_1_fi0_D_OUT[1] :
	       upper_merges_1_fi1_D_OUT[1] ;
  assign IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d473 =
	     IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d461 &&
	     (upper_merges_1_fi0HasPrio ?
		!upper_merges_1_fi0_D_OUT[0] :
		!upper_merges_1_fi1_D_OUT[0]) ;
  assign IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d478 =
	     upper_merges_1_fi0HasPrio ?
	       upper_merges_1_fi0_D_OUT[0] :
	       upper_merges_1_fi1_D_OUT[0] ;
  assign IF_upper_merges_1_routeFrom_35_BIT_0_37_THEN_u_ETC___d468 =
	     upper_merges_1_routeFrom[0] ?
	       upper_merges_1_fi1_D_OUT[0] :
	       upper_merges_1_fi0_D_OUT[0] ;
  assign IF_upper_merges_2_fi0HasPrio_15_THEN_NOT_upper_ETC___d522 =
	     (upper_merges_2_fi0HasPrio ?
		!upper_merges_2_fi0_D_OUT[1] :
		!upper_merges_2_fi1_D_OUT[1]) ||
	     upper_merges_2_fo_FULL_N ;
  assign IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d523 =
	     (upper_merges_2_fi0HasPrio ?
		upper_merges_2_fi0_EMPTY_N :
		upper_merges_2_fi1_EMPTY_N) &&
	     IF_upper_merges_2_fi0HasPrio_15_THEN_NOT_upper_ETC___d522 ;
  assign IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d536 =
	     upper_merges_2_fi0HasPrio ?
	       upper_merges_2_fi0_D_OUT[1] :
	       upper_merges_2_fi1_D_OUT[1] ;
  assign IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d548 =
	     IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d536 &&
	     (upper_merges_2_fi0HasPrio ?
		!upper_merges_2_fi0_D_OUT[0] :
		!upper_merges_2_fi1_D_OUT[0]) ;
  assign IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d553 =
	     upper_merges_2_fi0HasPrio ?
	       upper_merges_2_fi0_D_OUT[0] :
	       upper_merges_2_fi1_D_OUT[0] ;
  assign IF_upper_merges_2_routeFrom_10_BIT_0_12_THEN_u_ETC___d543 =
	     upper_merges_2_routeFrom[0] ?
	       upper_merges_2_fi1_D_OUT[0] :
	       upper_merges_2_fi0_D_OUT[0] ;
  assign IF_upper_merges_3_fi0HasPrio_90_THEN_NOT_upper_ETC___d597 =
	     (upper_merges_3_fi0HasPrio ?
		!upper_merges_3_fi0_D_OUT[1] :
		!upper_merges_3_fi1_D_OUT[1]) ||
	     upper_merges_3_fo_FULL_N ;
  assign IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d598 =
	     (upper_merges_3_fi0HasPrio ?
		upper_merges_3_fi0_EMPTY_N :
		upper_merges_3_fi1_EMPTY_N) &&
	     IF_upper_merges_3_fi0HasPrio_90_THEN_NOT_upper_ETC___d597 ;
  assign IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d611 =
	     upper_merges_3_fi0HasPrio ?
	       upper_merges_3_fi0_D_OUT[1] :
	       upper_merges_3_fi1_D_OUT[1] ;
  assign IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d623 =
	     IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d611 &&
	     (upper_merges_3_fi0HasPrio ?
		!upper_merges_3_fi0_D_OUT[0] :
		!upper_merges_3_fi1_D_OUT[0]) ;
  assign IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d628 =
	     upper_merges_3_fi0HasPrio ?
	       upper_merges_3_fi0_D_OUT[0] :
	       upper_merges_3_fi1_D_OUT[0] ;
  assign IF_upper_merges_3_routeFrom_85_BIT_0_87_THEN_u_ETC___d618 =
	     upper_merges_3_routeFrom[0] ?
	       upper_merges_3_fi1_D_OUT[0] :
	       upper_merges_3_fi0_D_OUT[0] ;
  assign IF_upper_merges_fi0HasPrio_65_THEN_NOT_upper_m_ETC___d372 =
	     (upper_merges_fi0HasPrio ?
		!upper_merges_fi0_D_OUT[1] :
		!upper_merges_fi1_D_OUT[1]) ||
	     upper_merges_fo_FULL_N ;
  assign IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d373 =
	     (upper_merges_fi0HasPrio ?
		upper_merges_fi0_EMPTY_N :
		upper_merges_fi1_EMPTY_N) &&
	     IF_upper_merges_fi0HasPrio_65_THEN_NOT_upper_m_ETC___d372 ;
  assign IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d386 =
	     upper_merges_fi0HasPrio ?
	       upper_merges_fi0_D_OUT[1] :
	       upper_merges_fi1_D_OUT[1] ;
  assign IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d398 =
	     IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d386 &&
	     (upper_merges_fi0HasPrio ?
		!upper_merges_fi0_D_OUT[0] :
		!upper_merges_fi1_D_OUT[0]) ;
  assign IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d403 =
	     upper_merges_fi0HasPrio ?
	       upper_merges_fi0_D_OUT[0] :
	       upper_merges_fi1_D_OUT[0] ;
  assign IF_upper_merges_routeFrom_60_BIT_0_62_THEN_upp_ETC___d393 =
	     upper_merges_routeFrom[0] ?
	       upper_merges_fi1_D_OUT[0] :
	       upper_merges_fi0_D_OUT[0] ;
  assign IF_upper_upper_merges_1_fi0HasPrio_4_THEN_NOT__ETC___d101 =
	     (upper_upper_merges_1_fi0HasPrio ?
		!upper_upper_merges_1_fi0_D_OUT[1] :
		!upper_upper_merges_1_fi1_D_OUT[1]) ||
	     upper_upper_merges_1_fo_FULL_N ;
  assign IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d102 =
	     (upper_upper_merges_1_fi0HasPrio ?
		upper_upper_merges_1_fi0_EMPTY_N :
		upper_upper_merges_1_fi1_EMPTY_N) &&
	     IF_upper_upper_merges_1_fi0HasPrio_4_THEN_NOT__ETC___d101 ;
  assign IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d115 =
	     upper_upper_merges_1_fi0HasPrio ?
	       upper_upper_merges_1_fi0_D_OUT[1] :
	       upper_upper_merges_1_fi1_D_OUT[1] ;
  assign IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d127 =
	     IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d115 &&
	     (upper_upper_merges_1_fi0HasPrio ?
		!upper_upper_merges_1_fi0_D_OUT[0] :
		!upper_upper_merges_1_fi1_D_OUT[0]) ;
  assign IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d132 =
	     upper_upper_merges_1_fi0HasPrio ?
	       upper_upper_merges_1_fi0_D_OUT[0] :
	       upper_upper_merges_1_fi1_D_OUT[0] ;
  assign IF_upper_upper_merges_1_routeFrom_9_BIT_0_1_TH_ETC___d122 =
	     upper_upper_merges_1_routeFrom[0] ?
	       upper_upper_merges_1_fi1_D_OUT[0] :
	       upper_upper_merges_1_fi0_D_OUT[0] ;
  assign IF_upper_upper_merges_fi0HasPrio_9_THEN_NOT_up_ETC___d26 =
	     (upper_upper_merges_fi0HasPrio ?
		!upper_upper_merges_fi0_D_OUT[1] :
		!upper_upper_merges_fi1_D_OUT[1]) ||
	     upper_upper_merges_fo_FULL_N ;
  assign IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d27 =
	     (upper_upper_merges_fi0HasPrio ?
		upper_upper_merges_fi0_EMPTY_N :
		upper_upper_merges_fi1_EMPTY_N) &&
	     IF_upper_upper_merges_fi0HasPrio_9_THEN_NOT_up_ETC___d26 ;
  assign IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d40 =
	     upper_upper_merges_fi0HasPrio ?
	       upper_upper_merges_fi0_D_OUT[1] :
	       upper_upper_merges_fi1_D_OUT[1] ;
  assign IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d52 =
	     IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d40 &&
	     (upper_upper_merges_fi0HasPrio ?
		!upper_upper_merges_fi0_D_OUT[0] :
		!upper_upper_merges_fi1_D_OUT[0]) ;
  assign IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d57 =
	     upper_upper_merges_fi0HasPrio ?
	       upper_upper_merges_fi0_D_OUT[0] :
	       upper_upper_merges_fi1_D_OUT[0] ;
  assign IF_upper_upper_merges_routeFrom_4_BIT_0_6_THEN_ETC___d47 =
	     upper_upper_merges_routeFrom[0] ?
	       upper_upper_merges_fi1_D_OUT[0] :
	       upper_upper_merges_fi0_D_OUT[0] ;
  assign lower_lower_merges_1_fo_i_notFull__41_AND_IF_l_ETC___d957 =
	     lower_lower_merges_1_fo_FULL_N &&
	     (lower_lower_merges_1_routeFrom[0] ?
		lower_lower_merges_1_fi1_EMPTY_N :
		lower_lower_merges_1_fi0_EMPTY_N) ;
  assign lower_lower_merges_1_routeFrom_53_BIT_1_54_AND_ETC___d999 =
	     lower_lower_merges_1_routeFrom[1] &&
	     IF_lower_lower_merges_1_routeFrom_53_BIT_0_55__ETC___d986 ||
	     !lower_lower_merges_1_routeFrom[1] &&
	     IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d979 &&
	     IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d996 ;
  assign lower_lower_merges_fo_i_notFull__66_AND_IF_low_ETC___d882 =
	     lower_lower_merges_fo_FULL_N &&
	     (lower_lower_merges_routeFrom[0] ?
		lower_lower_merges_fi1_EMPTY_N :
		lower_lower_merges_fi0_EMPTY_N) ;
  assign lower_lower_merges_routeFrom_78_BIT_1_79_AND_I_ETC___d924 =
	     lower_lower_merges_routeFrom[1] &&
	     IF_lower_lower_merges_routeFrom_78_BIT_0_80_TH_ETC___d911 ||
	     !lower_lower_merges_routeFrom[1] &&
	     IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d904 &&
	     IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d921 ;
  assign lower_merges_1_fo_i_notFull__113_AND_IF_lower__ETC___d1129 =
	     lower_merges_1_fo_FULL_N &&
	     (lower_merges_1_routeFrom[0] ?
		lower_merges_1_fi1_EMPTY_N :
		lower_merges_1_fi0_EMPTY_N) ;
  assign lower_merges_1_routeFrom_125_BIT_1_126_AND_IF__ETC___d1171 =
	     lower_merges_1_routeFrom[1] &&
	     IF_lower_merges_1_routeFrom_125_BIT_0_127_THEN_ETC___d1158 ||
	     !lower_merges_1_routeFrom[1] &&
	     IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1151 &&
	     IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1168 ;
  assign lower_merges_2_fo_i_notFull__188_AND_IF_lower__ETC___d1204 =
	     lower_merges_2_fo_FULL_N &&
	     (lower_merges_2_routeFrom[0] ?
		lower_merges_2_fi1_EMPTY_N :
		lower_merges_2_fi0_EMPTY_N) ;
  assign lower_merges_2_routeFrom_200_BIT_1_201_AND_IF__ETC___d1246 =
	     lower_merges_2_routeFrom[1] &&
	     IF_lower_merges_2_routeFrom_200_BIT_0_202_THEN_ETC___d1233 ||
	     !lower_merges_2_routeFrom[1] &&
	     IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1226 &&
	     IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1243 ;
  assign lower_merges_3_fo_i_notFull__263_AND_IF_lower__ETC___d1279 =
	     lower_merges_3_fo_FULL_N &&
	     (lower_merges_3_routeFrom[0] ?
		lower_merges_3_fi1_EMPTY_N :
		lower_merges_3_fi0_EMPTY_N) ;
  assign lower_merges_3_routeFrom_275_BIT_1_276_AND_IF__ETC___d1321 =
	     lower_merges_3_routeFrom[1] &&
	     IF_lower_merges_3_routeFrom_275_BIT_0_277_THEN_ETC___d1308 ||
	     !lower_merges_3_routeFrom[1] &&
	     IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1301 &&
	     IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1318 ;
  assign lower_merges_fo_i_notFull__038_AND_IF_lower_me_ETC___d1054 =
	     lower_merges_fo_FULL_N &&
	     (lower_merges_routeFrom[0] ?
		lower_merges_fi1_EMPTY_N :
		lower_merges_fi0_EMPTY_N) ;
  assign lower_merges_routeFrom_050_BIT_1_051_AND_IF_lo_ETC___d1096 =
	     lower_merges_routeFrom[1] &&
	     IF_lower_merges_routeFrom_050_BIT_0_052_THEN_l_ETC___d1083 ||
	     !lower_merges_routeFrom[1] &&
	     IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1076 &&
	     IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1093 ;
  assign lower_upper_merges_1_fo_i_notFull__69_AND_IF_l_ETC___d785 =
	     lower_upper_merges_1_fo_FULL_N &&
	     (lower_upper_merges_1_routeFrom[0] ?
		lower_upper_merges_1_fi1_EMPTY_N :
		lower_upper_merges_1_fi0_EMPTY_N) ;
  assign lower_upper_merges_1_routeFrom_81_BIT_1_82_AND_ETC___d827 =
	     lower_upper_merges_1_routeFrom[1] &&
	     IF_lower_upper_merges_1_routeFrom_81_BIT_0_83__ETC___d814 ||
	     !lower_upper_merges_1_routeFrom[1] &&
	     IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d807 &&
	     IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d824 ;
  assign lower_upper_merges_fo_i_notFull__94_AND_IF_low_ETC___d710 =
	     lower_upper_merges_fo_FULL_N &&
	     (lower_upper_merges_routeFrom[0] ?
		lower_upper_merges_fi1_EMPTY_N :
		lower_upper_merges_fi0_EMPTY_N) ;
  assign lower_upper_merges_routeFrom_06_BIT_1_07_AND_I_ETC___d752 =
	     lower_upper_merges_routeFrom[1] &&
	     IF_lower_upper_merges_routeFrom_06_BIT_0_08_TH_ETC___d739 ||
	     !lower_upper_merges_routeFrom[1] &&
	     IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d732 &&
	     IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d749 ;
  assign merges_1_fo_i_notFull__457_AND_IF_merges_1_rou_ETC___d1473 =
	     merges_1_fo_FULL_N &&
	     (merges_1_routeFrom[0] ?
		merges_1_fi1_EMPTY_N :
		merges_1_fi0_EMPTY_N) ;
  assign merges_1_routeFrom_469_BIT_1_470_AND_IF_merges_ETC___d1515 =
	     merges_1_routeFrom[1] &&
	     IF_merges_1_routeFrom_469_BIT_0_471_THEN_merge_ETC___d1502 ||
	     !merges_1_routeFrom[1] &&
	     IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1495 &&
	     IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1512 ;
  assign merges_2_fo_i_notFull__532_AND_IF_merges_2_rou_ETC___d1548 =
	     merges_2_fo_FULL_N &&
	     (merges_2_routeFrom[0] ?
		merges_2_fi1_EMPTY_N :
		merges_2_fi0_EMPTY_N) ;
  assign merges_2_routeFrom_544_BIT_1_545_AND_IF_merges_ETC___d1590 =
	     merges_2_routeFrom[1] &&
	     IF_merges_2_routeFrom_544_BIT_0_546_THEN_merge_ETC___d1577 ||
	     !merges_2_routeFrom[1] &&
	     IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1570 &&
	     IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1587 ;
  assign merges_3_fo_i_notFull__607_AND_IF_merges_3_rou_ETC___d1623 =
	     merges_3_fo_FULL_N &&
	     (merges_3_routeFrom[0] ?
		merges_3_fi1_EMPTY_N :
		merges_3_fi0_EMPTY_N) ;
  assign merges_3_routeFrom_619_BIT_1_620_AND_IF_merges_ETC___d1665 =
	     merges_3_routeFrom[1] &&
	     IF_merges_3_routeFrom_619_BIT_0_621_THEN_merge_ETC___d1652 ||
	     !merges_3_routeFrom[1] &&
	     IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1645 &&
	     IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1662 ;
  assign merges_4_fo_i_notFull__682_AND_IF_merges_4_rou_ETC___d1698 =
	     merges_4_fo_FULL_N &&
	     (merges_4_routeFrom[0] ?
		merges_4_fi1_EMPTY_N :
		merges_4_fi0_EMPTY_N) ;
  assign merges_4_routeFrom_694_BIT_1_695_AND_IF_merges_ETC___d1740 =
	     merges_4_routeFrom[1] &&
	     IF_merges_4_routeFrom_694_BIT_0_696_THEN_merge_ETC___d1727 ||
	     !merges_4_routeFrom[1] &&
	     IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1720 &&
	     IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1737 ;
  assign merges_5_fo_i_notFull__757_AND_IF_merges_5_rou_ETC___d1773 =
	     merges_5_fo_FULL_N &&
	     (merges_5_routeFrom[0] ?
		merges_5_fi1_EMPTY_N :
		merges_5_fi0_EMPTY_N) ;
  assign merges_5_routeFrom_769_BIT_1_770_AND_IF_merges_ETC___d1815 =
	     merges_5_routeFrom[1] &&
	     IF_merges_5_routeFrom_769_BIT_0_771_THEN_merge_ETC___d1802 ||
	     !merges_5_routeFrom[1] &&
	     IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1795 &&
	     IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1812 ;
  assign merges_6_fo_i_notFull__832_AND_IF_merges_6_rou_ETC___d1848 =
	     merges_6_fo_FULL_N &&
	     (merges_6_routeFrom[0] ?
		merges_6_fi1_EMPTY_N :
		merges_6_fi0_EMPTY_N) ;
  assign merges_6_routeFrom_844_BIT_1_845_AND_IF_merges_ETC___d1890 =
	     merges_6_routeFrom[1] &&
	     IF_merges_6_routeFrom_844_BIT_0_846_THEN_merge_ETC___d1877 ||
	     !merges_6_routeFrom[1] &&
	     IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1870 &&
	     IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1887 ;
  assign merges_7_fo_i_notFull__907_AND_IF_merges_7_rou_ETC___d1923 =
	     merges_7_fo_FULL_N &&
	     (merges_7_routeFrom[0] ?
		merges_7_fi1_EMPTY_N :
		merges_7_fi0_EMPTY_N) ;
  assign merges_7_routeFrom_919_BIT_1_920_AND_IF_merges_ETC___d1965 =
	     merges_7_routeFrom[1] &&
	     IF_merges_7_routeFrom_919_BIT_0_921_THEN_merge_ETC___d1952 ||
	     !merges_7_routeFrom[1] &&
	     IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1945 &&
	     IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1962 ;
  assign merges_fo_i_notFull__382_AND_IF_merges_routeFr_ETC___d1398 =
	     merges_fo_FULL_N &&
	     (merges_routeFrom[0] ? merges_fi1_EMPTY_N : merges_fi0_EMPTY_N) ;
  assign merges_routeFrom_394_BIT_1_395_AND_IF_merges_r_ETC___d1440 =
	     merges_routeFrom[1] &&
	     IF_merges_routeFrom_394_BIT_0_396_THEN_merges__ETC___d1427 ||
	     !merges_routeFrom[1] &&
	     IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1420 &&
	     IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1437 ;
  assign upper_lower_merges_1_fo_i_notFull__51_AND_IF_u_ETC___d267 =
	     upper_lower_merges_1_fo_FULL_N &&
	     (upper_lower_merges_1_routeFrom[0] ?
		upper_lower_merges_1_fi1_EMPTY_N :
		upper_lower_merges_1_fi0_EMPTY_N) ;
  assign upper_lower_merges_1_routeFrom_63_BIT_1_64_AND_ETC___d309 =
	     upper_lower_merges_1_routeFrom[1] &&
	     IF_upper_lower_merges_1_routeFrom_63_BIT_0_65__ETC___d296 ||
	     !upper_lower_merges_1_routeFrom[1] &&
	     IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d289 &&
	     IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d306 ;
  assign upper_lower_merges_fo_i_notFull__76_AND_IF_upp_ETC___d192 =
	     upper_lower_merges_fo_FULL_N &&
	     (upper_lower_merges_routeFrom[0] ?
		upper_lower_merges_fi1_EMPTY_N :
		upper_lower_merges_fi0_EMPTY_N) ;
  assign upper_lower_merges_routeFrom_88_BIT_1_89_AND_I_ETC___d234 =
	     upper_lower_merges_routeFrom[1] &&
	     IF_upper_lower_merges_routeFrom_88_BIT_0_90_TH_ETC___d221 ||
	     !upper_lower_merges_routeFrom[1] &&
	     IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d214 &&
	     IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d231 ;
  assign upper_merges_1_fo_i_notFull__23_AND_IF_upper_m_ETC___d439 =
	     upper_merges_1_fo_FULL_N &&
	     (upper_merges_1_routeFrom[0] ?
		upper_merges_1_fi1_EMPTY_N :
		upper_merges_1_fi0_EMPTY_N) ;
  assign upper_merges_1_routeFrom_35_BIT_1_36_AND_IF_up_ETC___d481 =
	     upper_merges_1_routeFrom[1] &&
	     IF_upper_merges_1_routeFrom_35_BIT_0_37_THEN_u_ETC___d468 ||
	     !upper_merges_1_routeFrom[1] &&
	     IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d461 &&
	     IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d478 ;
  assign upper_merges_2_fo_i_notFull__98_AND_IF_upper_m_ETC___d514 =
	     upper_merges_2_fo_FULL_N &&
	     (upper_merges_2_routeFrom[0] ?
		upper_merges_2_fi1_EMPTY_N :
		upper_merges_2_fi0_EMPTY_N) ;
  assign upper_merges_2_routeFrom_10_BIT_1_11_AND_IF_up_ETC___d556 =
	     upper_merges_2_routeFrom[1] &&
	     IF_upper_merges_2_routeFrom_10_BIT_0_12_THEN_u_ETC___d543 ||
	     !upper_merges_2_routeFrom[1] &&
	     IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d536 &&
	     IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d553 ;
  assign upper_merges_3_fo_i_notFull__73_AND_IF_upper_m_ETC___d589 =
	     upper_merges_3_fo_FULL_N &&
	     (upper_merges_3_routeFrom[0] ?
		upper_merges_3_fi1_EMPTY_N :
		upper_merges_3_fi0_EMPTY_N) ;
  assign upper_merges_3_routeFrom_85_BIT_1_86_AND_IF_up_ETC___d631 =
	     upper_merges_3_routeFrom[1] &&
	     IF_upper_merges_3_routeFrom_85_BIT_0_87_THEN_u_ETC___d618 ||
	     !upper_merges_3_routeFrom[1] &&
	     IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d611 &&
	     IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d628 ;
  assign upper_merges_fo_i_notFull__48_AND_IF_upper_mer_ETC___d364 =
	     upper_merges_fo_FULL_N &&
	     (upper_merges_routeFrom[0] ?
		upper_merges_fi1_EMPTY_N :
		upper_merges_fi0_EMPTY_N) ;
  assign upper_merges_routeFrom_60_BIT_1_61_AND_IF_uppe_ETC___d406 =
	     upper_merges_routeFrom[1] &&
	     IF_upper_merges_routeFrom_60_BIT_0_62_THEN_upp_ETC___d393 ||
	     !upper_merges_routeFrom[1] &&
	     IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d386 &&
	     IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d403 ;
  assign upper_upper_merges_1_fo_i_notFull__7_AND_IF_up_ETC___d93 =
	     upper_upper_merges_1_fo_FULL_N &&
	     (upper_upper_merges_1_routeFrom[0] ?
		upper_upper_merges_1_fi1_EMPTY_N :
		upper_upper_merges_1_fi0_EMPTY_N) ;
  assign upper_upper_merges_1_routeFrom_9_BIT_1_0_AND_I_ETC___d135 =
	     upper_upper_merges_1_routeFrom[1] &&
	     IF_upper_upper_merges_1_routeFrom_9_BIT_0_1_TH_ETC___d122 ||
	     !upper_upper_merges_1_routeFrom[1] &&
	     IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d115 &&
	     IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d132 ;
  assign upper_upper_merges_fo_i_notFull_AND_IF_upper_u_ETC___d18 =
	     upper_upper_merges_fo_FULL_N &&
	     (upper_upper_merges_routeFrom[0] ?
		upper_upper_merges_fi1_EMPTY_N :
		upper_upper_merges_fi0_EMPTY_N) ;
  assign upper_upper_merges_routeFrom_4_BIT_1_5_AND_IF__ETC___d60 =
	     upper_upper_merges_routeFrom[1] &&
	     IF_upper_upper_merges_routeFrom_4_BIT_0_6_THEN_ETC___d47 ||
	     !upper_upper_merges_routeFrom[1] &&
	     IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d40 &&
	     IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d57 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        lower_lower_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_lower_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	lower_lower_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_lower_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	lower_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	lower_merges_2_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_merges_2_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	lower_merges_3_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_merges_3_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	lower_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	lower_upper_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_upper_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	lower_upper_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	lower_upper_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_2_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_2_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_3_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_3_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_4_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_4_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_5_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_5_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_6_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_6_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_7_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_7_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	merges_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_lower_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_lower_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_lower_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_lower_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_merges_2_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_merges_2_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_merges_3_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_merges_3_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_upper_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_upper_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
	upper_upper_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY 1'd1;
	upper_upper_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (lower_lower_merges_1_fi0HasPrio_EN)
	  lower_lower_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_lower_merges_1_fi0HasPrio_D_IN;
	if (lower_lower_merges_1_routeFrom_EN)
	  lower_lower_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_lower_merges_1_routeFrom_D_IN;
	if (lower_lower_merges_fi0HasPrio_EN)
	  lower_lower_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_lower_merges_fi0HasPrio_D_IN;
	if (lower_lower_merges_routeFrom_EN)
	  lower_lower_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_lower_merges_routeFrom_D_IN;
	if (lower_merges_1_fi0HasPrio_EN)
	  lower_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_1_fi0HasPrio_D_IN;
	if (lower_merges_1_routeFrom_EN)
	  lower_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_1_routeFrom_D_IN;
	if (lower_merges_2_fi0HasPrio_EN)
	  lower_merges_2_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_2_fi0HasPrio_D_IN;
	if (lower_merges_2_routeFrom_EN)
	  lower_merges_2_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_2_routeFrom_D_IN;
	if (lower_merges_3_fi0HasPrio_EN)
	  lower_merges_3_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_3_fi0HasPrio_D_IN;
	if (lower_merges_3_routeFrom_EN)
	  lower_merges_3_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_3_routeFrom_D_IN;
	if (lower_merges_fi0HasPrio_EN)
	  lower_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_fi0HasPrio_D_IN;
	if (lower_merges_routeFrom_EN)
	  lower_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_merges_routeFrom_D_IN;
	if (lower_upper_merges_1_fi0HasPrio_EN)
	  lower_upper_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_upper_merges_1_fi0HasPrio_D_IN;
	if (lower_upper_merges_1_routeFrom_EN)
	  lower_upper_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_upper_merges_1_routeFrom_D_IN;
	if (lower_upper_merges_fi0HasPrio_EN)
	  lower_upper_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      lower_upper_merges_fi0HasPrio_D_IN;
	if (lower_upper_merges_routeFrom_EN)
	  lower_upper_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      lower_upper_merges_routeFrom_D_IN;
	if (merges_1_fi0HasPrio_EN)
	  merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      merges_1_fi0HasPrio_D_IN;
	if (merges_1_routeFrom_EN)
	  merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_1_routeFrom_D_IN;
	if (merges_2_fi0HasPrio_EN)
	  merges_2_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      merges_2_fi0HasPrio_D_IN;
	if (merges_2_routeFrom_EN)
	  merges_2_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_2_routeFrom_D_IN;
	if (merges_3_fi0HasPrio_EN)
	  merges_3_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      merges_3_fi0HasPrio_D_IN;
	if (merges_3_routeFrom_EN)
	  merges_3_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_3_routeFrom_D_IN;
	if (merges_4_fi0HasPrio_EN)
	  merges_4_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      merges_4_fi0HasPrio_D_IN;
	if (merges_4_routeFrom_EN)
	  merges_4_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_4_routeFrom_D_IN;
	if (merges_5_fi0HasPrio_EN)
	  merges_5_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      merges_5_fi0HasPrio_D_IN;
	if (merges_5_routeFrom_EN)
	  merges_5_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_5_routeFrom_D_IN;
	if (merges_6_fi0HasPrio_EN)
	  merges_6_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      merges_6_fi0HasPrio_D_IN;
	if (merges_6_routeFrom_EN)
	  merges_6_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_6_routeFrom_D_IN;
	if (merges_7_fi0HasPrio_EN)
	  merges_7_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      merges_7_fi0HasPrio_D_IN;
	if (merges_7_routeFrom_EN)
	  merges_7_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_7_routeFrom_D_IN;
	if (merges_fi0HasPrio_EN)
	  merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY merges_fi0HasPrio_D_IN;
	if (merges_routeFrom_EN)
	  merges_routeFrom <= `BSV_ASSIGNMENT_DELAY merges_routeFrom_D_IN;
	if (upper_lower_merges_1_fi0HasPrio_EN)
	  upper_lower_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_lower_merges_1_fi0HasPrio_D_IN;
	if (upper_lower_merges_1_routeFrom_EN)
	  upper_lower_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_lower_merges_1_routeFrom_D_IN;
	if (upper_lower_merges_fi0HasPrio_EN)
	  upper_lower_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_lower_merges_fi0HasPrio_D_IN;
	if (upper_lower_merges_routeFrom_EN)
	  upper_lower_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_lower_merges_routeFrom_D_IN;
	if (upper_merges_1_fi0HasPrio_EN)
	  upper_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_1_fi0HasPrio_D_IN;
	if (upper_merges_1_routeFrom_EN)
	  upper_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_1_routeFrom_D_IN;
	if (upper_merges_2_fi0HasPrio_EN)
	  upper_merges_2_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_2_fi0HasPrio_D_IN;
	if (upper_merges_2_routeFrom_EN)
	  upper_merges_2_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_2_routeFrom_D_IN;
	if (upper_merges_3_fi0HasPrio_EN)
	  upper_merges_3_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_3_fi0HasPrio_D_IN;
	if (upper_merges_3_routeFrom_EN)
	  upper_merges_3_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_3_routeFrom_D_IN;
	if (upper_merges_fi0HasPrio_EN)
	  upper_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_fi0HasPrio_D_IN;
	if (upper_merges_routeFrom_EN)
	  upper_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_merges_routeFrom_D_IN;
	if (upper_upper_merges_1_fi0HasPrio_EN)
	  upper_upper_merges_1_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_upper_merges_1_fi0HasPrio_D_IN;
	if (upper_upper_merges_1_routeFrom_EN)
	  upper_upper_merges_1_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_upper_merges_1_routeFrom_D_IN;
	if (upper_upper_merges_fi0HasPrio_EN)
	  upper_upper_merges_fi0HasPrio <= `BSV_ASSIGNMENT_DELAY
	      upper_upper_merges_fi0HasPrio_D_IN;
	if (upper_upper_merges_routeFrom_EN)
	  upper_upper_merges_routeFrom <= `BSV_ASSIGNMENT_DELAY
	      upper_upper_merges_routeFrom_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    lower_lower_merges_1_fi0HasPrio = 1'h0;
    lower_lower_merges_1_routeFrom = 2'h2;
    lower_lower_merges_fi0HasPrio = 1'h0;
    lower_lower_merges_routeFrom = 2'h2;
    lower_merges_1_fi0HasPrio = 1'h0;
    lower_merges_1_routeFrom = 2'h2;
    lower_merges_2_fi0HasPrio = 1'h0;
    lower_merges_2_routeFrom = 2'h2;
    lower_merges_3_fi0HasPrio = 1'h0;
    lower_merges_3_routeFrom = 2'h2;
    lower_merges_fi0HasPrio = 1'h0;
    lower_merges_routeFrom = 2'h2;
    lower_upper_merges_1_fi0HasPrio = 1'h0;
    lower_upper_merges_1_routeFrom = 2'h2;
    lower_upper_merges_fi0HasPrio = 1'h0;
    lower_upper_merges_routeFrom = 2'h2;
    merges_1_fi0HasPrio = 1'h0;
    merges_1_routeFrom = 2'h2;
    merges_2_fi0HasPrio = 1'h0;
    merges_2_routeFrom = 2'h2;
    merges_3_fi0HasPrio = 1'h0;
    merges_3_routeFrom = 2'h2;
    merges_4_fi0HasPrio = 1'h0;
    merges_4_routeFrom = 2'h2;
    merges_5_fi0HasPrio = 1'h0;
    merges_5_routeFrom = 2'h2;
    merges_6_fi0HasPrio = 1'h0;
    merges_6_routeFrom = 2'h2;
    merges_7_fi0HasPrio = 1'h0;
    merges_7_routeFrom = 2'h2;
    merges_fi0HasPrio = 1'h0;
    merges_routeFrom = 2'h2;
    upper_lower_merges_1_fi0HasPrio = 1'h0;
    upper_lower_merges_1_routeFrom = 2'h2;
    upper_lower_merges_fi0HasPrio = 1'h0;
    upper_lower_merges_routeFrom = 2'h2;
    upper_merges_1_fi0HasPrio = 1'h0;
    upper_merges_1_routeFrom = 2'h2;
    upper_merges_2_fi0HasPrio = 1'h0;
    upper_merges_2_routeFrom = 2'h2;
    upper_merges_3_fi0HasPrio = 1'h0;
    upper_merges_3_routeFrom = 2'h2;
    upper_merges_fi0HasPrio = 1'h0;
    upper_merges_routeFrom = 2'h2;
    upper_upper_merges_1_fi0HasPrio = 1'h0;
    upper_upper_merges_1_routeFrom = 2'h2;
    upper_upper_merges_fi0HasPrio = 1'h0;
    upper_upper_merges_routeFrom = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  upper_upper_merges_routeFrom[1])
	begin
	  v__h998 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  upper_upper_merges_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h998,
	       upper_upper_merges_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  upper_upper_merges_routeFrom[1])
	$write(" data=0x%x",
	       upper_upper_merges_routeFrom[0] ?
		 upper_upper_merges_fi1_D_OUT[577:66] :
		 upper_upper_merges_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_upper_merges_routeFrom[0] ?
		 upper_upper_merges_fi1_D_OUT[65:2] :
		 upper_upper_merges_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  upper_upper_merges_routeFrom[1])
	$write(" user=0x%x",
	       upper_upper_merges_routeFrom[0] ?
		 upper_upper_merges_fi1_D_OUT[609:578] :
		 upper_upper_merges_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  upper_upper_merges_routeFrom[1])
	$write(" sop=%d",
	       upper_upper_merges_routeFrom[0] ?
		 upper_upper_merges_fi1_D_OUT[1] :
		 upper_upper_merges_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  upper_upper_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_upper_merges_routeFrom_4_BIT_0_6_THEN_ETC___d47);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  upper_upper_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  !upper_upper_merges_routeFrom[1])
	begin
	  v__h1065 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  !upper_upper_merges_routeFrom[1])
	$write("(%0d) both avail ", v__h1065);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  !upper_upper_merges_routeFrom[1])
	$write(" data=0x%x",
	       upper_upper_merges_fi0HasPrio ?
		 upper_upper_merges_fi0_D_OUT[577:66] :
		 upper_upper_merges_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_upper_merges_fi0HasPrio ?
		 upper_upper_merges_fi0_D_OUT[65:2] :
		 upper_upper_merges_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  !upper_upper_merges_routeFrom[1])
	$write(" user=0x%x",
	       upper_upper_merges_fi0HasPrio ?
		 upper_upper_merges_fi0_D_OUT[609:578] :
		 upper_upper_merges_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  !upper_upper_merges_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d40);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  !upper_upper_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_upper_merges_fi0HasPrio_9_THEN_upper__ETC___d57);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_both_have_data &&
	  !upper_upper_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  upper_upper_merges_1_routeFrom[1])
	begin
	  v__h2045 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  upper_upper_merges_1_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h2045,
	       upper_upper_merges_1_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  upper_upper_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       upper_upper_merges_1_routeFrom[0] ?
		 upper_upper_merges_1_fi1_D_OUT[577:66] :
		 upper_upper_merges_1_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_upper_merges_1_routeFrom[0] ?
		 upper_upper_merges_1_fi1_D_OUT[65:2] :
		 upper_upper_merges_1_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  upper_upper_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       upper_upper_merges_1_routeFrom[0] ?
		 upper_upper_merges_1_fi1_D_OUT[609:578] :
		 upper_upper_merges_1_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  upper_upper_merges_1_routeFrom[1])
	$write(" sop=%d",
	       upper_upper_merges_1_routeFrom[0] ?
		 upper_upper_merges_1_fi1_D_OUT[1] :
		 upper_upper_merges_1_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  upper_upper_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_upper_merges_1_routeFrom_9_BIT_0_1_TH_ETC___d122);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  upper_upper_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  !upper_upper_merges_1_routeFrom[1])
	begin
	  v__h2111 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  !upper_upper_merges_1_routeFrom[1])
	$write("(%0d) both avail ", v__h2111);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  !upper_upper_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       upper_upper_merges_1_fi0HasPrio ?
		 upper_upper_merges_1_fi0_D_OUT[577:66] :
		 upper_upper_merges_1_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_upper_merges_1_fi0HasPrio ?
		 upper_upper_merges_1_fi0_D_OUT[65:2] :
		 upper_upper_merges_1_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  !upper_upper_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       upper_upper_merges_1_fi0HasPrio ?
		 upper_upper_merges_1_fi0_D_OUT[609:578] :
		 upper_upper_merges_1_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  !upper_upper_merges_1_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d115);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  !upper_upper_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_upper_merges_1_fi0HasPrio_4_THEN_uppe_ETC___d132);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_merges_1_both_have_data &&
	  !upper_upper_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route)
	$display("%x %x %d",
		 upper_upper_upper_f_D_OUT[609:578],
		 32'd0,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route && upper_upper_upper_f_D_OUT[578])
	begin
	  v__h2753 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route && upper_upper_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h2753,
		 $signed(32'd1),
		 upper_upper_upper_f_D_OUT[578],
		 upper_upper_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route && !upper_upper_upper_f_D_OUT[578])
	begin
	  v__h2694 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route && !upper_upper_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h2694,
		 $signed(32'd0),
		 upper_upper_upper_f_D_OUT[578],
		 upper_upper_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route_1)
	$display("%x %x %d",
		 upper_upper_lower_f_D_OUT[609:578],
		 32'd1,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route_1 && upper_upper_lower_f_D_OUT[578])
	begin
	  v__h3110 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route_1 && upper_upper_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h3110,
		 $signed(32'd1),
		 !upper_upper_lower_f_D_OUT[578],
		 upper_upper_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route_1 && !upper_upper_lower_f_D_OUT[578])
	begin
	  v__h3163 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_upper_route_1 && !upper_upper_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h3163,
		 $signed(32'd0),
		 !upper_upper_lower_f_D_OUT[578],
		 upper_upper_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  upper_lower_merges_routeFrom[1])
	begin
	  v__h4205 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  upper_lower_merges_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h4205,
	       upper_lower_merges_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  upper_lower_merges_routeFrom[1])
	$write(" data=0x%x",
	       upper_lower_merges_routeFrom[0] ?
		 upper_lower_merges_fi1_D_OUT[577:66] :
		 upper_lower_merges_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_lower_merges_routeFrom[0] ?
		 upper_lower_merges_fi1_D_OUT[65:2] :
		 upper_lower_merges_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  upper_lower_merges_routeFrom[1])
	$write(" user=0x%x",
	       upper_lower_merges_routeFrom[0] ?
		 upper_lower_merges_fi1_D_OUT[609:578] :
		 upper_lower_merges_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  upper_lower_merges_routeFrom[1])
	$write(" sop=%d",
	       upper_lower_merges_routeFrom[0] ?
		 upper_lower_merges_fi1_D_OUT[1] :
		 upper_lower_merges_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  upper_lower_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_lower_merges_routeFrom_88_BIT_0_90_TH_ETC___d221);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  upper_lower_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  !upper_lower_merges_routeFrom[1])
	begin
	  v__h4271 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  !upper_lower_merges_routeFrom[1])
	$write("(%0d) both avail ", v__h4271);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  !upper_lower_merges_routeFrom[1])
	$write(" data=0x%x",
	       upper_lower_merges_fi0HasPrio ?
		 upper_lower_merges_fi0_D_OUT[577:66] :
		 upper_lower_merges_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_lower_merges_fi0HasPrio ?
		 upper_lower_merges_fi0_D_OUT[65:2] :
		 upper_lower_merges_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  !upper_lower_merges_routeFrom[1])
	$write(" user=0x%x",
	       upper_lower_merges_fi0HasPrio ?
		 upper_lower_merges_fi0_D_OUT[609:578] :
		 upper_lower_merges_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  !upper_lower_merges_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d214);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  !upper_lower_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_lower_merges_fi0HasPrio_93_THEN_upper_ETC___d231);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_both_have_data &&
	  !upper_lower_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  upper_lower_merges_1_routeFrom[1])
	begin
	  v__h5251 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  upper_lower_merges_1_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h5251,
	       upper_lower_merges_1_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  upper_lower_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       upper_lower_merges_1_routeFrom[0] ?
		 upper_lower_merges_1_fi1_D_OUT[577:66] :
		 upper_lower_merges_1_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_lower_merges_1_routeFrom[0] ?
		 upper_lower_merges_1_fi1_D_OUT[65:2] :
		 upper_lower_merges_1_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  upper_lower_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       upper_lower_merges_1_routeFrom[0] ?
		 upper_lower_merges_1_fi1_D_OUT[609:578] :
		 upper_lower_merges_1_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  upper_lower_merges_1_routeFrom[1])
	$write(" sop=%d",
	       upper_lower_merges_1_routeFrom[0] ?
		 upper_lower_merges_1_fi1_D_OUT[1] :
		 upper_lower_merges_1_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  upper_lower_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_lower_merges_1_routeFrom_63_BIT_0_65__ETC___d296);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  upper_lower_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  !upper_lower_merges_1_routeFrom[1])
	begin
	  v__h5317 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  !upper_lower_merges_1_routeFrom[1])
	$write("(%0d) both avail ", v__h5317);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  !upper_lower_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       upper_lower_merges_1_fi0HasPrio ?
		 upper_lower_merges_1_fi0_D_OUT[577:66] :
		 upper_lower_merges_1_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_lower_merges_1_fi0HasPrio ?
		 upper_lower_merges_1_fi0_D_OUT[65:2] :
		 upper_lower_merges_1_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  !upper_lower_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       upper_lower_merges_1_fi0HasPrio ?
		 upper_lower_merges_1_fi0_D_OUT[609:578] :
		 upper_lower_merges_1_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  !upper_lower_merges_1_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d289);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  !upper_lower_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_lower_merges_1_fi0HasPrio_68_THEN_upp_ETC___d306);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_merges_1_both_have_data &&
	  !upper_lower_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route)
	$display("%x %x %d",
		 upper_lower_upper_f_D_OUT[609:578],
		 32'd0,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route && upper_lower_upper_f_D_OUT[578])
	begin
	  v__h5959 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route && upper_lower_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h5959,
		 $signed(32'd1),
		 upper_lower_upper_f_D_OUT[578],
		 upper_lower_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route && !upper_lower_upper_f_D_OUT[578])
	begin
	  v__h5900 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route && !upper_lower_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h5900,
		 $signed(32'd0),
		 upper_lower_upper_f_D_OUT[578],
		 upper_lower_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route_1)
	$display("%x %x %d",
		 upper_lower_lower_f_D_OUT[609:578],
		 32'd1,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route_1 && upper_lower_lower_f_D_OUT[578])
	begin
	  v__h6316 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route_1 && upper_lower_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h6316,
		 $signed(32'd1),
		 !upper_lower_lower_f_D_OUT[578],
		 upper_lower_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route_1 && !upper_lower_lower_f_D_OUT[578])
	begin
	  v__h6369 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_lower_route_1 && !upper_lower_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h6369,
		 $signed(32'd0),
		 !upper_lower_lower_f_D_OUT[578],
		 upper_lower_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  upper_merges_routeFrom[1])
	begin
	  v__h7173 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  upper_merges_routeFrom[1])
	$write("(%0d) both avail %d ", v__h7173, upper_merges_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  upper_merges_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_routeFrom[0] ?
		 upper_merges_fi1_D_OUT[577:66] :
		 upper_merges_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_routeFrom[0] ?
		 upper_merges_fi1_D_OUT[65:2] :
		 upper_merges_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  upper_merges_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_routeFrom[0] ?
		 upper_merges_fi1_D_OUT[609:578] :
		 upper_merges_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  upper_merges_routeFrom[1])
	$write(" sop=%d",
	       upper_merges_routeFrom[0] ?
		 upper_merges_fi1_D_OUT[1] :
		 upper_merges_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  upper_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_routeFrom_60_BIT_0_62_THEN_upp_ETC___d393);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  upper_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  !upper_merges_routeFrom[1])
	begin
	  v__h7239 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  !upper_merges_routeFrom[1])
	$write("(%0d) both avail ", v__h7239);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  !upper_merges_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_fi0HasPrio ?
		 upper_merges_fi0_D_OUT[577:66] :
		 upper_merges_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_fi0HasPrio ?
		 upper_merges_fi0_D_OUT[65:2] :
		 upper_merges_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  !upper_merges_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_fi0HasPrio ?
		 upper_merges_fi0_D_OUT[609:578] :
		 upper_merges_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  !upper_merges_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d386);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  !upper_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_fi0HasPrio_65_THEN_upper_merge_ETC___d403);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_both_have_data &&
	  !upper_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  upper_merges_1_routeFrom[1])
	begin
	  v__h8219 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  upper_merges_1_routeFrom[1])
	$write("(%0d) both avail %d ", v__h8219, upper_merges_1_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  upper_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_1_routeFrom[0] ?
		 upper_merges_1_fi1_D_OUT[577:66] :
		 upper_merges_1_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_1_routeFrom[0] ?
		 upper_merges_1_fi1_D_OUT[65:2] :
		 upper_merges_1_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  upper_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_1_routeFrom[0] ?
		 upper_merges_1_fi1_D_OUT[609:578] :
		 upper_merges_1_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  upper_merges_1_routeFrom[1])
	$write(" sop=%d",
	       upper_merges_1_routeFrom[0] ?
		 upper_merges_1_fi1_D_OUT[1] :
		 upper_merges_1_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  upper_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_1_routeFrom_35_BIT_0_37_THEN_u_ETC___d468);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  upper_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  !upper_merges_1_routeFrom[1])
	begin
	  v__h8285 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  !upper_merges_1_routeFrom[1])
	$write("(%0d) both avail ", v__h8285);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  !upper_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_1_fi0HasPrio ?
		 upper_merges_1_fi0_D_OUT[577:66] :
		 upper_merges_1_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_1_fi0HasPrio ?
		 upper_merges_1_fi0_D_OUT[65:2] :
		 upper_merges_1_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  !upper_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_1_fi0HasPrio ?
		 upper_merges_1_fi0_D_OUT[609:578] :
		 upper_merges_1_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  !upper_merges_1_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d461);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  !upper_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_1_fi0HasPrio_40_THEN_upper_mer_ETC___d478);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_1_both_have_data &&
	  !upper_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  upper_merges_2_routeFrom[1])
	begin
	  v__h9265 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  upper_merges_2_routeFrom[1])
	$write("(%0d) both avail %d ", v__h9265, upper_merges_2_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  upper_merges_2_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_2_routeFrom[0] ?
		 upper_merges_2_fi1_D_OUT[577:66] :
		 upper_merges_2_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_2_routeFrom[0] ?
		 upper_merges_2_fi1_D_OUT[65:2] :
		 upper_merges_2_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  upper_merges_2_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_2_routeFrom[0] ?
		 upper_merges_2_fi1_D_OUT[609:578] :
		 upper_merges_2_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  upper_merges_2_routeFrom[1])
	$write(" sop=%d",
	       upper_merges_2_routeFrom[0] ?
		 upper_merges_2_fi1_D_OUT[1] :
		 upper_merges_2_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  upper_merges_2_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_2_routeFrom_10_BIT_0_12_THEN_u_ETC___d543);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  upper_merges_2_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  !upper_merges_2_routeFrom[1])
	begin
	  v__h9331 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  !upper_merges_2_routeFrom[1])
	$write("(%0d) both avail ", v__h9331);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  !upper_merges_2_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_2_fi0HasPrio ?
		 upper_merges_2_fi0_D_OUT[577:66] :
		 upper_merges_2_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_2_fi0HasPrio ?
		 upper_merges_2_fi0_D_OUT[65:2] :
		 upper_merges_2_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  !upper_merges_2_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_2_fi0HasPrio ?
		 upper_merges_2_fi0_D_OUT[609:578] :
		 upper_merges_2_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  !upper_merges_2_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d536);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  !upper_merges_2_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_2_fi0HasPrio_15_THEN_upper_mer_ETC___d553);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_2_both_have_data &&
	  !upper_merges_2_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route)
	$display("%x %x %d",
		 upper_upper_merges_fo_D_OUT[609:578],
		 32'd0,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route && upper_upper_merges_fo_D_OUT[579])
	begin
	  v__h11050 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route && upper_upper_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h11050,
		 $signed(32'd2),
		 upper_upper_merges_fo_D_OUT[579],
		 upper_upper_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route && !upper_upper_merges_fo_D_OUT[579])
	begin
	  v__h10991 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route && !upper_upper_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h10991,
		 $signed(32'd0),
		 upper_upper_merges_fo_D_OUT[579],
		 upper_upper_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_2)
	$display("%x %x %d",
		 upper_lower_merges_fo_D_OUT[609:578],
		 32'd2,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_2 && upper_lower_merges_fo_D_OUT[579])
	begin
	  v__h11872 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_2 && upper_lower_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h11872,
		 $signed(32'd2),
		 !upper_lower_merges_fo_D_OUT[579],
		 upper_lower_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_2 && !upper_lower_merges_fo_D_OUT[579])
	begin
	  v__h11925 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_2 && !upper_lower_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h11925,
		 $signed(32'd0),
		 !upper_lower_merges_fo_D_OUT[579],
		 upper_lower_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  upper_merges_3_routeFrom[1])
	begin
	  v__h10311 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  upper_merges_3_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h10311,
	       upper_merges_3_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  upper_merges_3_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_3_routeFrom[0] ?
		 upper_merges_3_fi1_D_OUT[577:66] :
		 upper_merges_3_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_3_routeFrom[0] ?
		 upper_merges_3_fi1_D_OUT[65:2] :
		 upper_merges_3_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  upper_merges_3_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_3_routeFrom[0] ?
		 upper_merges_3_fi1_D_OUT[609:578] :
		 upper_merges_3_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  upper_merges_3_routeFrom[1])
	$write(" sop=%d",
	       upper_merges_3_routeFrom[0] ?
		 upper_merges_3_fi1_D_OUT[1] :
		 upper_merges_3_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  upper_merges_3_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_3_routeFrom_85_BIT_0_87_THEN_u_ETC___d618);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  upper_merges_3_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  !upper_merges_3_routeFrom[1])
	begin
	  v__h10377 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  !upper_merges_3_routeFrom[1])
	$write("(%0d) both avail ", v__h10377);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  !upper_merges_3_routeFrom[1])
	$write(" data=0x%x",
	       upper_merges_3_fi0HasPrio ?
		 upper_merges_3_fi0_D_OUT[577:66] :
		 upper_merges_3_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       upper_merges_3_fi0HasPrio ?
		 upper_merges_3_fi0_D_OUT[65:2] :
		 upper_merges_3_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  !upper_merges_3_routeFrom[1])
	$write(" user=0x%x",
	       upper_merges_3_fi0HasPrio ?
		 upper_merges_3_fi0_D_OUT[609:578] :
		 upper_merges_3_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  !upper_merges_3_routeFrom[1])
	$write(" sop=%d",
	       IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d611);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  !upper_merges_3_routeFrom[1])
	$write(" eop=%d",
	       IF_upper_merges_3_fi0HasPrio_90_THEN_upper_mer_ETC___d628);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_merges_3_both_have_data &&
	  !upper_merges_3_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_1)
	$display("%x %x %d",
		 upper_upper_merges_1_fo_D_OUT[609:578],
		 32'd1,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_1 && upper_upper_merges_1_fo_D_OUT[579])
	begin
	  v__h11478 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_1 && upper_upper_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h11478,
		 $signed(32'd3),
		 upper_upper_merges_1_fo_D_OUT[579],
		 upper_upper_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_1 && !upper_upper_merges_1_fo_D_OUT[579])
	begin
	  v__h11424 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_1 && !upper_upper_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h11424,
		 $signed(32'd1),
		 upper_upper_merges_1_fo_D_OUT[579],
		 upper_upper_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_3)
	$display("%x %x %d",
		 upper_lower_merges_1_fo_D_OUT[609:578],
		 32'd3,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_3 && upper_lower_merges_1_fo_D_OUT[579])
	begin
	  v__h12298 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_3 && upper_lower_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h12298,
		 $signed(32'd3),
		 !upper_lower_merges_1_fo_D_OUT[579],
		 upper_lower_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_3 && !upper_lower_merges_1_fo_D_OUT[579])
	begin
	  v__h12351 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_upper_route_3 && !upper_lower_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h12351,
		 $signed(32'd1),
		 !upper_lower_merges_1_fo_D_OUT[579],
		 upper_lower_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  lower_upper_merges_routeFrom[1])
	begin
	  v__h13418 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  lower_upper_merges_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h13418,
	       lower_upper_merges_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  lower_upper_merges_routeFrom[1])
	$write(" data=0x%x",
	       lower_upper_merges_routeFrom[0] ?
		 lower_upper_merges_fi1_D_OUT[577:66] :
		 lower_upper_merges_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_upper_merges_routeFrom[0] ?
		 lower_upper_merges_fi1_D_OUT[65:2] :
		 lower_upper_merges_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  lower_upper_merges_routeFrom[1])
	$write(" user=0x%x",
	       lower_upper_merges_routeFrom[0] ?
		 lower_upper_merges_fi1_D_OUT[609:578] :
		 lower_upper_merges_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  lower_upper_merges_routeFrom[1])
	$write(" sop=%d",
	       lower_upper_merges_routeFrom[0] ?
		 lower_upper_merges_fi1_D_OUT[1] :
		 lower_upper_merges_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  lower_upper_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_upper_merges_routeFrom_06_BIT_0_08_TH_ETC___d739);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  lower_upper_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  !lower_upper_merges_routeFrom[1])
	begin
	  v__h13484 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  !lower_upper_merges_routeFrom[1])
	$write("(%0d) both avail ", v__h13484);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  !lower_upper_merges_routeFrom[1])
	$write(" data=0x%x",
	       lower_upper_merges_fi0HasPrio ?
		 lower_upper_merges_fi0_D_OUT[577:66] :
		 lower_upper_merges_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_upper_merges_fi0HasPrio ?
		 lower_upper_merges_fi0_D_OUT[65:2] :
		 lower_upper_merges_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  !lower_upper_merges_routeFrom[1])
	$write(" user=0x%x",
	       lower_upper_merges_fi0HasPrio ?
		 lower_upper_merges_fi0_D_OUT[609:578] :
		 lower_upper_merges_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  !lower_upper_merges_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d732);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  !lower_upper_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_upper_merges_fi0HasPrio_11_THEN_lower_ETC___d749);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_both_have_data &&
	  !lower_upper_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  lower_upper_merges_1_routeFrom[1])
	begin
	  v__h14464 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  lower_upper_merges_1_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h14464,
	       lower_upper_merges_1_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  lower_upper_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       lower_upper_merges_1_routeFrom[0] ?
		 lower_upper_merges_1_fi1_D_OUT[577:66] :
		 lower_upper_merges_1_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_upper_merges_1_routeFrom[0] ?
		 lower_upper_merges_1_fi1_D_OUT[65:2] :
		 lower_upper_merges_1_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  lower_upper_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       lower_upper_merges_1_routeFrom[0] ?
		 lower_upper_merges_1_fi1_D_OUT[609:578] :
		 lower_upper_merges_1_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  lower_upper_merges_1_routeFrom[1])
	$write(" sop=%d",
	       lower_upper_merges_1_routeFrom[0] ?
		 lower_upper_merges_1_fi1_D_OUT[1] :
		 lower_upper_merges_1_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  lower_upper_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_upper_merges_1_routeFrom_81_BIT_0_83__ETC___d814);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  lower_upper_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  !lower_upper_merges_1_routeFrom[1])
	begin
	  v__h14530 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  !lower_upper_merges_1_routeFrom[1])
	$write("(%0d) both avail ", v__h14530);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  !lower_upper_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       lower_upper_merges_1_fi0HasPrio ?
		 lower_upper_merges_1_fi0_D_OUT[577:66] :
		 lower_upper_merges_1_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_upper_merges_1_fi0HasPrio ?
		 lower_upper_merges_1_fi0_D_OUT[65:2] :
		 lower_upper_merges_1_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  !lower_upper_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       lower_upper_merges_1_fi0HasPrio ?
		 lower_upper_merges_1_fi0_D_OUT[609:578] :
		 lower_upper_merges_1_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  !lower_upper_merges_1_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d807);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  !lower_upper_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_upper_merges_1_fi0HasPrio_86_THEN_low_ETC___d824);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_merges_1_both_have_data &&
	  !lower_upper_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route)
	$display("%x %x %d",
		 lower_upper_upper_f_D_OUT[609:578],
		 32'd0,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route && lower_upper_upper_f_D_OUT[578])
	begin
	  v__h15172 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route && lower_upper_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h15172,
		 $signed(32'd1),
		 lower_upper_upper_f_D_OUT[578],
		 lower_upper_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route && !lower_upper_upper_f_D_OUT[578])
	begin
	  v__h15113 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route && !lower_upper_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h15113,
		 $signed(32'd0),
		 lower_upper_upper_f_D_OUT[578],
		 lower_upper_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route_1)
	$display("%x %x %d",
		 lower_upper_lower_f_D_OUT[609:578],
		 32'd1,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route_1 && lower_upper_lower_f_D_OUT[578])
	begin
	  v__h15529 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route_1 && lower_upper_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h15529,
		 $signed(32'd1),
		 !lower_upper_lower_f_D_OUT[578],
		 lower_upper_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route_1 && !lower_upper_lower_f_D_OUT[578])
	begin
	  v__h15582 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_upper_route_1 && !lower_upper_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h15582,
		 $signed(32'd0),
		 !lower_upper_lower_f_D_OUT[578],
		 lower_upper_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  lower_lower_merges_routeFrom[1])
	begin
	  v__h16624 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  lower_lower_merges_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h16624,
	       lower_lower_merges_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  lower_lower_merges_routeFrom[1])
	$write(" data=0x%x",
	       lower_lower_merges_routeFrom[0] ?
		 lower_lower_merges_fi1_D_OUT[577:66] :
		 lower_lower_merges_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_lower_merges_routeFrom[0] ?
		 lower_lower_merges_fi1_D_OUT[65:2] :
		 lower_lower_merges_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  lower_lower_merges_routeFrom[1])
	$write(" user=0x%x",
	       lower_lower_merges_routeFrom[0] ?
		 lower_lower_merges_fi1_D_OUT[609:578] :
		 lower_lower_merges_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  lower_lower_merges_routeFrom[1])
	$write(" sop=%d",
	       lower_lower_merges_routeFrom[0] ?
		 lower_lower_merges_fi1_D_OUT[1] :
		 lower_lower_merges_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  lower_lower_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_lower_merges_routeFrom_78_BIT_0_80_TH_ETC___d911);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  lower_lower_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  !lower_lower_merges_routeFrom[1])
	begin
	  v__h16690 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  !lower_lower_merges_routeFrom[1])
	$write("(%0d) both avail ", v__h16690);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  !lower_lower_merges_routeFrom[1])
	$write(" data=0x%x",
	       lower_lower_merges_fi0HasPrio ?
		 lower_lower_merges_fi0_D_OUT[577:66] :
		 lower_lower_merges_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_lower_merges_fi0HasPrio ?
		 lower_lower_merges_fi0_D_OUT[65:2] :
		 lower_lower_merges_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  !lower_lower_merges_routeFrom[1])
	$write(" user=0x%x",
	       lower_lower_merges_fi0HasPrio ?
		 lower_lower_merges_fi0_D_OUT[609:578] :
		 lower_lower_merges_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  !lower_lower_merges_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d904);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  !lower_lower_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_lower_merges_fi0HasPrio_83_THEN_lower_ETC___d921);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_both_have_data &&
	  !lower_lower_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  lower_lower_merges_1_routeFrom[1])
	begin
	  v__h17670 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  lower_lower_merges_1_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h17670,
	       lower_lower_merges_1_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  lower_lower_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       lower_lower_merges_1_routeFrom[0] ?
		 lower_lower_merges_1_fi1_D_OUT[577:66] :
		 lower_lower_merges_1_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_lower_merges_1_routeFrom[0] ?
		 lower_lower_merges_1_fi1_D_OUT[65:2] :
		 lower_lower_merges_1_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  lower_lower_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       lower_lower_merges_1_routeFrom[0] ?
		 lower_lower_merges_1_fi1_D_OUT[609:578] :
		 lower_lower_merges_1_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  lower_lower_merges_1_routeFrom[1])
	$write(" sop=%d",
	       lower_lower_merges_1_routeFrom[0] ?
		 lower_lower_merges_1_fi1_D_OUT[1] :
		 lower_lower_merges_1_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  lower_lower_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_lower_merges_1_routeFrom_53_BIT_0_55__ETC___d986);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  lower_lower_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  !lower_lower_merges_1_routeFrom[1])
	begin
	  v__h17736 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  !lower_lower_merges_1_routeFrom[1])
	$write("(%0d) both avail ", v__h17736);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  !lower_lower_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       lower_lower_merges_1_fi0HasPrio ?
		 lower_lower_merges_1_fi0_D_OUT[577:66] :
		 lower_lower_merges_1_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_lower_merges_1_fi0HasPrio ?
		 lower_lower_merges_1_fi0_D_OUT[65:2] :
		 lower_lower_merges_1_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  !lower_lower_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       lower_lower_merges_1_fi0HasPrio ?
		 lower_lower_merges_1_fi0_D_OUT[609:578] :
		 lower_lower_merges_1_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  !lower_lower_merges_1_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d979);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  !lower_lower_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_lower_merges_1_fi0HasPrio_58_THEN_low_ETC___d996);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_merges_1_both_have_data &&
	  !lower_lower_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route)
	$display("%x %x %d",
		 lower_lower_upper_f_D_OUT[609:578],
		 32'd0,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route && lower_lower_upper_f_D_OUT[578])
	begin
	  v__h18378 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route && lower_lower_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h18378,
		 $signed(32'd1),
		 lower_lower_upper_f_D_OUT[578],
		 lower_lower_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route && !lower_lower_upper_f_D_OUT[578])
	begin
	  v__h18319 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route && !lower_lower_upper_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h18319,
		 $signed(32'd0),
		 lower_lower_upper_f_D_OUT[578],
		 lower_lower_upper_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route_1)
	$display("%x %x %d",
		 lower_lower_lower_f_D_OUT[609:578],
		 32'd1,
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route_1 && lower_lower_lower_f_D_OUT[578])
	begin
	  v__h18735 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route_1 && lower_lower_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h18735,
		 $signed(32'd1),
		 !lower_lower_lower_f_D_OUT[578],
		 lower_lower_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route_1 && !lower_lower_lower_f_D_OUT[578])
	begin
	  v__h18788 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_lower_route_1 && !lower_lower_lower_f_D_OUT[578])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h18788,
		 $signed(32'd0),
		 !lower_lower_lower_f_D_OUT[578],
		 lower_lower_lower_f_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  lower_merges_routeFrom[1])
	begin
	  v__h19592 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  lower_merges_routeFrom[1])
	$write("(%0d) both avail %d ", v__h19592, lower_merges_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  lower_merges_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_routeFrom[0] ?
		 lower_merges_fi1_D_OUT[577:66] :
		 lower_merges_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_routeFrom[0] ?
		 lower_merges_fi1_D_OUT[65:2] :
		 lower_merges_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  lower_merges_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_routeFrom[0] ?
		 lower_merges_fi1_D_OUT[609:578] :
		 lower_merges_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  lower_merges_routeFrom[1])
	$write(" sop=%d",
	       lower_merges_routeFrom[0] ?
		 lower_merges_fi1_D_OUT[1] :
		 lower_merges_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  lower_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_routeFrom_050_BIT_0_052_THEN_l_ETC___d1083);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  lower_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  !lower_merges_routeFrom[1])
	begin
	  v__h19658 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  !lower_merges_routeFrom[1])
	$write("(%0d) both avail ", v__h19658);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  !lower_merges_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_fi0HasPrio ?
		 lower_merges_fi0_D_OUT[577:66] :
		 lower_merges_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_fi0HasPrio ?
		 lower_merges_fi0_D_OUT[65:2] :
		 lower_merges_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  !lower_merges_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_fi0HasPrio ?
		 lower_merges_fi0_D_OUT[609:578] :
		 lower_merges_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  !lower_merges_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1076);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  !lower_merges_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_fi0HasPrio_055_THEN_lower_merg_ETC___d1093);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_both_have_data &&
	  !lower_merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  lower_merges_1_routeFrom[1])
	begin
	  v__h20638 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  lower_merges_1_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h20638,
	       lower_merges_1_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  lower_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_1_routeFrom[0] ?
		 lower_merges_1_fi1_D_OUT[577:66] :
		 lower_merges_1_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_1_routeFrom[0] ?
		 lower_merges_1_fi1_D_OUT[65:2] :
		 lower_merges_1_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  lower_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_1_routeFrom[0] ?
		 lower_merges_1_fi1_D_OUT[609:578] :
		 lower_merges_1_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  lower_merges_1_routeFrom[1])
	$write(" sop=%d",
	       lower_merges_1_routeFrom[0] ?
		 lower_merges_1_fi1_D_OUT[1] :
		 lower_merges_1_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  lower_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_1_routeFrom_125_BIT_0_127_THEN_ETC___d1158);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  lower_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  !lower_merges_1_routeFrom[1])
	begin
	  v__h20704 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  !lower_merges_1_routeFrom[1])
	$write("(%0d) both avail ", v__h20704);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  !lower_merges_1_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_1_fi0HasPrio ?
		 lower_merges_1_fi0_D_OUT[577:66] :
		 lower_merges_1_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_1_fi0HasPrio ?
		 lower_merges_1_fi0_D_OUT[65:2] :
		 lower_merges_1_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  !lower_merges_1_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_1_fi0HasPrio ?
		 lower_merges_1_fi0_D_OUT[609:578] :
		 lower_merges_1_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  !lower_merges_1_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1151);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  !lower_merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_1_fi0HasPrio_130_THEN_lower_me_ETC___d1168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_1_both_have_data &&
	  !lower_merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  lower_merges_2_routeFrom[1])
	begin
	  v__h21684 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  lower_merges_2_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h21684,
	       lower_merges_2_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  lower_merges_2_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_2_routeFrom[0] ?
		 lower_merges_2_fi1_D_OUT[577:66] :
		 lower_merges_2_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_2_routeFrom[0] ?
		 lower_merges_2_fi1_D_OUT[65:2] :
		 lower_merges_2_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  lower_merges_2_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_2_routeFrom[0] ?
		 lower_merges_2_fi1_D_OUT[609:578] :
		 lower_merges_2_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  lower_merges_2_routeFrom[1])
	$write(" sop=%d",
	       lower_merges_2_routeFrom[0] ?
		 lower_merges_2_fi1_D_OUT[1] :
		 lower_merges_2_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  lower_merges_2_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_2_routeFrom_200_BIT_0_202_THEN_ETC___d1233);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  lower_merges_2_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  !lower_merges_2_routeFrom[1])
	begin
	  v__h21750 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  !lower_merges_2_routeFrom[1])
	$write("(%0d) both avail ", v__h21750);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  !lower_merges_2_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_2_fi0HasPrio ?
		 lower_merges_2_fi0_D_OUT[577:66] :
		 lower_merges_2_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_2_fi0HasPrio ?
		 lower_merges_2_fi0_D_OUT[65:2] :
		 lower_merges_2_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  !lower_merges_2_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_2_fi0HasPrio ?
		 lower_merges_2_fi0_D_OUT[609:578] :
		 lower_merges_2_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  !lower_merges_2_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1226);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  !lower_merges_2_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_2_fi0HasPrio_205_THEN_lower_me_ETC___d1243);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_2_both_have_data &&
	  !lower_merges_2_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route)
	$display("%x %x %d",
		 lower_upper_merges_fo_D_OUT[609:578],
		 32'd0,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route && lower_upper_merges_fo_D_OUT[579])
	begin
	  v__h23469 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route && lower_upper_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h23469,
		 $signed(32'd2),
		 lower_upper_merges_fo_D_OUT[579],
		 lower_upper_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route && !lower_upper_merges_fo_D_OUT[579])
	begin
	  v__h23410 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route && !lower_upper_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h23410,
		 $signed(32'd0),
		 lower_upper_merges_fo_D_OUT[579],
		 lower_upper_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_2)
	$display("%x %x %d",
		 lower_lower_merges_fo_D_OUT[609:578],
		 32'd2,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_2 && lower_lower_merges_fo_D_OUT[579])
	begin
	  v__h24291 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_2 && lower_lower_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h24291,
		 $signed(32'd2),
		 !lower_lower_merges_fo_D_OUT[579],
		 lower_lower_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_2 && !lower_lower_merges_fo_D_OUT[579])
	begin
	  v__h24344 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_2 && !lower_lower_merges_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h24344,
		 $signed(32'd0),
		 !lower_lower_merges_fo_D_OUT[579],
		 lower_lower_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  lower_merges_3_routeFrom[1])
	begin
	  v__h22730 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  lower_merges_3_routeFrom[1])
	$write("(%0d) both avail %d ",
	       v__h22730,
	       lower_merges_3_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  lower_merges_3_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_3_routeFrom[0] ?
		 lower_merges_3_fi1_D_OUT[577:66] :
		 lower_merges_3_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_3_routeFrom[0] ?
		 lower_merges_3_fi1_D_OUT[65:2] :
		 lower_merges_3_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  lower_merges_3_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_3_routeFrom[0] ?
		 lower_merges_3_fi1_D_OUT[609:578] :
		 lower_merges_3_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  lower_merges_3_routeFrom[1])
	$write(" sop=%d",
	       lower_merges_3_routeFrom[0] ?
		 lower_merges_3_fi1_D_OUT[1] :
		 lower_merges_3_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  lower_merges_3_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_3_routeFrom_275_BIT_0_277_THEN_ETC___d1308);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  lower_merges_3_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  !lower_merges_3_routeFrom[1])
	begin
	  v__h22796 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  !lower_merges_3_routeFrom[1])
	$write("(%0d) both avail ", v__h22796);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  !lower_merges_3_routeFrom[1])
	$write(" data=0x%x",
	       lower_merges_3_fi0HasPrio ?
		 lower_merges_3_fi0_D_OUT[577:66] :
		 lower_merges_3_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       lower_merges_3_fi0HasPrio ?
		 lower_merges_3_fi0_D_OUT[65:2] :
		 lower_merges_3_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  !lower_merges_3_routeFrom[1])
	$write(" user=0x%x",
	       lower_merges_3_fi0HasPrio ?
		 lower_merges_3_fi0_D_OUT[609:578] :
		 lower_merges_3_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  !lower_merges_3_routeFrom[1])
	$write(" sop=%d",
	       IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1301);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  !lower_merges_3_routeFrom[1])
	$write(" eop=%d",
	       IF_lower_merges_3_fi0HasPrio_280_THEN_lower_me_ETC___d1318);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_merges_3_both_have_data &&
	  !lower_merges_3_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_1)
	$display("%x %x %d",
		 lower_upper_merges_1_fo_D_OUT[609:578],
		 32'd1,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_1 && lower_upper_merges_1_fo_D_OUT[579])
	begin
	  v__h23897 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_1 && lower_upper_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h23897,
		 $signed(32'd3),
		 lower_upper_merges_1_fo_D_OUT[579],
		 lower_upper_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_1 && !lower_upper_merges_1_fo_D_OUT[579])
	begin
	  v__h23843 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_1 && !lower_upper_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h23843,
		 $signed(32'd1),
		 lower_upper_merges_1_fo_D_OUT[579],
		 lower_upper_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_3)
	$display("%x %x %d",
		 lower_lower_merges_1_fo_D_OUT[609:578],
		 32'd3,
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_3 && lower_lower_merges_1_fo_D_OUT[579])
	begin
	  v__h24717 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_3 && lower_lower_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h24717,
		 $signed(32'd3),
		 !lower_lower_merges_1_fo_D_OUT[579],
		 lower_lower_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_3 && !lower_lower_merges_1_fo_D_OUT[579])
	begin
	  v__h24770 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_lower_route_3 && !lower_lower_merges_1_fo_D_OUT[579])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h24770,
		 $signed(32'd1),
		 !lower_lower_merges_1_fo_D_OUT[579],
		 lower_lower_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && merges_routeFrom[1])
	begin
	  v__h25583 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && merges_routeFrom[1])
	$write("(%0d) both avail %d ", v__h25583, merges_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && merges_routeFrom[1])
	$write(" data=0x%x",
	       merges_routeFrom[0] ?
		 merges_fi1_D_OUT[577:66] :
		 merges_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_routeFrom[0] ?
		 merges_fi1_D_OUT[65:2] :
		 merges_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && merges_routeFrom[1])
	$write(" user=0x%x",
	       merges_routeFrom[0] ?
		 merges_fi1_D_OUT[609:578] :
		 merges_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && merges_routeFrom[1])
	$write(" sop=%d",
	       merges_routeFrom[0] ?
		 merges_fi1_D_OUT[1] :
		 merges_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && merges_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_routeFrom_394_BIT_0_396_THEN_merges__ETC___d1427);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && !merges_routeFrom[1])
	begin
	  v__h25649 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && !merges_routeFrom[1])
	$write("(%0d) both avail ", v__h25649);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && !merges_routeFrom[1])
	$write(" data=0x%x",
	       merges_fi0HasPrio ?
		 merges_fi0_D_OUT[577:66] :
		 merges_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_fi0HasPrio ?
		 merges_fi0_D_OUT[65:2] :
		 merges_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && !merges_routeFrom[1])
	$write(" user=0x%x",
	       merges_fi0HasPrio ?
		 merges_fi0_D_OUT[609:578] :
		 merges_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && !merges_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1420);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && !merges_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_fi0HasPrio_399_THEN_merges_fi0_first_ETC___d1437);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_both_have_data && !merges_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && merges_1_routeFrom[1])
	begin
	  v__h26629 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && merges_1_routeFrom[1])
	$write("(%0d) both avail %d ", v__h26629, merges_1_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && merges_1_routeFrom[1])
	$write(" data=0x%x",
	       merges_1_routeFrom[0] ?
		 merges_1_fi1_D_OUT[577:66] :
		 merges_1_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_1_routeFrom[0] ?
		 merges_1_fi1_D_OUT[65:2] :
		 merges_1_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && merges_1_routeFrom[1])
	$write(" user=0x%x",
	       merges_1_routeFrom[0] ?
		 merges_1_fi1_D_OUT[609:578] :
		 merges_1_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && merges_1_routeFrom[1])
	$write(" sop=%d",
	       merges_1_routeFrom[0] ?
		 merges_1_fi1_D_OUT[1] :
		 merges_1_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_1_routeFrom_469_BIT_0_471_THEN_merge_ETC___d1502);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && !merges_1_routeFrom[1])
	begin
	  v__h26695 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && !merges_1_routeFrom[1])
	$write("(%0d) both avail ", v__h26695);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && !merges_1_routeFrom[1])
	$write(" data=0x%x",
	       merges_1_fi0HasPrio ?
		 merges_1_fi0_D_OUT[577:66] :
		 merges_1_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_1_fi0HasPrio ?
		 merges_1_fi0_D_OUT[65:2] :
		 merges_1_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && !merges_1_routeFrom[1])
	$write(" user=0x%x",
	       merges_1_fi0HasPrio ?
		 merges_1_fi0_D_OUT[609:578] :
		 merges_1_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && !merges_1_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1495);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && !merges_1_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_1_fi0HasPrio_474_THEN_merges_1_fi0_f_ETC___d1512);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_1_both_have_data && !merges_1_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && merges_2_routeFrom[1])
	begin
	  v__h27675 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && merges_2_routeFrom[1])
	$write("(%0d) both avail %d ", v__h27675, merges_2_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && merges_2_routeFrom[1])
	$write(" data=0x%x",
	       merges_2_routeFrom[0] ?
		 merges_2_fi1_D_OUT[577:66] :
		 merges_2_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_2_routeFrom[0] ?
		 merges_2_fi1_D_OUT[65:2] :
		 merges_2_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && merges_2_routeFrom[1])
	$write(" user=0x%x",
	       merges_2_routeFrom[0] ?
		 merges_2_fi1_D_OUT[609:578] :
		 merges_2_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && merges_2_routeFrom[1])
	$write(" sop=%d",
	       merges_2_routeFrom[0] ?
		 merges_2_fi1_D_OUT[1] :
		 merges_2_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && merges_2_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_2_routeFrom_544_BIT_0_546_THEN_merge_ETC___d1577);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && merges_2_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && !merges_2_routeFrom[1])
	begin
	  v__h27741 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && !merges_2_routeFrom[1])
	$write("(%0d) both avail ", v__h27741);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && !merges_2_routeFrom[1])
	$write(" data=0x%x",
	       merges_2_fi0HasPrio ?
		 merges_2_fi0_D_OUT[577:66] :
		 merges_2_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_2_fi0HasPrio ?
		 merges_2_fi0_D_OUT[65:2] :
		 merges_2_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && !merges_2_routeFrom[1])
	$write(" user=0x%x",
	       merges_2_fi0HasPrio ?
		 merges_2_fi0_D_OUT[609:578] :
		 merges_2_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && !merges_2_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1570);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && !merges_2_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_2_fi0HasPrio_549_THEN_merges_2_fi0_f_ETC___d1587);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_2_both_have_data && !merges_2_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && merges_3_routeFrom[1])
	begin
	  v__h28721 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && merges_3_routeFrom[1])
	$write("(%0d) both avail %d ", v__h28721, merges_3_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && merges_3_routeFrom[1])
	$write(" data=0x%x",
	       merges_3_routeFrom[0] ?
		 merges_3_fi1_D_OUT[577:66] :
		 merges_3_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_3_routeFrom[0] ?
		 merges_3_fi1_D_OUT[65:2] :
		 merges_3_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && merges_3_routeFrom[1])
	$write(" user=0x%x",
	       merges_3_routeFrom[0] ?
		 merges_3_fi1_D_OUT[609:578] :
		 merges_3_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && merges_3_routeFrom[1])
	$write(" sop=%d",
	       merges_3_routeFrom[0] ?
		 merges_3_fi1_D_OUT[1] :
		 merges_3_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && merges_3_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_3_routeFrom_619_BIT_0_621_THEN_merge_ETC___d1652);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && merges_3_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && !merges_3_routeFrom[1])
	begin
	  v__h28787 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && !merges_3_routeFrom[1])
	$write("(%0d) both avail ", v__h28787);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && !merges_3_routeFrom[1])
	$write(" data=0x%x",
	       merges_3_fi0HasPrio ?
		 merges_3_fi0_D_OUT[577:66] :
		 merges_3_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_3_fi0HasPrio ?
		 merges_3_fi0_D_OUT[65:2] :
		 merges_3_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && !merges_3_routeFrom[1])
	$write(" user=0x%x",
	       merges_3_fi0HasPrio ?
		 merges_3_fi0_D_OUT[609:578] :
		 merges_3_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && !merges_3_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1645);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && !merges_3_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_3_fi0HasPrio_624_THEN_merges_3_fi0_f_ETC___d1662);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_3_both_have_data && !merges_3_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && merges_4_routeFrom[1])
	begin
	  v__h29767 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && merges_4_routeFrom[1])
	$write("(%0d) both avail %d ", v__h29767, merges_4_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && merges_4_routeFrom[1])
	$write(" data=0x%x",
	       merges_4_routeFrom[0] ?
		 merges_4_fi1_D_OUT[577:66] :
		 merges_4_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_4_routeFrom[0] ?
		 merges_4_fi1_D_OUT[65:2] :
		 merges_4_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && merges_4_routeFrom[1])
	$write(" user=0x%x",
	       merges_4_routeFrom[0] ?
		 merges_4_fi1_D_OUT[609:578] :
		 merges_4_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && merges_4_routeFrom[1])
	$write(" sop=%d",
	       merges_4_routeFrom[0] ?
		 merges_4_fi1_D_OUT[1] :
		 merges_4_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && merges_4_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_4_routeFrom_694_BIT_0_696_THEN_merge_ETC___d1727);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && merges_4_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && !merges_4_routeFrom[1])
	begin
	  v__h29833 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && !merges_4_routeFrom[1])
	$write("(%0d) both avail ", v__h29833);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && !merges_4_routeFrom[1])
	$write(" data=0x%x",
	       merges_4_fi0HasPrio ?
		 merges_4_fi0_D_OUT[577:66] :
		 merges_4_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_4_fi0HasPrio ?
		 merges_4_fi0_D_OUT[65:2] :
		 merges_4_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && !merges_4_routeFrom[1])
	$write(" user=0x%x",
	       merges_4_fi0HasPrio ?
		 merges_4_fi0_D_OUT[609:578] :
		 merges_4_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && !merges_4_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1720);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && !merges_4_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_4_fi0HasPrio_699_THEN_merges_4_fi0_f_ETC___d1737);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_4_both_have_data && !merges_4_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route)
	$display("%x %x %d",
		 upper_merges_fo_D_OUT[609:578],
		 32'd0,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route && upper_merges_fo_D_OUT[580])
	begin
	  v__h33668 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route && upper_merges_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h33668,
		 $signed(32'd4),
		 upper_merges_fo_D_OUT[580],
		 upper_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route && !upper_merges_fo_D_OUT[580])
	begin
	  v__h33609 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route && !upper_merges_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h33609,
		 $signed(32'd0),
		 upper_merges_fo_D_OUT[580],
		 upper_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_4)
	$display("%x %x %d",
		 lower_merges_fo_D_OUT[609:578],
		 32'd4,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_4 && lower_merges_fo_D_OUT[580])
	begin
	  v__h35436 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_4 && lower_merges_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h35436,
		 $signed(32'd4),
		 !lower_merges_fo_D_OUT[580],
		 lower_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_4 && !lower_merges_fo_D_OUT[580])
	begin
	  v__h35489 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_4 && !lower_merges_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h35489,
		 $signed(32'd0),
		 !lower_merges_fo_D_OUT[580],
		 lower_merges_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && merges_5_routeFrom[1])
	begin
	  v__h30813 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && merges_5_routeFrom[1])
	$write("(%0d) both avail %d ", v__h30813, merges_5_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && merges_5_routeFrom[1])
	$write(" data=0x%x",
	       merges_5_routeFrom[0] ?
		 merges_5_fi1_D_OUT[577:66] :
		 merges_5_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_5_routeFrom[0] ?
		 merges_5_fi1_D_OUT[65:2] :
		 merges_5_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && merges_5_routeFrom[1])
	$write(" user=0x%x",
	       merges_5_routeFrom[0] ?
		 merges_5_fi1_D_OUT[609:578] :
		 merges_5_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && merges_5_routeFrom[1])
	$write(" sop=%d",
	       merges_5_routeFrom[0] ?
		 merges_5_fi1_D_OUT[1] :
		 merges_5_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && merges_5_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_5_routeFrom_769_BIT_0_771_THEN_merge_ETC___d1802);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && merges_5_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && !merges_5_routeFrom[1])
	begin
	  v__h30879 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && !merges_5_routeFrom[1])
	$write("(%0d) both avail ", v__h30879);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && !merges_5_routeFrom[1])
	$write(" data=0x%x",
	       merges_5_fi0HasPrio ?
		 merges_5_fi0_D_OUT[577:66] :
		 merges_5_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_5_fi0HasPrio ?
		 merges_5_fi0_D_OUT[65:2] :
		 merges_5_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && !merges_5_routeFrom[1])
	$write(" user=0x%x",
	       merges_5_fi0HasPrio ?
		 merges_5_fi0_D_OUT[609:578] :
		 merges_5_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && !merges_5_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1795);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && !merges_5_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_5_fi0HasPrio_774_THEN_merges_5_fi0_f_ETC___d1812);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_5_both_have_data && !merges_5_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_1)
	$display("%x %x %d",
		 upper_merges_1_fo_D_OUT[609:578],
		 32'd1,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_1 && upper_merges_1_fo_D_OUT[580])
	begin
	  v__h34102 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_1 && upper_merges_1_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h34102,
		 $signed(32'd5),
		 upper_merges_1_fo_D_OUT[580],
		 upper_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_1 && !upper_merges_1_fo_D_OUT[580])
	begin
	  v__h34048 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_1 && !upper_merges_1_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h34048,
		 $signed(32'd1),
		 upper_merges_1_fo_D_OUT[580],
		 upper_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_5)
	$display("%x %x %d",
		 lower_merges_1_fo_D_OUT[609:578],
		 32'd5,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_5 && lower_merges_1_fo_D_OUT[580])
	begin
	  v__h35874 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_5 && lower_merges_1_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h35874,
		 $signed(32'd5),
		 !lower_merges_1_fo_D_OUT[580],
		 lower_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_5 && !lower_merges_1_fo_D_OUT[580])
	begin
	  v__h35927 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_5 && !lower_merges_1_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h35927,
		 $signed(32'd1),
		 !lower_merges_1_fo_D_OUT[580],
		 lower_merges_1_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && merges_6_routeFrom[1])
	begin
	  v__h31859 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && merges_6_routeFrom[1])
	$write("(%0d) both avail %d ", v__h31859, merges_6_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && merges_6_routeFrom[1])
	$write(" data=0x%x",
	       merges_6_routeFrom[0] ?
		 merges_6_fi1_D_OUT[577:66] :
		 merges_6_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_6_routeFrom[0] ?
		 merges_6_fi1_D_OUT[65:2] :
		 merges_6_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && merges_6_routeFrom[1])
	$write(" user=0x%x",
	       merges_6_routeFrom[0] ?
		 merges_6_fi1_D_OUT[609:578] :
		 merges_6_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && merges_6_routeFrom[1])
	$write(" sop=%d",
	       merges_6_routeFrom[0] ?
		 merges_6_fi1_D_OUT[1] :
		 merges_6_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && merges_6_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_6_routeFrom_844_BIT_0_846_THEN_merge_ETC___d1877);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && merges_6_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && !merges_6_routeFrom[1])
	begin
	  v__h31925 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && !merges_6_routeFrom[1])
	$write("(%0d) both avail ", v__h31925);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && !merges_6_routeFrom[1])
	$write(" data=0x%x",
	       merges_6_fi0HasPrio ?
		 merges_6_fi0_D_OUT[577:66] :
		 merges_6_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_6_fi0HasPrio ?
		 merges_6_fi0_D_OUT[65:2] :
		 merges_6_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && !merges_6_routeFrom[1])
	$write(" user=0x%x",
	       merges_6_fi0HasPrio ?
		 merges_6_fi0_D_OUT[609:578] :
		 merges_6_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && !merges_6_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1870);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && !merges_6_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_6_fi0HasPrio_849_THEN_merges_6_fi0_f_ETC___d1887);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_6_both_have_data && !merges_6_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_2)
	$display("%x %x %d",
		 upper_merges_2_fo_D_OUT[609:578],
		 32'd2,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_2 && upper_merges_2_fo_D_OUT[580])
	begin
	  v__h34548 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_2 && upper_merges_2_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h34548,
		 $signed(32'd6),
		 upper_merges_2_fo_D_OUT[580],
		 upper_merges_2_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_2 && !upper_merges_2_fo_D_OUT[580])
	begin
	  v__h34494 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_2 && !upper_merges_2_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h34494,
		 $signed(32'd2),
		 upper_merges_2_fo_D_OUT[580],
		 upper_merges_2_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_6)
	$display("%x %x %d",
		 lower_merges_2_fo_D_OUT[609:578],
		 32'd6,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_6 && lower_merges_2_fo_D_OUT[580])
	begin
	  v__h36324 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_6 && lower_merges_2_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h36324,
		 $signed(32'd6),
		 !lower_merges_2_fo_D_OUT[580],
		 lower_merges_2_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_6 && !lower_merges_2_fo_D_OUT[580])
	begin
	  v__h36377 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_6 && !lower_merges_2_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h36377,
		 $signed(32'd2),
		 !lower_merges_2_fo_D_OUT[580],
		 lower_merges_2_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && merges_7_routeFrom[1])
	begin
	  v__h32905 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && merges_7_routeFrom[1])
	$write("(%0d) both avail %d ", v__h32905, merges_7_routeFrom[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && merges_7_routeFrom[1])
	$write(" data=0x%x",
	       merges_7_routeFrom[0] ?
		 merges_7_fi1_D_OUT[577:66] :
		 merges_7_fi0_D_OUT[577:66],
	       " mask=0x%x",
	       merges_7_routeFrom[0] ?
		 merges_7_fi1_D_OUT[65:2] :
		 merges_7_fi0_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && merges_7_routeFrom[1])
	$write(" user=0x%x",
	       merges_7_routeFrom[0] ?
		 merges_7_fi1_D_OUT[609:578] :
		 merges_7_fi0_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && merges_7_routeFrom[1])
	$write(" sop=%d",
	       merges_7_routeFrom[0] ?
		 merges_7_fi1_D_OUT[1] :
		 merges_7_fi0_D_OUT[1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && merges_7_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_7_routeFrom_919_BIT_0_921_THEN_merge_ETC___d1952);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && merges_7_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && !merges_7_routeFrom[1])
	begin
	  v__h32971 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && !merges_7_routeFrom[1])
	$write("(%0d) both avail ", v__h32971);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && !merges_7_routeFrom[1])
	$write(" data=0x%x",
	       merges_7_fi0HasPrio ?
		 merges_7_fi0_D_OUT[577:66] :
		 merges_7_fi1_D_OUT[577:66],
	       " mask=0x%x",
	       merges_7_fi0HasPrio ?
		 merges_7_fi0_D_OUT[65:2] :
		 merges_7_fi1_D_OUT[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && !merges_7_routeFrom[1])
	$write(" user=0x%x",
	       merges_7_fi0HasPrio ?
		 merges_7_fi0_D_OUT[609:578] :
		 merges_7_fi1_D_OUT[609:578]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && !merges_7_routeFrom[1])
	$write(" sop=%d",
	       IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1945);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && !merges_7_routeFrom[1])
	$write(" eop=%d",
	       IF_merges_7_fi0HasPrio_924_THEN_merges_7_fi0_f_ETC___d1962);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_merges_7_both_have_data && !merges_7_routeFrom[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_3)
	$display("%x %x %d",
		 upper_merges_3_fo_D_OUT[609:578],
		 32'd3,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_3 && upper_merges_3_fo_D_OUT[580])
	begin
	  v__h35006 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_3 && upper_merges_3_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h35006,
		 $signed(32'd7),
		 upper_merges_3_fo_D_OUT[580],
		 upper_merges_3_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_3 && !upper_merges_3_fo_D_OUT[580])
	begin
	  v__h34952 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_3 && !upper_merges_3_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h34952,
		 $signed(32'd3),
		 upper_merges_3_fo_D_OUT[580],
		 upper_merges_3_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_7)
	$display("%x %x %d",
		 lower_merges_3_fo_D_OUT[609:578],
		 32'd7,
		 $signed(32'd3));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_7 && lower_merges_3_fo_D_OUT[580])
	begin
	  v__h36786 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_7 && lower_merges_3_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h36786,
		 $signed(32'd7),
		 !lower_merges_3_fo_D_OUT[580],
		 lower_merges_3_fo_D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_7 && !lower_merges_3_fo_D_OUT[580])
	begin
	  v__h36839 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_route_7 && !lower_merges_3_fo_D_OUT[580])
	$display("(%0d) XBar out =%0d flip=%d %h",
		 v__h36839,
		 $signed(32'd3),
		 !lower_merges_3_fo_D_OUT[580],
		 lower_merges_3_fo_D_OUT);
  end
  // synopsys translate_on
endmodule  // mkXBar_synth_64

